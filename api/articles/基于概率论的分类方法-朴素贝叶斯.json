{"title":"基于贝叶斯决策理论的分类方法","slug":"基于概率论的分类方法-朴素贝叶斯","date":"2020-12-24T14:19:00.000Z","updated":"2022-09-30T06:56:37.192Z","comments":true,"path":"api/articles/基于概率论的分类方法-朴素贝叶斯.json","excerpt":null,"covers":["/.top//attachment:e36f25cc-1cec-4995-809d-c7812f629c99.png","/.top//attachment:40d76e00-9bfb-4c92-af12-2257b8e49fc1.png","/.top//attachment:b6ba6689-3ad1-4a37-96c0-ccc2326b99a8.png","/.top//attachment:4ca58d34-234e-4fa6-b572-4b591bd36e18.png","/.top//attachment:40c1d39c-159e-4c7f-a811-45a728741340.png","https://oceaneyes.top/img/zhishigroup.jpg","https://oceaneyes.top/img/alipay.jpg","https://oceaneyes.top/img/wechatpay.jpg"],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"基于贝叶斯决策理论的分类方法\">基于贝叶斯决策理论的分类方法</h2>\n<p><strong>朴素贝叶斯是贝叶斯决策理论的一部分</strong> -\n优点：在数据较少的情况下仍然有效，可以处理多类别问题 -\n缺点：对于输入数据的准备方式较为敏感 - 适用数据类型：标称型数据</p>\n<p><em>标称型：一般在有限的数据中取，而且只存在‘是’和‘否’两种不同的结果（一般用于分类）</em>\n<em>数值型：可以在无限的数据中取，而且数值比较具体化，例如4.02,6.23这种值（一般用于回归分析）</em></p>\n<h4 id=\"贝叶斯决策理论的核心思想即选择具有最高概率的决策\"><strong>贝叶斯决策理论的核心思想，即选择具有最高概率的决策</strong></h4>\n<ul>\n<li><p>假设现在我们有一个数据集，它由两类数据组成，数据分布如图 <img src=\"/.top//attachment:e36f25cc-1cec-4995-809d-c7812f629c99.png\" alt=\"image.png\"></p></li>\n<li><p>我们现在用p1(x,y)表示数据点(x,y)属于类别1（图中用圆点表示的类别）的概率，用p2(x,y)表示数据点(x,y)属于类别2（图中用三角形表示的类别）的概率，那么对于一个新数据点(x,y)，可以用下面的规则来判断它的类别：</p></li>\n<li><p>如果 p1(x,y) &gt; p2(x,y)，那么类别为1</p></li>\n<li><p>如果 p2(x,y) &gt; p1(x,y)，那么类别为2</p></li>\n<li><p><strong>计算分类的方法</strong></p></li>\n<li><p>使用kNN，进行1000次距离计算；</p></li>\n<li><p>使用决策树，分别沿x轴、y轴划分数据；</p></li>\n<li><p>计算数据点属于每个类别的概率，并进行比较</p></li>\n</ul>\n<h4 id=\"条件概率\"><strong>条件概率</strong></h4>\n<p><img src=\"/.top//attachment:40d76e00-9bfb-4c92-af12-2257b8e49fc1.png\" alt=\"image.png\"> -\n计算从B桶中取到灰色石头的概率的办法，这就是所谓的条件概率（conditionalprobability）。假定计算的是从B桶取到灰色石头的概率，这个概率可以记作P(gray|bucketB)，\n-\n我们称之为“在已知石头出自B桶的条件下，取出灰色石头的概率”。不难得到，P(gray|bucketA)值为2/4，P(gray|bucketB)\n的值为1/3。 <img src=\"/.top//attachment:b6ba6689-3ad1-4a37-96c0-ccc2326b99a8.png\" alt=\"image.png\"></p>\n<h2 id=\"使用条件概率分类\"><strong>使用条件概率分类</strong></h2>\n<ul>\n<li><p>之前贝叶斯决策理论要求计算两个概率p1(x, y)和p2(x, y)：</p></li>\n<li><p>如果p1(x, y) &gt; p2(x, y)，那么属于类别1；</p></li>\n<li><p>如果p2(x, y) &gt; p1(x, y)，那么属于类别2。</p></li>\n<li><p>使用p1( )和p2(\n)只是为了尽可能简化描述，真正需要计算和比较的是p(c1|x, y)和p(c2|x,\ny)。这些符号所代表的具体意义是：</p></li>\n<li><p>给定某个由x、y表示的数据点，那么该数据点来自类别c1的概率是多少？</p></li>\n<li><p>数据点来自类别c2的概率又是多少？ <img src=\"/.top//attachment:4ca58d34-234e-4fa6-b572-4b591bd36e18.png\" alt=\"image.png\"></p></li>\n<li><p>使用这些定义，可以定义贝叶斯分类准则为：</p></li>\n<li><p>如果P(c1|x, y) &gt; P(c2|x, y)，那么属于类别c1。</p></li>\n<li><p>如果P(c1|x, y) &lt; P(c2|x, y)，那么属于类别c2。</p></li>\n</ul>\n<h2 id=\"使用朴素贝叶斯进行文本分类\"><strong>使用朴素贝叶斯进行文本分类</strong></h2>\n<ul>\n<li><p>朴素贝叶斯的一般过程</p></li>\n<li><p>收集数据：</p></li>\n<li><p>准备数据：需要数值型 或者布尔型数据</p></li>\n<li><p>分析数据：有大量特征时，绘制特征作用不大，\n此时使用直方图效果更好</p></li>\n<li><p>训练算法：计算不同的独立特征的条件概率</p></li>\n<li><p>测试算法：计算错误率</p></li>\n<li><p>使用算法：一个常见的朴素贝叶斯应用是文档分类，可以任意的分类场景中使用朴素贝叶斯分类器</p></li>\n<li><p>特征之间相互独立（independence）：指的是统计意义上的独立，即一个特征或者单词出现的可能性与它和其他单词相邻没有关系</p></li>\n<li><p>每个特征同等重要</p></li>\n</ul>\n<h2 id=\"文本分类\"><strong>文本分类</strong></h2>\n<h4 id=\"准备数据从文本中构建词向量\"><strong>准备数据：从文本中构建词向量</strong></h4>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> sys</span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> numpy <span class=\"im\">as</span> np</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">print</span>(sys.executable)</span></code></pre></div>\n<pre><code>/Users/gaozhiyong/Documents/pyenv/pyenv3.6/bin/python</code></pre>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> loadDataSet():</span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    postingList <span class=\"op\">=</span> [</span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>        [<span class=\"st\">&#39;my&#39;</span>,<span class=\"st\">&#39;dog&#39;</span>,<span class=\"st\">&#39;has&#39;</span>,<span class=\"st\">&#39;flea&#39;</span>,<span class=\"st\">&#39;problems&#39;</span>,<span class=\"st\">&#39;help&#39;</span>,<span class=\"st\">&#39;please&#39;</span>],</span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        [<span class=\"st\">&#39;maybe&#39;</span>,<span class=\"st\">&#39;not&#39;</span>,<span class=\"st\">&#39;take&#39;</span>,<span class=\"st\">&#39;him&#39;</span>,<span class=\"st\">&#39;to&#39;</span>,<span class=\"st\">&#39;dog&#39;</span>,<span class=\"st\">&#39;park&#39;</span>,<span class=\"st\">&#39;stupid&#39;</span>],</span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        [<span class=\"st\">&#39;my&#39;</span>,<span class=\"st\">&#39;dalmation&#39;</span>,<span class=\"st\">&#39;is&#39;</span>,<span class=\"st\">&#39;so&#39;</span>,<span class=\"st\">&#39;cute&#39;</span>,<span class=\"st\">&#39;I&#39;</span>,<span class=\"st\">&#39;love&#39;</span>,<span class=\"st\">&#39;him&#39;</span>],</span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        [<span class=\"st\">&#39;stop&#39;</span>,<span class=\"st\">&#39;posting&#39;</span>,<span class=\"st\">&#39;stupid&#39;</span>,<span class=\"st\">&#39;worthless&#39;</span>,<span class=\"st\">&#39;garbage&#39;</span>],</span>\n<span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        [<span class=\"st\">&#39;mr&#39;</span>,<span class=\"st\">&#39;licks&#39;</span>,<span class=\"st\">&#39;ate&#39;</span>,<span class=\"st\">&#39;my&#39;</span>,<span class=\"st\">&#39;steak&#39;</span>,<span class=\"st\">&#39;how&#39;</span>,<span class=\"st\">&#39;to&#39;</span>,<span class=\"st\">&#39;stop&#39;</span>,<span class=\"st\">&#39;him&#39;</span>],</span>\n<span id=\"cb3-8\"><a href=\"#cb3-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>        [<span class=\"st\">&#39;quit&#39;</span>,<span class=\"st\">&#39;buying&#39;</span>,<span class=\"st\">&#39;worthless&#39;</span>,<span class=\"st\">&#39;dog&#39;</span>,<span class=\"st\">&#39;food&#39;</span>,<span class=\"st\">&#39;stupid&#39;</span>]</span>\n<span id=\"cb3-9\"><a href=\"#cb3-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ]</span>\n<span id=\"cb3-10\"><a href=\"#cb3-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    classVec <span class=\"op\">=</span> [<span class=\"dv\">0</span>,<span class=\"dv\">1</span>,<span class=\"dv\">0</span>,<span class=\"dv\">1</span>,<span class=\"dv\">0</span>,<span class=\"dv\">1</span>]</span>\n<span id=\"cb3-11\"><a href=\"#cb3-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> postingList,classVec</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> createVocabList(dataSet):</span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    vocabSet <span class=\"op\">=</span> <span class=\"bu\">set</span>([])    <span class=\"co\">#创建一个空集</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">for</span> document <span class=\"kw\">in</span> dataSet:</span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#         print(&#39;document&#39;,document)</span></span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#         print(&quot;vocabSet之前&quot;,vocabSet)</span></span>\n<span id=\"cb4-6\"><a href=\"#cb4-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        vocabSet <span class=\"op\">=</span> vocabSet <span class=\"op\">|</span> <span class=\"bu\">set</span>(document)  <span class=\"co\">#创建两个集合的并集</span></span>\n<span id=\"cb4-7\"><a href=\"#cb4-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#         print(&quot;vocabSet之后&quot;,vocabSet)</span></span>\n<span id=\"cb4-8\"><a href=\"#cb4-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> <span class=\"bu\">list</span>(vocabSet)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> setOfWord2Vec(vocabList,inputSet):</span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    returnVec <span class=\"op\">=</span> [<span class=\"dv\">0</span>] <span class=\"op\">*</span> <span class=\"bu\">len</span>(vocabList)</span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">for</span> word <span class=\"kw\">in</span> inputSet:</span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">if</span> word <span class=\"kw\">in</span> vocabList:</span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>            returnVec[vocabList.index(word)] <span class=\"op\">=</span> <span class=\"dv\">1</span></span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">else</span>:</span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"bu\">print</span>(<span class=\"st\">&quot;the word: </span><span class=\"sc\">%s</span><span class=\"st\"> is not in my Vocabulary!&quot;</span> <span class=\"op\">%</span> word )</span>\n<span id=\"cb5-8\"><a href=\"#cb5-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> returnVec</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb6\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>listOPosts,listClasses <span class=\"op\">=</span> loadDataSet()</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb7\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>listOPosts</span></code></pre></div>\n<pre><code>[[&#39;my&#39;, &#39;dog&#39;, &#39;has&#39;, &#39;flea&#39;, &#39;problems&#39;, &#39;help&#39;, &#39;please&#39;],\n [&#39;maybe&#39;, &#39;not&#39;, &#39;take&#39;, &#39;him&#39;, &#39;to&#39;, &#39;dog&#39;, &#39;park&#39;, &#39;stupid&#39;],\n [&#39;my&#39;, &#39;dalmation&#39;, &#39;is&#39;, &#39;so&#39;, &#39;cute&#39;, &#39;I&#39;, &#39;love&#39;, &#39;him&#39;],\n [&#39;stop&#39;, &#39;posting&#39;, &#39;stupid&#39;, &#39;worthless&#39;, &#39;garbage&#39;],\n [&#39;mr&#39;, &#39;licks&#39;, &#39;ate&#39;, &#39;my&#39;, &#39;steak&#39;, &#39;how&#39;, &#39;to&#39;, &#39;stop&#39;, &#39;him&#39;],\n [&#39;quit&#39;, &#39;buying&#39;, &#39;worthless&#39;, &#39;dog&#39;, &#39;food&#39;, &#39;stupid&#39;]]</code></pre>\n<div class=\"sourceCode\" id=\"cb9\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>listClasses</span></code></pre></div>\n<pre><code>[0, 1, 0, 1, 0, 1]</code></pre>\n<div class=\"sourceCode\" id=\"cb11\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>myVocabList <span class=\"op\">=</span> createVocabList(listOPosts)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb12\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb12-1\"><a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>myVocabList</span></code></pre></div>\n<pre><code>[&#39;stop&#39;,\n &#39;dalmation&#39;,\n &#39;park&#39;,\n &#39;please&#39;,\n &#39;my&#39;,\n &#39;to&#39;,\n &#39;problems&#39;,\n &#39;posting&#39;,\n &#39;flea&#39;,\n &#39;steak&#39;,\n &#39;him&#39;,\n &#39;take&#39;,\n &#39;ate&#39;,\n &#39;is&#39;,\n &#39;help&#39;,\n &#39;how&#39;,\n &#39;cute&#39;,\n &#39;has&#39;,\n &#39;maybe&#39;,\n &#39;food&#39;,\n &#39;buying&#39;,\n &#39;stupid&#39;,\n &#39;licks&#39;,\n &#39;mr&#39;,\n &#39;dog&#39;,\n &#39;not&#39;,\n &#39;love&#39;,\n &#39;worthless&#39;,\n &#39;I&#39;,\n &#39;so&#39;,\n &#39;quit&#39;,\n &#39;garbage&#39;]</code></pre>\n<div class=\"sourceCode\" id=\"cb14\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>listOPosts[<span class=\"dv\">0</span>]</span></code></pre></div>\n<pre><code>[&#39;my&#39;, &#39;dog&#39;, &#39;has&#39;, &#39;flea&#39;, &#39;problems&#39;, &#39;help&#39;, &#39;please&#39;]</code></pre>\n<div class=\"sourceCode\" id=\"cb16\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>setOfWord2Vec(myVocabList,listOPosts[<span class=\"dv\">0</span>])</span></code></pre></div>\n<pre><code>[0,\n 0,\n 0,\n 1,\n 1,\n 0,\n 1,\n 0,\n 1,\n 0,\n 0,\n 0,\n 0,\n 0,\n 1,\n 0,\n 0,\n 1,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 1,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0]</code></pre>\n<div class=\"sourceCode\" id=\"cb18\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb18-1\"><a href=\"#cb18-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>setOfWord2Vec(myVocabList,listOPosts[<span class=\"dv\">3</span>])</span></code></pre></div>\n<pre><code>[1,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 1,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 1,\n 0,\n 0,\n 0,\n 0,\n 0,\n 1,\n 0,\n 0,\n 0,\n 1]</code></pre>\n<h4 id=\"训练算法从词向量计算概率\"><strong>训练算法：从词向量计算概率</strong></h4>\n<p><img src=\"/.top//attachment:40c1d39c-159e-4c7f-a811-45a728741340.png\" alt=\"image.png\"> -\n使用上述公式，对每个类计算该值，然后比较这两个概率值的大小。 -\n如何计算呢？ -\n首先可以通过类别i（侮辱性留言或非侮辱性留言）中文档数除以总的文档数来计算概率p(ci)。\n- 接下来计算p(w|ci)，这里就要用到朴素贝叶斯假设。 -\n如果将w展开为一个个独立特征，那么就可以将上述概率写作p(w0,w1,w2..wN|ci)。\n-\n这里假设所有词都互相独立，该假设也称作条件独立性假设，它意味着可以使p(w0|ci)p(w1|ci)p(w2|ci)...p(wN|ci)来计算上述概率</p>\n<h5 id=\"代码逻辑\"><strong>代码逻辑</strong></h5>\n<ul>\n<li>计算每个类别中的文档数目</li>\n<li>对每篇训练文档</li>\n<li>对每个类别\n<ul>\n<li>如果词条出现在文档中 --- 增加该词条的计数值</li>\n<li>增加所有词条的计数值</li>\n</ul></li>\n<li>对每个类别\n<ul>\n<li>对每个词条\n<ul>\n<li>将 <strong>该词条的数目</strong> 除以 <strong>总词数目</strong> 得到\n<strong>条件概率</strong></li>\n</ul></li>\n</ul></li>\n<li>返回每个类别的条件概率</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb20\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb20-1\"><a href=\"#cb20-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> trainNB0(trainMatrix,trainCategory):</span>\n<span id=\"cb20-2\"><a href=\"#cb20-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    numTrainDocs <span class=\"op\">=</span> <span class=\"bu\">len</span>(trainMatrix)</span>\n<span id=\"cb20-3\"><a href=\"#cb20-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    numWords <span class=\"op\">=</span> <span class=\"bu\">len</span>(trainMatrix[<span class=\"dv\">0</span>])</span>\n<span id=\"cb20-4\"><a href=\"#cb20-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pAbusive <span class=\"op\">=</span> <span class=\"bu\">sum</span>(trainCategory) <span class=\"op\">/</span> <span class=\"bu\">float</span>(numTrainDocs)</span>\n<span id=\"cb20-5\"><a href=\"#cb20-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0Num <span class=\"op\">=</span> np.zeros(numWords) </span>\n<span id=\"cb20-6\"><a href=\"#cb20-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p1Num <span class=\"op\">=</span> np.zeros(numWords)</span>\n<span id=\"cb20-7\"><a href=\"#cb20-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0Denom <span class=\"op\">=</span> <span class=\"fl\">0.0</span></span>\n<span id=\"cb20-8\"><a href=\"#cb20-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p1Denom <span class=\"op\">=</span> <span class=\"fl\">0.0</span></span>\n<span id=\"cb20-9\"><a href=\"#cb20-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">for</span> i <span class=\"kw\">in</span> <span class=\"bu\">range</span>(numTrainDocs):</span>\n<span id=\"cb20-10\"><a href=\"#cb20-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">try</span>:</span>\n<span id=\"cb20-11\"><a href=\"#cb20-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">if</span> trainCategory[i] <span class=\"op\">==</span> <span class=\"dv\">1</span>:</span>\n<span id=\"cb20-12\"><a href=\"#cb20-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p1Num <span class=\"op\">+=</span> trainMatrix[i]</span>\n<span id=\"cb20-13\"><a href=\"#cb20-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p1Denom <span class=\"op\">+=</span> <span class=\"bu\">sum</span>(trainMatrix[i])</span>\n<span id=\"cb20-14\"><a href=\"#cb20-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">else</span>:</span>\n<span id=\"cb20-15\"><a href=\"#cb20-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p0Num <span class=\"op\">+=</span> trainMatrix[i]</span>\n<span id=\"cb20-16\"><a href=\"#cb20-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p0Denom <span class=\"op\">+=</span> <span class=\"bu\">sum</span>(trainMatrix[i])</span>\n<span id=\"cb20-17\"><a href=\"#cb20-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">except</span>:</span>\n<span id=\"cb20-18\"><a href=\"#cb20-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">continue</span></span>\n<span id=\"cb20-19\"><a href=\"#cb20-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p1Vect <span class=\"op\">=</span> p1Num <span class=\"op\">/</span> p1Denom</span>\n<span id=\"cb20-20\"><a href=\"#cb20-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0Vect <span class=\"op\">=</span> p0Num <span class=\"op\">/</span> p0Denom</span>\n<span id=\"cb20-21\"><a href=\"#cb20-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> p0Vect,p1Vect,pAbusive</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb21\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb21-1\"><a href=\"#cb21-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>listOPosts,listClasses <span class=\"op\">=</span> loadDataSet()</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb22\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb22-1\"><a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>myVocabList <span class=\"op\">=</span> createVocabList(listOPosts)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb23\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb23-1\"><a href=\"#cb23-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>trainMat <span class=\"op\">=</span> []</span>\n<span id=\"cb23-2\"><a href=\"#cb23-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> postinDoc <span class=\"kw\">in</span> listOPosts:</span>\n<span id=\"cb23-3\"><a href=\"#cb23-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    trainMat.append(setOfWord2Vec(myVocabList,postinDoc))</span>\n<span id=\"cb23-4\"><a href=\"#cb23-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>p0V,p1V,pAb <span class=\"op\">=</span> trainNB0(trainMat,listClasses)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb24\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb24-1\"><a href=\"#cb24-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>pAb</span></code></pre></div>\n<pre><code>0.5</code></pre>\n<div class=\"sourceCode\" id=\"cb26\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb26-1\"><a href=\"#cb26-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>p0V</span></code></pre></div>\n<pre><code>array([0.04166667, 0.04166667, 0.        , 0.04166667, 0.125     ,\n       0.04166667, 0.04166667, 0.        , 0.04166667, 0.04166667,\n       0.08333333, 0.        , 0.04166667, 0.04166667, 0.04166667,\n       0.04166667, 0.04166667, 0.04166667, 0.        , 0.        ,\n       0.        , 0.        , 0.04166667, 0.04166667, 0.04166667,\n       0.        , 0.04166667, 0.        , 0.04166667, 0.04166667,\n       0.        , 0.        ])</code></pre>\n<div class=\"sourceCode\" id=\"cb28\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb28-1\"><a href=\"#cb28-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>p1V</span></code></pre></div>\n<pre><code>array([0.05263158, 0.        , 0.05263158, 0.        , 0.        ,\n       0.05263158, 0.        , 0.05263158, 0.        , 0.        ,\n       0.05263158, 0.05263158, 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        , 0.05263158, 0.05263158,\n       0.05263158, 0.15789474, 0.        , 0.        , 0.10526316,\n       0.05263158, 0.        , 0.10526316, 0.        , 0.        ,\n       0.05263158, 0.05263158])</code></pre>\n<h4 id=\"测试算法根据现实情况修改分类器\"><strong>测试算法：根据现实情况修改分类器</strong></h4>\n<div class=\"sourceCode\" id=\"cb30\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb30-1\"><a href=\"#cb30-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> trainNB1(trainMatrix,trainCategory):</span>\n<span id=\"cb30-2\"><a href=\"#cb30-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    numTrainDocs <span class=\"op\">=</span> <span class=\"bu\">len</span>(trainMatrix)</span>\n<span id=\"cb30-3\"><a href=\"#cb30-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    numWords <span class=\"op\">=</span> <span class=\"bu\">len</span>(trainMatrix[<span class=\"dv\">0</span>])</span>\n<span id=\"cb30-4\"><a href=\"#cb30-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pAbusive <span class=\"op\">=</span> <span class=\"bu\">sum</span>(trainCategory) <span class=\"op\">/</span> <span class=\"bu\">float</span>(numTrainDocs)</span>\n<span id=\"cb30-5\"><a href=\"#cb30-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0Num <span class=\"op\">=</span> np.ones(numWords) </span>\n<span id=\"cb30-6\"><a href=\"#cb30-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p1Num <span class=\"op\">=</span> np.ones(numWords)</span>\n<span id=\"cb30-7\"><a href=\"#cb30-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0Denom <span class=\"op\">=</span> <span class=\"fl\">2.0</span></span>\n<span id=\"cb30-8\"><a href=\"#cb30-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p1Denom <span class=\"op\">=</span> <span class=\"fl\">2.0</span></span>\n<span id=\"cb30-9\"><a href=\"#cb30-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">for</span> i <span class=\"kw\">in</span> <span class=\"bu\">range</span>(numTrainDocs):</span>\n<span id=\"cb30-10\"><a href=\"#cb30-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">try</span>:</span>\n<span id=\"cb30-11\"><a href=\"#cb30-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">if</span> trainCategory[i] <span class=\"op\">==</span> <span class=\"dv\">1</span>:</span>\n<span id=\"cb30-12\"><a href=\"#cb30-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p1Num <span class=\"op\">+=</span> trainMatrix[i]</span>\n<span id=\"cb30-13\"><a href=\"#cb30-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p1Denom <span class=\"op\">+=</span> <span class=\"bu\">sum</span>(trainMatrix[i])</span>\n<span id=\"cb30-14\"><a href=\"#cb30-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">else</span>:</span>\n<span id=\"cb30-15\"><a href=\"#cb30-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p0Num <span class=\"op\">+=</span> trainMatrix[i]</span>\n<span id=\"cb30-16\"><a href=\"#cb30-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p0Denom <span class=\"op\">+=</span> <span class=\"bu\">sum</span>(trainMatrix[i])</span>\n<span id=\"cb30-17\"><a href=\"#cb30-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">except</span>:</span>\n<span id=\"cb30-18\"><a href=\"#cb30-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">continue</span></span>\n<span id=\"cb30-19\"><a href=\"#cb30-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p1Vect <span class=\"op\">=</span> np.log(p1Num <span class=\"op\">/</span> p1Denom)</span>\n<span id=\"cb30-20\"><a href=\"#cb30-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0Vect <span class=\"op\">=</span> np.log(p0Num <span class=\"op\">/</span> p0Denom)</span>\n<span id=\"cb30-21\"><a href=\"#cb30-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> p0Vect,p1Vect,pAbusive</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb31\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb31-1\"><a href=\"#cb31-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> classifyNB(vec2Classify,p0Vec,p1Vec,pClass1):</span>\n<span id=\"cb31-2\"><a href=\"#cb31-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p1<span class=\"op\">=</span><span class=\"bu\">sum</span>(vec2Classify <span class=\"op\">*</span> p1Vec) <span class=\"op\">+</span> np.log(pClass1)</span>\n<span id=\"cb31-3\"><a href=\"#cb31-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0<span class=\"op\">=</span> <span class=\"bu\">sum</span>(vec2Classify <span class=\"op\">*</span> p0Vec) <span class=\"op\">+</span> np.log(<span class=\"fl\">1.0</span><span class=\"op\">-</span> pClass1)</span>\n<span id=\"cb31-4\"><a href=\"#cb31-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> p1<span class=\"op\">&gt;</span>p0:</span>\n<span id=\"cb31-5\"><a href=\"#cb31-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"dv\">1</span></span>\n<span id=\"cb31-6\"><a href=\"#cb31-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">else</span>:</span>\n<span id=\"cb31-7\"><a href=\"#cb31-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"dv\">0</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb32\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb32-1\"><a href=\"#cb32-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> testingNB():</span>\n<span id=\"cb32-2\"><a href=\"#cb32-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    listOPosts,listClasses <span class=\"op\">=</span> loadDataSet()</span>\n<span id=\"cb32-3\"><a href=\"#cb32-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    myVocabList <span class=\"op\">=</span> createVocabList(listOPosts)</span>\n<span id=\"cb32-4\"><a href=\"#cb32-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    trainMat <span class=\"op\">=</span> []</span>\n<span id=\"cb32-5\"><a href=\"#cb32-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">for</span> postinDoc <span class=\"kw\">in</span> listOPosts:</span>\n<span id=\"cb32-6\"><a href=\"#cb32-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        trainMat.append(setOfWord2Vec(myVocabList,postinDoc))</span>\n<span id=\"cb32-7\"><a href=\"#cb32-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0V,p1V,pAb <span class=\"op\">=</span> trainNB1(np.array(trainMat), np.array(listClasses))</span>\n<span id=\"cb32-8\"><a href=\"#cb32-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    testEntry1 <span class=\"op\">=</span> [<span class=\"st\">&#39;love&#39;</span>,<span class=\"st\">&#39;my&#39;</span>,<span class=\"st\">&#39;dalmation&#39;</span>]</span>\n<span id=\"cb32-9\"><a href=\"#cb32-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    thisDoc <span class=\"op\">=</span> np.array(setOfWord2Vec(myVocabList,testEntry1))</span>\n<span id=\"cb32-10\"><a href=\"#cb32-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">print</span>(testEntry1,<span class=\"st\">&#39;classified as: &#39;</span>,classifyNB(thisDoc,p0V,p1V,pAb))</span>\n<span id=\"cb32-11\"><a href=\"#cb32-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    </span>\n<span id=\"cb32-12\"><a href=\"#cb32-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    testEntry2 <span class=\"op\">=</span> [<span class=\"st\">&#39;stupid&#39;</span>,<span class=\"st\">&#39;garbage&#39;</span>]</span>\n<span id=\"cb32-13\"><a href=\"#cb32-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    thisDoc <span class=\"op\">=</span> np.array(setOfWord2Vec(myVocabList,testEntry2))</span>\n<span id=\"cb32-14\"><a href=\"#cb32-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">print</span>(testEntry2,<span class=\"st\">&#39;classified as: &#39;</span>,classifyNB(thisDoc,p0V,p1V,pAb))</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb33\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb33-1\"><a href=\"#cb33-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>testingNB()</span></code></pre></div>\n<pre><code>[&#39;love&#39;, &#39;my&#39;, &#39;dalmation&#39;] classified as:  0\n[&#39;stupid&#39;, &#39;garbage&#39;] classified as:  1</code></pre>\n<h4 id=\"准备数据文档词袋模型\"><strong>准备数据：文档词袋模型</strong></h4>\n<ul>\n<li>将每个词的出现与否作为一个特征，这可以被描述为词集模型(set-of-words\nmodel)。</li>\n<li>如果一个词在文档中出现不止一次，这可能意味着包含该词是否出现在文档中所不能表\n达的某种信息，这种方法被称为词袋模型(bag-of-words model)</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb35\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb35-1\"><a href=\"#cb35-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> bagOfWords2VecMN(vocabList,inputSet):</span>\n<span id=\"cb35-2\"><a href=\"#cb35-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    returnVec <span class=\"op\">=</span> [<span class=\"dv\">0</span>] <span class=\"op\">*</span> <span class=\"bu\">len</span>(vocabList)</span>\n<span id=\"cb35-3\"><a href=\"#cb35-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">for</span> word <span class=\"kw\">in</span> inputSet:</span>\n<span id=\"cb35-4\"><a href=\"#cb35-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">if</span> word <span class=\"kw\">in</span> vocabList:</span>\n<span id=\"cb35-5\"><a href=\"#cb35-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>            returnVec[vocabList.index[word]] <span class=\"op\">+=</span> <span class=\"dv\">1</span></span>\n<span id=\"cb35-6\"><a href=\"#cb35-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> returnVec</span></code></pre></div>\n<hr>\n<h3 id=\"about-me\">About ME</h3>\n<h5 id=\"读书城南-在未来面前我们都是孩子\">👋 读书城南，🤔\n在未来面前，我们都是孩子～</h5>\n<ul>\n<li>📙\n一个热衷于探索学习新方向、新事物的智能产品经理，闲暇时间喜欢coding💻、画图🎨、音乐🎵、学习ing~</li>\n</ul>\n<h5 id=\"social-media\">👋 Social Media</h5>\n<ul>\n<li><p>🛠️ Blog: <a href=\"http://oceaneyes.top\">http://oceaneyes.top</a></p></li>\n<li><p>⚡ PM导航: <a href=\"https://pmhub.oceangzy.top\">https://pmhub.oceangzy.top</a></p></li>\n<li><p>☘️ CNBLOG: <a href=\"https://www.cnblogs.com/oceaneyes-gzy/\">https://www.cnblogs.com/oceaneyes-gzy/</a></p></li>\n<li><p>🌱 AI PRJ自己部署的一些算法demo: <a href=\"http://ai.oceangzy.top/\">http://ai.oceangzy.top/</a></p></li>\n<li><p>📫 Email: 1450136519@qq.com</p></li>\n<li><p>💬 WeChat: <a href=\"https://oceaneyes.top/img/wechatqrcode.jpg\">OCEANGZY</a></p></li>\n<li><p>💬 公众号: <a href=\"https://oceaneyes.top/img/wechatgzh.jpeg\">UncleJoker-GZY</a></p></li>\n</ul>\n<h5 id=\"加入小组\">👋 加入小组~</h5>\n<p><img src=\"https://oceaneyes.top/img/zhishigroup.jpg\" title=\"加入组织\" alt width=\"240\"></p>\n<h5 id=\"感谢打赏\">👋 感谢打赏~</h5>\n<p><img src=\"https://oceaneyes.top/img/alipay.jpg\" title=\"支付宝打赏\" alt width=\"140\">\n<img src=\"https://oceaneyes.top/img/wechatpay.jpg\" title=\"微信打赏\" alt width=\"140\"></p>\n","more":"<h2 id=\"基于贝叶斯决策理论的分类方法\">基于贝叶斯决策理论的分类方法</h2>\n<p><strong>朴素贝叶斯是贝叶斯决策理论的一部分</strong> -\n优点：在数据较少的情况下仍然有效，可以处理多类别问题 -\n缺点：对于输入数据的准备方式较为敏感 - 适用数据类型：标称型数据</p>\n<p><em>标称型：一般在有限的数据中取，而且只存在‘是’和‘否’两种不同的结果（一般用于分类）</em>\n<em>数值型：可以在无限的数据中取，而且数值比较具体化，例如4.02,6.23这种值（一般用于回归分析）</em></p>\n<h4 id=\"贝叶斯决策理论的核心思想即选择具有最高概率的决策\"><strong>贝叶斯决策理论的核心思想，即选择具有最高概率的决策</strong></h4>\n<ul>\n<li><p>假设现在我们有一个数据集，它由两类数据组成，数据分布如图 <img src=\"/.top//attachment:e36f25cc-1cec-4995-809d-c7812f629c99.png\" alt=\"image.png\"></p></li>\n<li><p>我们现在用p1(x,y)表示数据点(x,y)属于类别1（图中用圆点表示的类别）的概率，用p2(x,y)表示数据点(x,y)属于类别2（图中用三角形表示的类别）的概率，那么对于一个新数据点(x,y)，可以用下面的规则来判断它的类别：</p></li>\n<li><p>如果 p1(x,y) &gt; p2(x,y)，那么类别为1</p></li>\n<li><p>如果 p2(x,y) &gt; p1(x,y)，那么类别为2</p></li>\n<li><p><strong>计算分类的方法</strong></p></li>\n<li><p>使用kNN，进行1000次距离计算；</p></li>\n<li><p>使用决策树，分别沿x轴、y轴划分数据；</p></li>\n<li><p>计算数据点属于每个类别的概率，并进行比较</p></li>\n</ul>\n<h4 id=\"条件概率\"><strong>条件概率</strong></h4>\n<p><img src=\"/.top//attachment:40d76e00-9bfb-4c92-af12-2257b8e49fc1.png\" alt=\"image.png\"> -\n计算从B桶中取到灰色石头的概率的办法，这就是所谓的条件概率（conditionalprobability）。假定计算的是从B桶取到灰色石头的概率，这个概率可以记作P(gray|bucketB)，\n-\n我们称之为“在已知石头出自B桶的条件下，取出灰色石头的概率”。不难得到，P(gray|bucketA)值为2/4，P(gray|bucketB)\n的值为1/3。 <img src=\"/.top//attachment:b6ba6689-3ad1-4a37-96c0-ccc2326b99a8.png\" alt=\"image.png\"></p>\n<h2 id=\"使用条件概率分类\"><strong>使用条件概率分类</strong></h2>\n<ul>\n<li><p>之前贝叶斯决策理论要求计算两个概率p1(x, y)和p2(x, y)：</p></li>\n<li><p>如果p1(x, y) &gt; p2(x, y)，那么属于类别1；</p></li>\n<li><p>如果p2(x, y) &gt; p1(x, y)，那么属于类别2。</p></li>\n<li><p>使用p1( )和p2(\n)只是为了尽可能简化描述，真正需要计算和比较的是p(c1|x, y)和p(c2|x,\ny)。这些符号所代表的具体意义是：</p></li>\n<li><p>给定某个由x、y表示的数据点，那么该数据点来自类别c1的概率是多少？</p></li>\n<li><p>数据点来自类别c2的概率又是多少？ <img src=\"/.top//attachment:4ca58d34-234e-4fa6-b572-4b591bd36e18.png\" alt=\"image.png\"></p></li>\n<li><p>使用这些定义，可以定义贝叶斯分类准则为：</p></li>\n<li><p>如果P(c1|x, y) &gt; P(c2|x, y)，那么属于类别c1。</p></li>\n<li><p>如果P(c1|x, y) &lt; P(c2|x, y)，那么属于类别c2。</p></li>\n</ul>\n<h2 id=\"使用朴素贝叶斯进行文本分类\"><strong>使用朴素贝叶斯进行文本分类</strong></h2>\n<ul>\n<li><p>朴素贝叶斯的一般过程</p></li>\n<li><p>收集数据：</p></li>\n<li><p>准备数据：需要数值型 或者布尔型数据</p></li>\n<li><p>分析数据：有大量特征时，绘制特征作用不大，\n此时使用直方图效果更好</p></li>\n<li><p>训练算法：计算不同的独立特征的条件概率</p></li>\n<li><p>测试算法：计算错误率</p></li>\n<li><p>使用算法：一个常见的朴素贝叶斯应用是文档分类，可以任意的分类场景中使用朴素贝叶斯分类器</p></li>\n<li><p>特征之间相互独立（independence）：指的是统计意义上的独立，即一个特征或者单词出现的可能性与它和其他单词相邻没有关系</p></li>\n<li><p>每个特征同等重要</p></li>\n</ul>\n<h2 id=\"文本分类\"><strong>文本分类</strong></h2>\n<h4 id=\"准备数据从文本中构建词向量\"><strong>准备数据：从文本中构建词向量</strong></h4>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> sys</span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> numpy <span class=\"im\">as</span> np</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">print</span>(sys.executable)</span></code></pre></div>\n<pre><code>/Users/gaozhiyong/Documents/pyenv/pyenv3.6/bin/python</code></pre>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> loadDataSet():</span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    postingList <span class=\"op\">=</span> [</span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>        [<span class=\"st\">&#39;my&#39;</span>,<span class=\"st\">&#39;dog&#39;</span>,<span class=\"st\">&#39;has&#39;</span>,<span class=\"st\">&#39;flea&#39;</span>,<span class=\"st\">&#39;problems&#39;</span>,<span class=\"st\">&#39;help&#39;</span>,<span class=\"st\">&#39;please&#39;</span>],</span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        [<span class=\"st\">&#39;maybe&#39;</span>,<span class=\"st\">&#39;not&#39;</span>,<span class=\"st\">&#39;take&#39;</span>,<span class=\"st\">&#39;him&#39;</span>,<span class=\"st\">&#39;to&#39;</span>,<span class=\"st\">&#39;dog&#39;</span>,<span class=\"st\">&#39;park&#39;</span>,<span class=\"st\">&#39;stupid&#39;</span>],</span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        [<span class=\"st\">&#39;my&#39;</span>,<span class=\"st\">&#39;dalmation&#39;</span>,<span class=\"st\">&#39;is&#39;</span>,<span class=\"st\">&#39;so&#39;</span>,<span class=\"st\">&#39;cute&#39;</span>,<span class=\"st\">&#39;I&#39;</span>,<span class=\"st\">&#39;love&#39;</span>,<span class=\"st\">&#39;him&#39;</span>],</span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        [<span class=\"st\">&#39;stop&#39;</span>,<span class=\"st\">&#39;posting&#39;</span>,<span class=\"st\">&#39;stupid&#39;</span>,<span class=\"st\">&#39;worthless&#39;</span>,<span class=\"st\">&#39;garbage&#39;</span>],</span>\n<span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        [<span class=\"st\">&#39;mr&#39;</span>,<span class=\"st\">&#39;licks&#39;</span>,<span class=\"st\">&#39;ate&#39;</span>,<span class=\"st\">&#39;my&#39;</span>,<span class=\"st\">&#39;steak&#39;</span>,<span class=\"st\">&#39;how&#39;</span>,<span class=\"st\">&#39;to&#39;</span>,<span class=\"st\">&#39;stop&#39;</span>,<span class=\"st\">&#39;him&#39;</span>],</span>\n<span id=\"cb3-8\"><a href=\"#cb3-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>        [<span class=\"st\">&#39;quit&#39;</span>,<span class=\"st\">&#39;buying&#39;</span>,<span class=\"st\">&#39;worthless&#39;</span>,<span class=\"st\">&#39;dog&#39;</span>,<span class=\"st\">&#39;food&#39;</span>,<span class=\"st\">&#39;stupid&#39;</span>]</span>\n<span id=\"cb3-9\"><a href=\"#cb3-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    ]</span>\n<span id=\"cb3-10\"><a href=\"#cb3-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    classVec <span class=\"op\">=</span> [<span class=\"dv\">0</span>,<span class=\"dv\">1</span>,<span class=\"dv\">0</span>,<span class=\"dv\">1</span>,<span class=\"dv\">0</span>,<span class=\"dv\">1</span>]</span>\n<span id=\"cb3-11\"><a href=\"#cb3-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> postingList,classVec</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> createVocabList(dataSet):</span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    vocabSet <span class=\"op\">=</span> <span class=\"bu\">set</span>([])    <span class=\"co\">#创建一个空集</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">for</span> document <span class=\"kw\">in</span> dataSet:</span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#         print(&#39;document&#39;,document)</span></span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#         print(&quot;vocabSet之前&quot;,vocabSet)</span></span>\n<span id=\"cb4-6\"><a href=\"#cb4-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        vocabSet <span class=\"op\">=</span> vocabSet <span class=\"op\">|</span> <span class=\"bu\">set</span>(document)  <span class=\"co\">#创建两个集合的并集</span></span>\n<span id=\"cb4-7\"><a href=\"#cb4-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#         print(&quot;vocabSet之后&quot;,vocabSet)</span></span>\n<span id=\"cb4-8\"><a href=\"#cb4-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> <span class=\"bu\">list</span>(vocabSet)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> setOfWord2Vec(vocabList,inputSet):</span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    returnVec <span class=\"op\">=</span> [<span class=\"dv\">0</span>] <span class=\"op\">*</span> <span class=\"bu\">len</span>(vocabList)</span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">for</span> word <span class=\"kw\">in</span> inputSet:</span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">if</span> word <span class=\"kw\">in</span> vocabList:</span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>            returnVec[vocabList.index(word)] <span class=\"op\">=</span> <span class=\"dv\">1</span></span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">else</span>:</span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"bu\">print</span>(<span class=\"st\">&quot;the word: </span><span class=\"sc\">%s</span><span class=\"st\"> is not in my Vocabulary!&quot;</span> <span class=\"op\">%</span> word )</span>\n<span id=\"cb5-8\"><a href=\"#cb5-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> returnVec</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb6\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>listOPosts,listClasses <span class=\"op\">=</span> loadDataSet()</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb7\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>listOPosts</span></code></pre></div>\n<pre><code>[[&#39;my&#39;, &#39;dog&#39;, &#39;has&#39;, &#39;flea&#39;, &#39;problems&#39;, &#39;help&#39;, &#39;please&#39;],\n [&#39;maybe&#39;, &#39;not&#39;, &#39;take&#39;, &#39;him&#39;, &#39;to&#39;, &#39;dog&#39;, &#39;park&#39;, &#39;stupid&#39;],\n [&#39;my&#39;, &#39;dalmation&#39;, &#39;is&#39;, &#39;so&#39;, &#39;cute&#39;, &#39;I&#39;, &#39;love&#39;, &#39;him&#39;],\n [&#39;stop&#39;, &#39;posting&#39;, &#39;stupid&#39;, &#39;worthless&#39;, &#39;garbage&#39;],\n [&#39;mr&#39;, &#39;licks&#39;, &#39;ate&#39;, &#39;my&#39;, &#39;steak&#39;, &#39;how&#39;, &#39;to&#39;, &#39;stop&#39;, &#39;him&#39;],\n [&#39;quit&#39;, &#39;buying&#39;, &#39;worthless&#39;, &#39;dog&#39;, &#39;food&#39;, &#39;stupid&#39;]]</code></pre>\n<div class=\"sourceCode\" id=\"cb9\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>listClasses</span></code></pre></div>\n<pre><code>[0, 1, 0, 1, 0, 1]</code></pre>\n<div class=\"sourceCode\" id=\"cb11\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>myVocabList <span class=\"op\">=</span> createVocabList(listOPosts)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb12\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb12-1\"><a href=\"#cb12-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>myVocabList</span></code></pre></div>\n<pre><code>[&#39;stop&#39;,\n &#39;dalmation&#39;,\n &#39;park&#39;,\n &#39;please&#39;,\n &#39;my&#39;,\n &#39;to&#39;,\n &#39;problems&#39;,\n &#39;posting&#39;,\n &#39;flea&#39;,\n &#39;steak&#39;,\n &#39;him&#39;,\n &#39;take&#39;,\n &#39;ate&#39;,\n &#39;is&#39;,\n &#39;help&#39;,\n &#39;how&#39;,\n &#39;cute&#39;,\n &#39;has&#39;,\n &#39;maybe&#39;,\n &#39;food&#39;,\n &#39;buying&#39;,\n &#39;stupid&#39;,\n &#39;licks&#39;,\n &#39;mr&#39;,\n &#39;dog&#39;,\n &#39;not&#39;,\n &#39;love&#39;,\n &#39;worthless&#39;,\n &#39;I&#39;,\n &#39;so&#39;,\n &#39;quit&#39;,\n &#39;garbage&#39;]</code></pre>\n<div class=\"sourceCode\" id=\"cb14\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>listOPosts[<span class=\"dv\">0</span>]</span></code></pre></div>\n<pre><code>[&#39;my&#39;, &#39;dog&#39;, &#39;has&#39;, &#39;flea&#39;, &#39;problems&#39;, &#39;help&#39;, &#39;please&#39;]</code></pre>\n<div class=\"sourceCode\" id=\"cb16\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>setOfWord2Vec(myVocabList,listOPosts[<span class=\"dv\">0</span>])</span></code></pre></div>\n<pre><code>[0,\n 0,\n 0,\n 1,\n 1,\n 0,\n 1,\n 0,\n 1,\n 0,\n 0,\n 0,\n 0,\n 0,\n 1,\n 0,\n 0,\n 1,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 1,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0]</code></pre>\n<div class=\"sourceCode\" id=\"cb18\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb18-1\"><a href=\"#cb18-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>setOfWord2Vec(myVocabList,listOPosts[<span class=\"dv\">3</span>])</span></code></pre></div>\n<pre><code>[1,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 1,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 1,\n 0,\n 0,\n 0,\n 0,\n 0,\n 1,\n 0,\n 0,\n 0,\n 1]</code></pre>\n<h4 id=\"训练算法从词向量计算概率\"><strong>训练算法：从词向量计算概率</strong></h4>\n<p><img src=\"/.top//attachment:40c1d39c-159e-4c7f-a811-45a728741340.png\" alt=\"image.png\"> -\n使用上述公式，对每个类计算该值，然后比较这两个概率值的大小。 -\n如何计算呢？ -\n首先可以通过类别i（侮辱性留言或非侮辱性留言）中文档数除以总的文档数来计算概率p(ci)。\n- 接下来计算p(w|ci)，这里就要用到朴素贝叶斯假设。 -\n如果将w展开为一个个独立特征，那么就可以将上述概率写作p(w0,w1,w2..wN|ci)。\n-\n这里假设所有词都互相独立，该假设也称作条件独立性假设，它意味着可以使p(w0|ci)p(w1|ci)p(w2|ci)...p(wN|ci)来计算上述概率</p>\n<h5 id=\"代码逻辑\"><strong>代码逻辑</strong></h5>\n<ul>\n<li>计算每个类别中的文档数目</li>\n<li>对每篇训练文档</li>\n<li>对每个类别\n<ul>\n<li>如果词条出现在文档中 --- 增加该词条的计数值</li>\n<li>增加所有词条的计数值</li>\n</ul></li>\n<li>对每个类别\n<ul>\n<li>对每个词条\n<ul>\n<li>将 <strong>该词条的数目</strong> 除以 <strong>总词数目</strong> 得到\n<strong>条件概率</strong></li>\n</ul></li>\n</ul></li>\n<li>返回每个类别的条件概率</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb20\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb20-1\"><a href=\"#cb20-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> trainNB0(trainMatrix,trainCategory):</span>\n<span id=\"cb20-2\"><a href=\"#cb20-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    numTrainDocs <span class=\"op\">=</span> <span class=\"bu\">len</span>(trainMatrix)</span>\n<span id=\"cb20-3\"><a href=\"#cb20-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    numWords <span class=\"op\">=</span> <span class=\"bu\">len</span>(trainMatrix[<span class=\"dv\">0</span>])</span>\n<span id=\"cb20-4\"><a href=\"#cb20-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pAbusive <span class=\"op\">=</span> <span class=\"bu\">sum</span>(trainCategory) <span class=\"op\">/</span> <span class=\"bu\">float</span>(numTrainDocs)</span>\n<span id=\"cb20-5\"><a href=\"#cb20-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0Num <span class=\"op\">=</span> np.zeros(numWords) </span>\n<span id=\"cb20-6\"><a href=\"#cb20-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p1Num <span class=\"op\">=</span> np.zeros(numWords)</span>\n<span id=\"cb20-7\"><a href=\"#cb20-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0Denom <span class=\"op\">=</span> <span class=\"fl\">0.0</span></span>\n<span id=\"cb20-8\"><a href=\"#cb20-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p1Denom <span class=\"op\">=</span> <span class=\"fl\">0.0</span></span>\n<span id=\"cb20-9\"><a href=\"#cb20-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">for</span> i <span class=\"kw\">in</span> <span class=\"bu\">range</span>(numTrainDocs):</span>\n<span id=\"cb20-10\"><a href=\"#cb20-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">try</span>:</span>\n<span id=\"cb20-11\"><a href=\"#cb20-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">if</span> trainCategory[i] <span class=\"op\">==</span> <span class=\"dv\">1</span>:</span>\n<span id=\"cb20-12\"><a href=\"#cb20-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p1Num <span class=\"op\">+=</span> trainMatrix[i]</span>\n<span id=\"cb20-13\"><a href=\"#cb20-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p1Denom <span class=\"op\">+=</span> <span class=\"bu\">sum</span>(trainMatrix[i])</span>\n<span id=\"cb20-14\"><a href=\"#cb20-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">else</span>:</span>\n<span id=\"cb20-15\"><a href=\"#cb20-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p0Num <span class=\"op\">+=</span> trainMatrix[i]</span>\n<span id=\"cb20-16\"><a href=\"#cb20-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p0Denom <span class=\"op\">+=</span> <span class=\"bu\">sum</span>(trainMatrix[i])</span>\n<span id=\"cb20-17\"><a href=\"#cb20-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">except</span>:</span>\n<span id=\"cb20-18\"><a href=\"#cb20-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">continue</span></span>\n<span id=\"cb20-19\"><a href=\"#cb20-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p1Vect <span class=\"op\">=</span> p1Num <span class=\"op\">/</span> p1Denom</span>\n<span id=\"cb20-20\"><a href=\"#cb20-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0Vect <span class=\"op\">=</span> p0Num <span class=\"op\">/</span> p0Denom</span>\n<span id=\"cb20-21\"><a href=\"#cb20-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> p0Vect,p1Vect,pAbusive</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb21\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb21-1\"><a href=\"#cb21-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>listOPosts,listClasses <span class=\"op\">=</span> loadDataSet()</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb22\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb22-1\"><a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>myVocabList <span class=\"op\">=</span> createVocabList(listOPosts)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb23\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb23-1\"><a href=\"#cb23-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>trainMat <span class=\"op\">=</span> []</span>\n<span id=\"cb23-2\"><a href=\"#cb23-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> postinDoc <span class=\"kw\">in</span> listOPosts:</span>\n<span id=\"cb23-3\"><a href=\"#cb23-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    trainMat.append(setOfWord2Vec(myVocabList,postinDoc))</span>\n<span id=\"cb23-4\"><a href=\"#cb23-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>p0V,p1V,pAb <span class=\"op\">=</span> trainNB0(trainMat,listClasses)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb24\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb24-1\"><a href=\"#cb24-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>pAb</span></code></pre></div>\n<pre><code>0.5</code></pre>\n<div class=\"sourceCode\" id=\"cb26\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb26-1\"><a href=\"#cb26-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>p0V</span></code></pre></div>\n<pre><code>array([0.04166667, 0.04166667, 0.        , 0.04166667, 0.125     ,\n       0.04166667, 0.04166667, 0.        , 0.04166667, 0.04166667,\n       0.08333333, 0.        , 0.04166667, 0.04166667, 0.04166667,\n       0.04166667, 0.04166667, 0.04166667, 0.        , 0.        ,\n       0.        , 0.        , 0.04166667, 0.04166667, 0.04166667,\n       0.        , 0.04166667, 0.        , 0.04166667, 0.04166667,\n       0.        , 0.        ])</code></pre>\n<div class=\"sourceCode\" id=\"cb28\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb28-1\"><a href=\"#cb28-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>p1V</span></code></pre></div>\n<pre><code>array([0.05263158, 0.        , 0.05263158, 0.        , 0.        ,\n       0.05263158, 0.        , 0.05263158, 0.        , 0.        ,\n       0.05263158, 0.05263158, 0.        , 0.        , 0.        ,\n       0.        , 0.        , 0.        , 0.05263158, 0.05263158,\n       0.05263158, 0.15789474, 0.        , 0.        , 0.10526316,\n       0.05263158, 0.        , 0.10526316, 0.        , 0.        ,\n       0.05263158, 0.05263158])</code></pre>\n<h4 id=\"测试算法根据现实情况修改分类器\"><strong>测试算法：根据现实情况修改分类器</strong></h4>\n<div class=\"sourceCode\" id=\"cb30\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb30-1\"><a href=\"#cb30-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> trainNB1(trainMatrix,trainCategory):</span>\n<span id=\"cb30-2\"><a href=\"#cb30-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    numTrainDocs <span class=\"op\">=</span> <span class=\"bu\">len</span>(trainMatrix)</span>\n<span id=\"cb30-3\"><a href=\"#cb30-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    numWords <span class=\"op\">=</span> <span class=\"bu\">len</span>(trainMatrix[<span class=\"dv\">0</span>])</span>\n<span id=\"cb30-4\"><a href=\"#cb30-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    pAbusive <span class=\"op\">=</span> <span class=\"bu\">sum</span>(trainCategory) <span class=\"op\">/</span> <span class=\"bu\">float</span>(numTrainDocs)</span>\n<span id=\"cb30-5\"><a href=\"#cb30-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0Num <span class=\"op\">=</span> np.ones(numWords) </span>\n<span id=\"cb30-6\"><a href=\"#cb30-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p1Num <span class=\"op\">=</span> np.ones(numWords)</span>\n<span id=\"cb30-7\"><a href=\"#cb30-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0Denom <span class=\"op\">=</span> <span class=\"fl\">2.0</span></span>\n<span id=\"cb30-8\"><a href=\"#cb30-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p1Denom <span class=\"op\">=</span> <span class=\"fl\">2.0</span></span>\n<span id=\"cb30-9\"><a href=\"#cb30-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">for</span> i <span class=\"kw\">in</span> <span class=\"bu\">range</span>(numTrainDocs):</span>\n<span id=\"cb30-10\"><a href=\"#cb30-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">try</span>:</span>\n<span id=\"cb30-11\"><a href=\"#cb30-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">if</span> trainCategory[i] <span class=\"op\">==</span> <span class=\"dv\">1</span>:</span>\n<span id=\"cb30-12\"><a href=\"#cb30-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p1Num <span class=\"op\">+=</span> trainMatrix[i]</span>\n<span id=\"cb30-13\"><a href=\"#cb30-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p1Denom <span class=\"op\">+=</span> <span class=\"bu\">sum</span>(trainMatrix[i])</span>\n<span id=\"cb30-14\"><a href=\"#cb30-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">else</span>:</span>\n<span id=\"cb30-15\"><a href=\"#cb30-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p0Num <span class=\"op\">+=</span> trainMatrix[i]</span>\n<span id=\"cb30-16\"><a href=\"#cb30-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>                p0Denom <span class=\"op\">+=</span> <span class=\"bu\">sum</span>(trainMatrix[i])</span>\n<span id=\"cb30-17\"><a href=\"#cb30-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">except</span>:</span>\n<span id=\"cb30-18\"><a href=\"#cb30-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">continue</span></span>\n<span id=\"cb30-19\"><a href=\"#cb30-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p1Vect <span class=\"op\">=</span> np.log(p1Num <span class=\"op\">/</span> p1Denom)</span>\n<span id=\"cb30-20\"><a href=\"#cb30-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0Vect <span class=\"op\">=</span> np.log(p0Num <span class=\"op\">/</span> p0Denom)</span>\n<span id=\"cb30-21\"><a href=\"#cb30-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> p0Vect,p1Vect,pAbusive</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb31\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb31-1\"><a href=\"#cb31-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> classifyNB(vec2Classify,p0Vec,p1Vec,pClass1):</span>\n<span id=\"cb31-2\"><a href=\"#cb31-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p1<span class=\"op\">=</span><span class=\"bu\">sum</span>(vec2Classify <span class=\"op\">*</span> p1Vec) <span class=\"op\">+</span> np.log(pClass1)</span>\n<span id=\"cb31-3\"><a href=\"#cb31-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0<span class=\"op\">=</span> <span class=\"bu\">sum</span>(vec2Classify <span class=\"op\">*</span> p0Vec) <span class=\"op\">+</span> np.log(<span class=\"fl\">1.0</span><span class=\"op\">-</span> pClass1)</span>\n<span id=\"cb31-4\"><a href=\"#cb31-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> p1<span class=\"op\">&gt;</span>p0:</span>\n<span id=\"cb31-5\"><a href=\"#cb31-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"dv\">1</span></span>\n<span id=\"cb31-6\"><a href=\"#cb31-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">else</span>:</span>\n<span id=\"cb31-7\"><a href=\"#cb31-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"dv\">0</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb32\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb32-1\"><a href=\"#cb32-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> testingNB():</span>\n<span id=\"cb32-2\"><a href=\"#cb32-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    listOPosts,listClasses <span class=\"op\">=</span> loadDataSet()</span>\n<span id=\"cb32-3\"><a href=\"#cb32-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    myVocabList <span class=\"op\">=</span> createVocabList(listOPosts)</span>\n<span id=\"cb32-4\"><a href=\"#cb32-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    trainMat <span class=\"op\">=</span> []</span>\n<span id=\"cb32-5\"><a href=\"#cb32-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">for</span> postinDoc <span class=\"kw\">in</span> listOPosts:</span>\n<span id=\"cb32-6\"><a href=\"#cb32-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        trainMat.append(setOfWord2Vec(myVocabList,postinDoc))</span>\n<span id=\"cb32-7\"><a href=\"#cb32-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>    p0V,p1V,pAb <span class=\"op\">=</span> trainNB1(np.array(trainMat), np.array(listClasses))</span>\n<span id=\"cb32-8\"><a href=\"#cb32-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    testEntry1 <span class=\"op\">=</span> [<span class=\"st\">&#39;love&#39;</span>,<span class=\"st\">&#39;my&#39;</span>,<span class=\"st\">&#39;dalmation&#39;</span>]</span>\n<span id=\"cb32-9\"><a href=\"#cb32-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>    thisDoc <span class=\"op\">=</span> np.array(setOfWord2Vec(myVocabList,testEntry1))</span>\n<span id=\"cb32-10\"><a href=\"#cb32-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">print</span>(testEntry1,<span class=\"st\">&#39;classified as: &#39;</span>,classifyNB(thisDoc,p0V,p1V,pAb))</span>\n<span id=\"cb32-11\"><a href=\"#cb32-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>    </span>\n<span id=\"cb32-12\"><a href=\"#cb32-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    testEntry2 <span class=\"op\">=</span> [<span class=\"st\">&#39;stupid&#39;</span>,<span class=\"st\">&#39;garbage&#39;</span>]</span>\n<span id=\"cb32-13\"><a href=\"#cb32-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>    thisDoc <span class=\"op\">=</span> np.array(setOfWord2Vec(myVocabList,testEntry2))</span>\n<span id=\"cb32-14\"><a href=\"#cb32-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">print</span>(testEntry2,<span class=\"st\">&#39;classified as: &#39;</span>,classifyNB(thisDoc,p0V,p1V,pAb))</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb33\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb33-1\"><a href=\"#cb33-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>testingNB()</span></code></pre></div>\n<pre><code>[&#39;love&#39;, &#39;my&#39;, &#39;dalmation&#39;] classified as:  0\n[&#39;stupid&#39;, &#39;garbage&#39;] classified as:  1</code></pre>\n<h4 id=\"准备数据文档词袋模型\"><strong>准备数据：文档词袋模型</strong></h4>\n<ul>\n<li>将每个词的出现与否作为一个特征，这可以被描述为词集模型(set-of-words\nmodel)。</li>\n<li>如果一个词在文档中出现不止一次，这可能意味着包含该词是否出现在文档中所不能表\n达的某种信息，这种方法被称为词袋模型(bag-of-words model)</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb35\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb35-1\"><a href=\"#cb35-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> bagOfWords2VecMN(vocabList,inputSet):</span>\n<span id=\"cb35-2\"><a href=\"#cb35-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    returnVec <span class=\"op\">=</span> [<span class=\"dv\">0</span>] <span class=\"op\">*</span> <span class=\"bu\">len</span>(vocabList)</span>\n<span id=\"cb35-3\"><a href=\"#cb35-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">for</span> word <span class=\"kw\">in</span> inputSet:</span>\n<span id=\"cb35-4\"><a href=\"#cb35-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">if</span> word <span class=\"kw\">in</span> vocabList:</span>\n<span id=\"cb35-5\"><a href=\"#cb35-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>            returnVec[vocabList.index[word]] <span class=\"op\">+=</span> <span class=\"dv\">1</span></span>\n<span id=\"cb35-6\"><a href=\"#cb35-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> returnVec</span></code></pre></div>\n<hr>\n<h3 id=\"about-me\">About ME</h3>\n<h5 id=\"读书城南-在未来面前我们都是孩子\">👋 读书城南，🤔\n在未来面前，我们都是孩子～</h5>\n<ul>\n<li>📙\n一个热衷于探索学习新方向、新事物的智能产品经理，闲暇时间喜欢coding💻、画图🎨、音乐🎵、学习ing~</li>\n</ul>\n<h5 id=\"social-media\">👋 Social Media</h5>\n<ul>\n<li><p>🛠️ Blog: <a href=\"http://oceaneyes.top\">http://oceaneyes.top</a></p></li>\n<li><p>⚡ PM导航: <a href=\"https://pmhub.oceangzy.top\">https://pmhub.oceangzy.top</a></p></li>\n<li><p>☘️ CNBLOG: <a href=\"https://www.cnblogs.com/oceaneyes-gzy/\">https://www.cnblogs.com/oceaneyes-gzy/</a></p></li>\n<li><p>🌱 AI PRJ自己部署的一些算法demo: <a href=\"http://ai.oceangzy.top/\">http://ai.oceangzy.top/</a></p></li>\n<li><p>📫 Email: 1450136519@qq.com</p></li>\n<li><p>💬 WeChat: <a href=\"https://oceaneyes.top/img/wechatqrcode.jpg\">OCEANGZY</a></p></li>\n<li><p>💬 公众号: <a href=\"https://oceaneyes.top/img/wechatgzh.jpeg\">UncleJoker-GZY</a></p></li>\n</ul>\n<h5 id=\"加入小组\">👋 加入小组~</h5>\n<p><img src=\"https://oceaneyes.top/img/zhishigroup.jpg\" title=\"加入组织\" alt width=\"240\"></p>\n<h5 id=\"感谢打赏\">👋 感谢打赏~</h5>\n<p><img src=\"https://oceaneyes.top/img/alipay.jpg\" title=\"支付宝打赏\" alt width=\"140\">\n<img src=\"https://oceaneyes.top/img/wechatpay.jpg\" title=\"微信打赏\" alt width=\"140\"></p>\n","categories":[{"name":"Artificial Intelligence","path":"api/categories/Artificial Intelligence.json"},{"name":"Machine Learning","path":"api/categories/Machine Learning.json"},{"name":"Algorithm","path":"api/categories/Algorithm.json"}],"tags":[{"name":"Machine Learning","path":"api/tags/Machine Learning.json"},{"name":"Algorithm","path":"api/tags/Algorithm.json"},{"name":"朴素贝叶斯","path":"api/tags/朴素贝叶斯.json"}]}