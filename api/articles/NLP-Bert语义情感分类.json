{"title":"NLP-Bert语义情感分类","slug":"NLP-Bert语义情感分类","date":"2021-01-03T14:19:00.000Z","updated":"2022-09-30T06:56:37.163Z","comments":true,"path":"api/articles/NLP-Bert语义情感分类.json","excerpt":null,"covers":["https://oceaneyes.top/img/zhishigroup.jpg","https://oceaneyes.top/img/alipay.jpg","https://oceaneyes.top/img/wechatpay.jpg"],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h4 id=\"评论情感分类数据处理\">评论情感分类数据处理</h4>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 评论情感分类数据处理</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># labels： 0负面、1中性、2正面</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">class</span> CommentProcessor(DataProcessor):</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">def</span> get_train_examples(<span class=\"va\">self</span>, data_dir):</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"va\">self</span>._create_examples(</span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"va\">self</span>._read_tsv(os.path.join(data_dir,<span class=\"st\">&quot;train.tsv&quot;</span>)),<span class=\"st\">&quot;train&quot;</span></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        )</span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">def</span> get_dev_examples(<span class=\"va\">self</span>, data_dir):</span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"va\">self</span>._create_examples(</span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"va\">self</span>._read_tsv(os.path.join(data_dir, <span class=\"st\">&quot;dev.tsv&quot;</span>)), <span class=\"st\">&quot;dev&quot;</span></span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        )</span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">def</span> get_test_examples(<span class=\"va\">self</span>, data_dir):</span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"va\">self</span>._create_examples(</span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"va\">self</span>._read_tsv(os.path.join(data_dir, <span class=\"st\">&quot;test.tsv&quot;</span>)), <span class=\"st\">&quot;test&quot;</span></span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>        )</span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">def</span> get_labels(<span class=\"va\">self</span>):</span>\n<span id=\"cb1-17\"><a href=\"#cb1-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> [<span class=\"st\">&quot;0&quot;</span>,<span class=\"st\">&quot;1&quot;</span>,<span class=\"st\">&quot;2&quot;</span>]</span>\n<span id=\"cb1-18\"><a href=\"#cb1-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">def</span> _create_examples(<span class=\"va\">self</span>,lines,set_type):</span>\n<span id=\"cb1-19\"><a href=\"#cb1-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>        examples<span class=\"op\">=</span>[]</span>\n<span id=\"cb1-20\"><a href=\"#cb1-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">for</span> (i ,line) <span class=\"kw\">in</span> <span class=\"bu\">enumerate</span>(lines):</span>\n<span id=\"cb1-21\"><a href=\"#cb1-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">if</span> i <span class=\"op\">==</span> <span class=\"dv\">0</span>:</span>\n<span id=\"cb1-22\"><a href=\"#cb1-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>                <span class=\"cf\">continue</span></span>\n<span id=\"cb1-23\"><a href=\"#cb1-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>            guid <span class=\"op\">=</span> <span class=\"st\">&quot;</span><span class=\"sc\">%s</span><span class=\"st\">-</span><span class=\"sc\">%s</span><span class=\"st\">&quot;</span> <span class=\"op\">%</span> (set_type,i)</span>\n<span id=\"cb1-24\"><a href=\"#cb1-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">try</span>:</span>\n<span id=\"cb1-25\"><a href=\"#cb1-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>                text_a <span class=\"op\">=</span> tokenization.convert_to_unicode(line[<span class=\"dv\">1</span>])</span>\n<span id=\"cb1-26\"><a href=\"#cb1-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">except</span>:</span>\n<span id=\"cb1-27\"><a href=\"#cb1-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>                <span class=\"cf\">continue</span></span>\n<span id=\"cb1-28\"><a href=\"#cb1-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">if</span> set_type <span class=\"op\">==</span> <span class=\"st\">&quot;test&quot;</span>:</span>\n<span id=\"cb1-29\"><a href=\"#cb1-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>                label <span class=\"op\">=</span> <span class=\"st\">&quot;0&quot;</span></span>\n<span id=\"cb1-30\"><a href=\"#cb1-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">else</span>:</span>\n<span id=\"cb1-31\"><a href=\"#cb1-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>                label <span class=\"op\">=</span> tokenization.convert_to_unicode(line[<span class=\"dv\">0</span>])</span>\n<span id=\"cb1-32\"><a href=\"#cb1-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>            examples.append(</span>\n<span id=\"cb1-33\"><a href=\"#cb1-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>                InputExample(guid<span class=\"op\">=</span>guid,text_a <span class=\"op\">=</span> text_a, label<span class=\"op\">=</span>label)</span>\n<span id=\"cb1-34\"><a href=\"#cb1-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>            )</span>\n<span id=\"cb1-35\"><a href=\"#cb1-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> examples</span></code></pre></div>\n<h4 id=\"将bert模型ckpt文件转为-tfserving部署所需的pb\">将Bert模型ckpt文件转为\ntfserving部署所需的pb</h4>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#!/usr/bin/python3.6</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">&#39;&#39;&#39;</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">BERT模型ckpt文件转为部署tfserving所需的文件</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">&#39;&#39;&#39;</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> json</span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> os</span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> enum <span class=\"im\">import</span> Enum</span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> sys</span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> modeling</span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> termcolor <span class=\"im\">import</span> colored</span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> logging</span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> tensorflow <span class=\"im\">as</span> tf</span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> argparse</span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> pickle</span>\n<span id=\"cb2-15\"><a href=\"#cb2-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-16\"><a href=\"#cb2-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>tf.app.flags.DEFINE_string(<span class=\"st\">&#39;export_model_dir&#39;</span>, <span class=\"st\">&quot;./output/comment_0/versions&quot;</span>, <span class=\"st\">&#39;Directory where the model exported files should be placed.&#39;</span>)</span>\n<span id=\"cb2-17\"><a href=\"#cb2-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>tf.app.flags.DEFINE_integer(<span class=\"st\">&#39;model_version&#39;</span>, <span class=\"dv\">10001</span>, <span class=\"st\">&#39;Models version number.&#39;</span>)</span>\n<span id=\"cb2-18\"><a href=\"#cb2-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>FLAGS <span class=\"op\">=</span> tf.app.flags.FLAGS</span>\n<span id=\"cb2-19\"><a href=\"#cb2-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-20\"><a href=\"#cb2-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> create_classification_model(bert_config, is_training, input_ids, input_mask, segment_ids, labels, num_labels):</span>\n<span id=\"cb2-21\"><a href=\"#cb2-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">&quot;&quot;&quot;</span></span>\n<span id=\"cb2-22\"><a href=\"#cb2-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param bert_config:</span></span>\n<span id=\"cb2-23\"><a href=\"#cb2-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param is_training:</span></span>\n<span id=\"cb2-24\"><a href=\"#cb2-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param input_ids:</span></span>\n<span id=\"cb2-25\"><a href=\"#cb2-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param input_mask:</span></span>\n<span id=\"cb2-26\"><a href=\"#cb2-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param segment_ids:</span></span>\n<span id=\"cb2-27\"><a href=\"#cb2-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param labels:</span></span>\n<span id=\"cb2-28\"><a href=\"#cb2-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param num_labels:</span></span>\n<span id=\"cb2-29\"><a href=\"#cb2-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param use_one_hot_embedding:</span></span>\n<span id=\"cb2-30\"><a href=\"#cb2-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :return:</span></span>\n<span id=\"cb2-31\"><a href=\"#cb2-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    &quot;&quot;&quot;</span></span>\n<span id=\"cb2-32\"><a href=\"#cb2-32\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-33\"><a href=\"#cb2-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">#import tensorflow as tf</span></span>\n<span id=\"cb2-34\"><a href=\"#cb2-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">#import modeling</span></span>\n<span id=\"cb2-35\"><a href=\"#cb2-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-36\"><a href=\"#cb2-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># 通过传入的训练数据，进行representation</span></span>\n<span id=\"cb2-37\"><a href=\"#cb2-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    model <span class=\"op\">=</span> modeling.BertModel(</span>\n<span id=\"cb2-38\"><a href=\"#cb2-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>        config<span class=\"op\">=</span>bert_config,</span>\n<span id=\"cb2-39\"><a href=\"#cb2-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>        is_training<span class=\"op\">=</span>is_training,</span>\n<span id=\"cb2-40\"><a href=\"#cb2-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>        input_ids<span class=\"op\">=</span>input_ids,</span>\n<span id=\"cb2-41\"><a href=\"#cb2-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>        input_mask<span class=\"op\">=</span>input_mask,</span>\n<span id=\"cb2-42\"><a href=\"#cb2-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>        token_type_ids<span class=\"op\">=</span>segment_ids,</span>\n<span id=\"cb2-43\"><a href=\"#cb2-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>    )</span>\n<span id=\"cb2-44\"><a href=\"#cb2-44\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-45\"><a href=\"#cb2-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>    output_layer <span class=\"op\">=</span> model.get_pooled_output()</span>\n<span id=\"cb2-46\"><a href=\"#cb2-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>    hidden_size <span class=\"op\">=</span> output_layer.shape[<span class=\"op\">-</span><span class=\"dv\">1</span>].value</span>\n<span id=\"cb2-47\"><a href=\"#cb2-47\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-48\"><a href=\"#cb2-48\" aria-hidden=\"true\" tabindex=\"-1\"></a>    output_weights <span class=\"op\">=</span> tf.get_variable(</span>\n<span id=\"cb2-49\"><a href=\"#cb2-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"st\">&quot;output_weights&quot;</span>, [num_labels, hidden_size],</span>\n<span id=\"cb2-50\"><a href=\"#cb2-50\" aria-hidden=\"true\" tabindex=\"-1\"></a>        initializer<span class=\"op\">=</span>tf.truncated_normal_initializer(stddev<span class=\"op\">=</span><span class=\"fl\">0.02</span>))</span>\n<span id=\"cb2-51\"><a href=\"#cb2-51\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-52\"><a href=\"#cb2-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>    output_bias <span class=\"op\">=</span> tf.get_variable(</span>\n<span id=\"cb2-53\"><a href=\"#cb2-53\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"st\">&quot;output_bias&quot;</span>, [num_labels], initializer<span class=\"op\">=</span>tf.zeros_initializer())</span>\n<span id=\"cb2-54\"><a href=\"#cb2-54\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-55\"><a href=\"#cb2-55\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">with</span> tf.variable_scope(<span class=\"st\">&quot;loss&quot;</span>):</span>\n<span id=\"cb2-56\"><a href=\"#cb2-56\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">if</span> is_training:</span>\n<span id=\"cb2-57\"><a href=\"#cb2-57\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"co\"># I.e., 0.1 dropout</span></span>\n<span id=\"cb2-58\"><a href=\"#cb2-58\" aria-hidden=\"true\" tabindex=\"-1\"></a>            output_layer <span class=\"op\">=</span> tf.nn.dropout(output_layer, keep_prob<span class=\"op\">=</span><span class=\"fl\">0.9</span>)</span>\n<span id=\"cb2-59\"><a href=\"#cb2-59\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-60\"><a href=\"#cb2-60\" aria-hidden=\"true\" tabindex=\"-1\"></a>        logits <span class=\"op\">=</span> tf.matmul(output_layer, output_weights, transpose_b<span class=\"op\">=</span><span class=\"va\">True</span>)</span>\n<span id=\"cb2-61\"><a href=\"#cb2-61\" aria-hidden=\"true\" tabindex=\"-1\"></a>        logits <span class=\"op\">=</span> tf.nn.bias_add(logits, output_bias)</span>\n<span id=\"cb2-62\"><a href=\"#cb2-62\" aria-hidden=\"true\" tabindex=\"-1\"></a>        probabilities <span class=\"op\">=</span> tf.nn.softmax(logits, axis<span class=\"op\">=-</span><span class=\"dv\">1</span>)</span>\n<span id=\"cb2-63\"><a href=\"#cb2-63\" aria-hidden=\"true\" tabindex=\"-1\"></a>        log_probs <span class=\"op\">=</span> tf.nn.log_softmax(logits, axis<span class=\"op\">=-</span><span class=\"dv\">1</span>)</span>\n<span id=\"cb2-64\"><a href=\"#cb2-64\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-65\"><a href=\"#cb2-65\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">if</span> labels <span class=\"kw\">is</span> <span class=\"kw\">not</span> <span class=\"va\">None</span>:</span>\n<span id=\"cb2-66\"><a href=\"#cb2-66\" aria-hidden=\"true\" tabindex=\"-1\"></a>            one_hot_labels <span class=\"op\">=</span> tf.one_hot(labels, depth<span class=\"op\">=</span>num_labels, dtype<span class=\"op\">=</span>tf.float32)</span>\n<span id=\"cb2-67\"><a href=\"#cb2-67\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-68\"><a href=\"#cb2-68\" aria-hidden=\"true\" tabindex=\"-1\"></a>            per_example_loss <span class=\"op\">=</span> <span class=\"op\">-</span>tf.reduce_sum(one_hot_labels <span class=\"op\">*</span> log_probs, axis<span class=\"op\">=-</span><span class=\"dv\">1</span>)</span>\n<span id=\"cb2-69\"><a href=\"#cb2-69\" aria-hidden=\"true\" tabindex=\"-1\"></a>            loss <span class=\"op\">=</span> tf.reduce_mean(per_example_loss)</span>\n<span id=\"cb2-70\"><a href=\"#cb2-70\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">else</span>:</span>\n<span id=\"cb2-71\"><a href=\"#cb2-71\" aria-hidden=\"true\" tabindex=\"-1\"></a>            loss, per_example_loss <span class=\"op\">=</span> <span class=\"va\">None</span>, <span class=\"va\">None</span></span>\n<span id=\"cb2-72\"><a href=\"#cb2-72\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> (loss, per_example_loss, logits, probabilities)</span>\n<span id=\"cb2-73\"><a href=\"#cb2-73\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-74\"><a href=\"#cb2-74\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> main(max_seq_len, model_dir, num_labels):</span>\n<span id=\"cb2-75\"><a href=\"#cb2-75\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-76\"><a href=\"#cb2-76\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">with</span> tf.Session() <span class=\"im\">as</span> sess:</span>\n<span id=\"cb2-77\"><a href=\"#cb2-77\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">#输入占位符</span></span>\n<span id=\"cb2-78\"><a href=\"#cb2-78\" aria-hidden=\"true\" tabindex=\"-1\"></a>        input_ids <span class=\"op\">=</span> tf.placeholder(tf.int32, (<span class=\"va\">None</span>, max_seq_len), <span class=\"st\">&#39;input_ids&#39;</span>)</span>\n<span id=\"cb2-79\"><a href=\"#cb2-79\" aria-hidden=\"true\" tabindex=\"-1\"></a>        input_mask <span class=\"op\">=</span> tf.placeholder(tf.int32, (<span class=\"va\">None</span>, max_seq_len), <span class=\"st\">&#39;input_mask&#39;</span>)</span>\n<span id=\"cb2-80\"><a href=\"#cb2-80\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">#模型前向传播</span></span>\n<span id=\"cb2-81\"><a href=\"#cb2-81\" aria-hidden=\"true\" tabindex=\"-1\"></a>        bert_config <span class=\"op\">=</span> modeling.BertConfig.from_json_file(<span class=\"st\">&#39;./uncased_L-2_H-128_A-2/bert_config.json&#39;</span>)</span>\n<span id=\"cb2-82\"><a href=\"#cb2-82\" aria-hidden=\"true\" tabindex=\"-1\"></a>        loss, per_example_loss, logits, probabilities <span class=\"op\">=</span> create_classification_model(bert_config<span class=\"op\">=</span>bert_config, is_training<span class=\"op\">=</span><span class=\"va\">False</span>,</span>\n<span id=\"cb2-83\"><a href=\"#cb2-83\" aria-hidden=\"true\" tabindex=\"-1\"></a>            input_ids<span class=\"op\">=</span>input_ids, input_mask<span class=\"op\">=</span>input_mask, segment_ids<span class=\"op\">=</span><span class=\"va\">None</span>, labels<span class=\"op\">=</span><span class=\"va\">None</span>, num_labels<span class=\"op\">=</span>num_labels)</span>\n<span id=\"cb2-84\"><a href=\"#cb2-84\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">#转换结果格式</span></span>\n<span id=\"cb2-85\"><a href=\"#cb2-85\" aria-hidden=\"true\" tabindex=\"-1\"></a>        logits <span class=\"op\">=</span> tf.argmax(logits, <span class=\"dv\">1</span>)</span>\n<span id=\"cb2-86\"><a href=\"#cb2-86\" aria-hidden=\"true\" tabindex=\"-1\"></a>        probabilities <span class=\"op\">=</span> tf.identity(probabilities, <span class=\"st\">&#39;pred_prob&#39;</span>)</span>\n<span id=\"cb2-87\"><a href=\"#cb2-87\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">#模型保存的对象</span></span>\n<span id=\"cb2-88\"><a href=\"#cb2-88\" aria-hidden=\"true\" tabindex=\"-1\"></a>        saver <span class=\"op\">=</span> tf.train.Saver()</span>\n<span id=\"cb2-89\"><a href=\"#cb2-89\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">with</span> tf.Session() <span class=\"im\">as</span> sess:</span>\n<span id=\"cb2-90\"><a href=\"#cb2-90\" aria-hidden=\"true\" tabindex=\"-1\"></a>        sess.run(tf.global_variables_initializer())</span>\n<span id=\"cb2-91\"><a href=\"#cb2-91\" aria-hidden=\"true\" tabindex=\"-1\"></a>        latest_checkpoint <span class=\"op\">=</span> tf.train.latest_checkpoint(model_dir)</span>\n<span id=\"cb2-92\"><a href=\"#cb2-92\" aria-hidden=\"true\" tabindex=\"-1\"></a>        saver.restore(sess,latest_checkpoint )</span>\n<span id=\"cb2-93\"><a href=\"#cb2-93\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\"># Create SavedModelBuilder class</span></span>\n<span id=\"cb2-94\"><a href=\"#cb2-94\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\"># defines where the model will be exported</span></span>\n<span id=\"cb2-95\"><a href=\"#cb2-95\" aria-hidden=\"true\" tabindex=\"-1\"></a>        export_path_base <span class=\"op\">=</span> FLAGS.export_model_dir</span>\n<span id=\"cb2-96\"><a href=\"#cb2-96\" aria-hidden=\"true\" tabindex=\"-1\"></a>        export_path <span class=\"op\">=</span> os.path.join(</span>\n<span id=\"cb2-97\"><a href=\"#cb2-97\" aria-hidden=\"true\" tabindex=\"-1\"></a>            tf.compat.as_bytes(export_path_base),</span>\n<span id=\"cb2-98\"><a href=\"#cb2-98\" aria-hidden=\"true\" tabindex=\"-1\"></a>            tf.compat.as_bytes(<span class=\"bu\">str</span>(FLAGS.model_version)))</span>\n<span id=\"cb2-99\"><a href=\"#cb2-99\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"st\">&#39;Exporting trained model to&#39;</span>, export_path)</span>\n<span id=\"cb2-100\"><a href=\"#cb2-100\" aria-hidden=\"true\" tabindex=\"-1\"></a>        builder <span class=\"op\">=</span> tf.saved_model.builder.SavedModelBuilder(export_path)</span>\n<span id=\"cb2-101\"><a href=\"#cb2-101\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\"># Creates the TensorInfo protobuf objects that encapsulates the input/output tensors</span></span>\n<span id=\"cb2-102\"><a href=\"#cb2-102\" aria-hidden=\"true\" tabindex=\"-1\"></a>        input_ids_tensor <span class=\"op\">=</span> tf.saved_model.utils.build_tensor_info(input_ids)</span>\n<span id=\"cb2-103\"><a href=\"#cb2-103\" aria-hidden=\"true\" tabindex=\"-1\"></a>        input_mask_tensor <span class=\"op\">=</span> tf.saved_model.utils.build_tensor_info(input_mask)</span>\n<span id=\"cb2-104\"><a href=\"#cb2-104\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\"># output tensor info</span></span>\n<span id=\"cb2-105\"><a href=\"#cb2-105\" aria-hidden=\"true\" tabindex=\"-1\"></a>        logits_output <span class=\"op\">=</span> tf.saved_model.utils.build_tensor_info(logits)</span>\n<span id=\"cb2-106\"><a href=\"#cb2-106\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"st\">&quot;logits_output&quot;</span>)</span>\n<span id=\"cb2-107\"><a href=\"#cb2-107\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(logits_output)</span>\n<span id=\"cb2-108\"><a href=\"#cb2-108\" aria-hidden=\"true\" tabindex=\"-1\"></a>        probabilities_output <span class=\"op\">=</span> tf.saved_model.utils.build_tensor_info(probabilities)</span>\n<span id=\"cb2-109\"><a href=\"#cb2-109\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"st\">&quot;probabilities_output&quot;</span>)</span>\n<span id=\"cb2-110\"><a href=\"#cb2-110\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(probabilities_output)</span>\n<span id=\"cb2-111\"><a href=\"#cb2-111\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-112\"><a href=\"#cb2-112\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\"># Defines the DeepLab signatures, uses the TF Predict API</span></span>\n<span id=\"cb2-113\"><a href=\"#cb2-113\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\"># It receives an image and its dimensions and output the segmentation mask</span></span>\n<span id=\"cb2-114\"><a href=\"#cb2-114\" aria-hidden=\"true\" tabindex=\"-1\"></a>        labels_map <span class=\"op\">=</span> [<span class=\"st\">&#39;0&#39;</span>,<span class=\"st\">&#39;1&#39;</span>,<span class=\"st\">&#39;2&#39;</span>]</span>\n<span id=\"cb2-115\"><a href=\"#cb2-115\" aria-hidden=\"true\" tabindex=\"-1\"></a>        prediction_signature <span class=\"op\">=</span> (</span>\n<span id=\"cb2-116\"><a href=\"#cb2-116\" aria-hidden=\"true\" tabindex=\"-1\"></a>            tf.saved_model.signature_def_utils.build_signature_def(</span>\n<span id=\"cb2-117\"><a href=\"#cb2-117\" aria-hidden=\"true\" tabindex=\"-1\"></a>                inputs<span class=\"op\">=</span>&#123;<span class=\"st\">&#39;input_ids&#39;</span>: input_ids_tensor, <span class=\"st\">&#39;input_mask&#39;</span>: input_mask_tensor&#125;,</span>\n<span id=\"cb2-118\"><a href=\"#cb2-118\" aria-hidden=\"true\" tabindex=\"-1\"></a>                outputs<span class=\"op\">=</span>&#123;<span class=\"st\">&#39;pred_label&#39;</span>: logits_output , <span class=\"st\">&#39;score&#39;</span>:probabilities_output&#125;,</span>\n<span id=\"cb2-119\"><a href=\"#cb2-119\" aria-hidden=\"true\" tabindex=\"-1\"></a>                method_name<span class=\"op\">=</span>tf.saved_model.signature_constants.PREDICT_METHOD_NAME))</span>\n<span id=\"cb2-120\"><a href=\"#cb2-120\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-121\"><a href=\"#cb2-121\" aria-hidden=\"true\" tabindex=\"-1\"></a>        builder.add_meta_graph_and_variables(</span>\n<span id=\"cb2-122\"><a href=\"#cb2-122\" aria-hidden=\"true\" tabindex=\"-1\"></a>            sess, [tf.saved_model.tag_constants.SERVING],</span>\n<span id=\"cb2-123\"><a href=\"#cb2-123\" aria-hidden=\"true\" tabindex=\"-1\"></a>            signature_def_map<span class=\"op\">=</span>&#123;</span>\n<span id=\"cb2-124\"><a href=\"#cb2-124\" aria-hidden=\"true\" tabindex=\"-1\"></a>                <span class=\"st\">&#39;result&#39;</span>:</span>\n<span id=\"cb2-125\"><a href=\"#cb2-125\" aria-hidden=\"true\" tabindex=\"-1\"></a>                    prediction_signature,</span>\n<span id=\"cb2-126\"><a href=\"#cb2-126\" aria-hidden=\"true\" tabindex=\"-1\"></a>            &#125;)</span>\n<span id=\"cb2-127\"><a href=\"#cb2-127\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\"># export the model</span></span>\n<span id=\"cb2-128\"><a href=\"#cb2-128\" aria-hidden=\"true\" tabindex=\"-1\"></a>        builder.save(as_text<span class=\"op\">=</span><span class=\"va\">True</span>)</span>\n<span id=\"cb2-129\"><a href=\"#cb2-129\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"st\">&#39;Done exporting!&#39;</span>)</span>\n<span id=\"cb2-130\"><a href=\"#cb2-130\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-131\"><a href=\"#cb2-131\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> <span class=\"va\">__name__</span> <span class=\"op\">==</span> <span class=\"st\">&#39;__main__&#39;</span>:</span>\n<span id=\"cb2-132\"><a href=\"#cb2-132\" aria-hidden=\"true\" tabindex=\"-1\"></a>    max_seq_len <span class=\"op\">=</span> <span class=\"dv\">128</span></span>\n<span id=\"cb2-133\"><a href=\"#cb2-133\" aria-hidden=\"true\" tabindex=\"-1\"></a>    num_labels <span class=\"op\">=</span> <span class=\"dv\">3</span></span>\n<span id=\"cb2-134\"><a href=\"#cb2-134\" aria-hidden=\"true\" tabindex=\"-1\"></a>    model_dir <span class=\"op\">=</span> <span class=\"st\">&#39;./output/comment_0&#39;</span></span>\n<span id=\"cb2-135\"><a href=\"#cb2-135\" aria-hidden=\"true\" tabindex=\"-1\"></a>    main(max_seq_len, model_dir, num_labels)</span></code></pre></div>\n<hr>\n<h3 id=\"about-me\">About ME</h3>\n<h5 id=\"读书城南-在未来面前我们都是孩子\">👋 读书城南，🤔\n在未来面前，我们都是孩子～</h5>\n<ul>\n<li>📙\n一个热衷于探索学习新方向、新事物的智能产品经理，闲暇时间喜欢coding💻、画图🎨、音乐🎵、学习ing~</li>\n</ul>\n<h5 id=\"social-media\">👋 Social Media</h5>\n<ul>\n<li><p>🛠️ Blog: <a href=\"http://oceaneyes.top\">http://oceaneyes.top</a></p></li>\n<li><p>⚡ PM导航: <a href=\"https://pmhub.oceangzy.top\">https://pmhub.oceangzy.top</a></p></li>\n<li><p>☘️ CNBLOG: <a href=\"https://www.cnblogs.com/oceaneyes-gzy/\">https://www.cnblogs.com/oceaneyes-gzy/</a></p></li>\n<li><p>🌱 AI PRJ自己部署的一些算法demo: <a href=\"http://ai.oceangzy.top/\">http://ai.oceangzy.top/</a></p></li>\n<li><p>📫 Email: 1450136519@qq.com</p></li>\n<li><p>💬 WeChat: <a href=\"https://oceaneyes.top/img/wechatqrcode.jpg\">OCEANGZY</a></p></li>\n<li><p>💬 公众号: <a href=\"https://oceaneyes.top/img/wechatgzh.jpeg\">UncleJoker-GZY</a></p></li>\n</ul>\n<h5 id=\"加入小组\">👋 加入小组~</h5>\n<p><img src=\"https://oceaneyes.top/img/zhishigroup.jpg\" title=\"加入组织\" alt width=\"240\"></p>\n<h5 id=\"感谢打赏\">👋 感谢打赏~</h5>\n<p><img src=\"https://oceaneyes.top/img/alipay.jpg\" title=\"支付宝打赏\" alt width=\"140\">\n<img src=\"https://oceaneyes.top/img/wechatpay.jpg\" title=\"微信打赏\" alt width=\"140\"></p>\n","more":"<h4 id=\"评论情感分类数据处理\">评论情感分类数据处理</h4>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 评论情感分类数据处理</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># labels： 0负面、1中性、2正面</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">class</span> CommentProcessor(DataProcessor):</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">def</span> get_train_examples(<span class=\"va\">self</span>, data_dir):</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"va\">self</span>._create_examples(</span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"va\">self</span>._read_tsv(os.path.join(data_dir,<span class=\"st\">&quot;train.tsv&quot;</span>)),<span class=\"st\">&quot;train&quot;</span></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>        )</span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">def</span> get_dev_examples(<span class=\"va\">self</span>, data_dir):</span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"va\">self</span>._create_examples(</span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"va\">self</span>._read_tsv(os.path.join(data_dir, <span class=\"st\">&quot;dev.tsv&quot;</span>)), <span class=\"st\">&quot;dev&quot;</span></span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>        )</span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">def</span> get_test_examples(<span class=\"va\">self</span>, data_dir):</span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"va\">self</span>._create_examples(</span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"va\">self</span>._read_tsv(os.path.join(data_dir, <span class=\"st\">&quot;test.tsv&quot;</span>)), <span class=\"st\">&quot;test&quot;</span></span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>        )</span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">def</span> get_labels(<span class=\"va\">self</span>):</span>\n<span id=\"cb1-17\"><a href=\"#cb1-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> [<span class=\"st\">&quot;0&quot;</span>,<span class=\"st\">&quot;1&quot;</span>,<span class=\"st\">&quot;2&quot;</span>]</span>\n<span id=\"cb1-18\"><a href=\"#cb1-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">def</span> _create_examples(<span class=\"va\">self</span>,lines,set_type):</span>\n<span id=\"cb1-19\"><a href=\"#cb1-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>        examples<span class=\"op\">=</span>[]</span>\n<span id=\"cb1-20\"><a href=\"#cb1-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">for</span> (i ,line) <span class=\"kw\">in</span> <span class=\"bu\">enumerate</span>(lines):</span>\n<span id=\"cb1-21\"><a href=\"#cb1-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">if</span> i <span class=\"op\">==</span> <span class=\"dv\">0</span>:</span>\n<span id=\"cb1-22\"><a href=\"#cb1-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>                <span class=\"cf\">continue</span></span>\n<span id=\"cb1-23\"><a href=\"#cb1-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>            guid <span class=\"op\">=</span> <span class=\"st\">&quot;</span><span class=\"sc\">%s</span><span class=\"st\">-</span><span class=\"sc\">%s</span><span class=\"st\">&quot;</span> <span class=\"op\">%</span> (set_type,i)</span>\n<span id=\"cb1-24\"><a href=\"#cb1-24\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">try</span>:</span>\n<span id=\"cb1-25\"><a href=\"#cb1-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>                text_a <span class=\"op\">=</span> tokenization.convert_to_unicode(line[<span class=\"dv\">1</span>])</span>\n<span id=\"cb1-26\"><a href=\"#cb1-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">except</span>:</span>\n<span id=\"cb1-27\"><a href=\"#cb1-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>                <span class=\"cf\">continue</span></span>\n<span id=\"cb1-28\"><a href=\"#cb1-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">if</span> set_type <span class=\"op\">==</span> <span class=\"st\">&quot;test&quot;</span>:</span>\n<span id=\"cb1-29\"><a href=\"#cb1-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>                label <span class=\"op\">=</span> <span class=\"st\">&quot;0&quot;</span></span>\n<span id=\"cb1-30\"><a href=\"#cb1-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">else</span>:</span>\n<span id=\"cb1-31\"><a href=\"#cb1-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>                label <span class=\"op\">=</span> tokenization.convert_to_unicode(line[<span class=\"dv\">0</span>])</span>\n<span id=\"cb1-32\"><a href=\"#cb1-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>            examples.append(</span>\n<span id=\"cb1-33\"><a href=\"#cb1-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>                InputExample(guid<span class=\"op\">=</span>guid,text_a <span class=\"op\">=</span> text_a, label<span class=\"op\">=</span>label)</span>\n<span id=\"cb1-34\"><a href=\"#cb1-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>            )</span>\n<span id=\"cb1-35\"><a href=\"#cb1-35\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> examples</span></code></pre></div>\n<h4 id=\"将bert模型ckpt文件转为-tfserving部署所需的pb\">将Bert模型ckpt文件转为\ntfserving部署所需的pb</h4>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#!/usr/bin/python3.6</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">&#39;&#39;&#39;</span></span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">BERT模型ckpt文件转为部署tfserving所需的文件</span></span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">&#39;&#39;&#39;</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> json</span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> os</span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> enum <span class=\"im\">import</span> Enum</span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> sys</span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> modeling</span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> termcolor <span class=\"im\">import</span> colored</span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> logging</span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> tensorflow <span class=\"im\">as</span> tf</span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> argparse</span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> pickle</span>\n<span id=\"cb2-15\"><a href=\"#cb2-15\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-16\"><a href=\"#cb2-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>tf.app.flags.DEFINE_string(<span class=\"st\">&#39;export_model_dir&#39;</span>, <span class=\"st\">&quot;./output/comment_0/versions&quot;</span>, <span class=\"st\">&#39;Directory where the model exported files should be placed.&#39;</span>)</span>\n<span id=\"cb2-17\"><a href=\"#cb2-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>tf.app.flags.DEFINE_integer(<span class=\"st\">&#39;model_version&#39;</span>, <span class=\"dv\">10001</span>, <span class=\"st\">&#39;Models version number.&#39;</span>)</span>\n<span id=\"cb2-18\"><a href=\"#cb2-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>FLAGS <span class=\"op\">=</span> tf.app.flags.FLAGS</span>\n<span id=\"cb2-19\"><a href=\"#cb2-19\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-20\"><a href=\"#cb2-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> create_classification_model(bert_config, is_training, input_ids, input_mask, segment_ids, labels, num_labels):</span>\n<span id=\"cb2-21\"><a href=\"#cb2-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">&quot;&quot;&quot;</span></span>\n<span id=\"cb2-22\"><a href=\"#cb2-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param bert_config:</span></span>\n<span id=\"cb2-23\"><a href=\"#cb2-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param is_training:</span></span>\n<span id=\"cb2-24\"><a href=\"#cb2-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param input_ids:</span></span>\n<span id=\"cb2-25\"><a href=\"#cb2-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param input_mask:</span></span>\n<span id=\"cb2-26\"><a href=\"#cb2-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param segment_ids:</span></span>\n<span id=\"cb2-27\"><a href=\"#cb2-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param labels:</span></span>\n<span id=\"cb2-28\"><a href=\"#cb2-28\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param num_labels:</span></span>\n<span id=\"cb2-29\"><a href=\"#cb2-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :param use_one_hot_embedding:</span></span>\n<span id=\"cb2-30\"><a href=\"#cb2-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    :return:</span></span>\n<span id=\"cb2-31\"><a href=\"#cb2-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">    &quot;&quot;&quot;</span></span>\n<span id=\"cb2-32\"><a href=\"#cb2-32\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-33\"><a href=\"#cb2-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">#import tensorflow as tf</span></span>\n<span id=\"cb2-34\"><a href=\"#cb2-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\">#import modeling</span></span>\n<span id=\"cb2-35\"><a href=\"#cb2-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-36\"><a href=\"#cb2-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"co\"># 通过传入的训练数据，进行representation</span></span>\n<span id=\"cb2-37\"><a href=\"#cb2-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>    model <span class=\"op\">=</span> modeling.BertModel(</span>\n<span id=\"cb2-38\"><a href=\"#cb2-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>        config<span class=\"op\">=</span>bert_config,</span>\n<span id=\"cb2-39\"><a href=\"#cb2-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>        is_training<span class=\"op\">=</span>is_training,</span>\n<span id=\"cb2-40\"><a href=\"#cb2-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>        input_ids<span class=\"op\">=</span>input_ids,</span>\n<span id=\"cb2-41\"><a href=\"#cb2-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>        input_mask<span class=\"op\">=</span>input_mask,</span>\n<span id=\"cb2-42\"><a href=\"#cb2-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>        token_type_ids<span class=\"op\">=</span>segment_ids,</span>\n<span id=\"cb2-43\"><a href=\"#cb2-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>    )</span>\n<span id=\"cb2-44\"><a href=\"#cb2-44\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-45\"><a href=\"#cb2-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>    output_layer <span class=\"op\">=</span> model.get_pooled_output()</span>\n<span id=\"cb2-46\"><a href=\"#cb2-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>    hidden_size <span class=\"op\">=</span> output_layer.shape[<span class=\"op\">-</span><span class=\"dv\">1</span>].value</span>\n<span id=\"cb2-47\"><a href=\"#cb2-47\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-48\"><a href=\"#cb2-48\" aria-hidden=\"true\" tabindex=\"-1\"></a>    output_weights <span class=\"op\">=</span> tf.get_variable(</span>\n<span id=\"cb2-49\"><a href=\"#cb2-49\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"st\">&quot;output_weights&quot;</span>, [num_labels, hidden_size],</span>\n<span id=\"cb2-50\"><a href=\"#cb2-50\" aria-hidden=\"true\" tabindex=\"-1\"></a>        initializer<span class=\"op\">=</span>tf.truncated_normal_initializer(stddev<span class=\"op\">=</span><span class=\"fl\">0.02</span>))</span>\n<span id=\"cb2-51\"><a href=\"#cb2-51\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-52\"><a href=\"#cb2-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>    output_bias <span class=\"op\">=</span> tf.get_variable(</span>\n<span id=\"cb2-53\"><a href=\"#cb2-53\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"st\">&quot;output_bias&quot;</span>, [num_labels], initializer<span class=\"op\">=</span>tf.zeros_initializer())</span>\n<span id=\"cb2-54\"><a href=\"#cb2-54\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-55\"><a href=\"#cb2-55\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">with</span> tf.variable_scope(<span class=\"st\">&quot;loss&quot;</span>):</span>\n<span id=\"cb2-56\"><a href=\"#cb2-56\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">if</span> is_training:</span>\n<span id=\"cb2-57\"><a href=\"#cb2-57\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"co\"># I.e., 0.1 dropout</span></span>\n<span id=\"cb2-58\"><a href=\"#cb2-58\" aria-hidden=\"true\" tabindex=\"-1\"></a>            output_layer <span class=\"op\">=</span> tf.nn.dropout(output_layer, keep_prob<span class=\"op\">=</span><span class=\"fl\">0.9</span>)</span>\n<span id=\"cb2-59\"><a href=\"#cb2-59\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-60\"><a href=\"#cb2-60\" aria-hidden=\"true\" tabindex=\"-1\"></a>        logits <span class=\"op\">=</span> tf.matmul(output_layer, output_weights, transpose_b<span class=\"op\">=</span><span class=\"va\">True</span>)</span>\n<span id=\"cb2-61\"><a href=\"#cb2-61\" aria-hidden=\"true\" tabindex=\"-1\"></a>        logits <span class=\"op\">=</span> tf.nn.bias_add(logits, output_bias)</span>\n<span id=\"cb2-62\"><a href=\"#cb2-62\" aria-hidden=\"true\" tabindex=\"-1\"></a>        probabilities <span class=\"op\">=</span> tf.nn.softmax(logits, axis<span class=\"op\">=-</span><span class=\"dv\">1</span>)</span>\n<span id=\"cb2-63\"><a href=\"#cb2-63\" aria-hidden=\"true\" tabindex=\"-1\"></a>        log_probs <span class=\"op\">=</span> tf.nn.log_softmax(logits, axis<span class=\"op\">=-</span><span class=\"dv\">1</span>)</span>\n<span id=\"cb2-64\"><a href=\"#cb2-64\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-65\"><a href=\"#cb2-65\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">if</span> labels <span class=\"kw\">is</span> <span class=\"kw\">not</span> <span class=\"va\">None</span>:</span>\n<span id=\"cb2-66\"><a href=\"#cb2-66\" aria-hidden=\"true\" tabindex=\"-1\"></a>            one_hot_labels <span class=\"op\">=</span> tf.one_hot(labels, depth<span class=\"op\">=</span>num_labels, dtype<span class=\"op\">=</span>tf.float32)</span>\n<span id=\"cb2-67\"><a href=\"#cb2-67\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-68\"><a href=\"#cb2-68\" aria-hidden=\"true\" tabindex=\"-1\"></a>            per_example_loss <span class=\"op\">=</span> <span class=\"op\">-</span>tf.reduce_sum(one_hot_labels <span class=\"op\">*</span> log_probs, axis<span class=\"op\">=-</span><span class=\"dv\">1</span>)</span>\n<span id=\"cb2-69\"><a href=\"#cb2-69\" aria-hidden=\"true\" tabindex=\"-1\"></a>            loss <span class=\"op\">=</span> tf.reduce_mean(per_example_loss)</span>\n<span id=\"cb2-70\"><a href=\"#cb2-70\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">else</span>:</span>\n<span id=\"cb2-71\"><a href=\"#cb2-71\" aria-hidden=\"true\" tabindex=\"-1\"></a>            loss, per_example_loss <span class=\"op\">=</span> <span class=\"va\">None</span>, <span class=\"va\">None</span></span>\n<span id=\"cb2-72\"><a href=\"#cb2-72\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">return</span> (loss, per_example_loss, logits, probabilities)</span>\n<span id=\"cb2-73\"><a href=\"#cb2-73\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-74\"><a href=\"#cb2-74\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> main(max_seq_len, model_dir, num_labels):</span>\n<span id=\"cb2-75\"><a href=\"#cb2-75\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-76\"><a href=\"#cb2-76\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">with</span> tf.Session() <span class=\"im\">as</span> sess:</span>\n<span id=\"cb2-77\"><a href=\"#cb2-77\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">#输入占位符</span></span>\n<span id=\"cb2-78\"><a href=\"#cb2-78\" aria-hidden=\"true\" tabindex=\"-1\"></a>        input_ids <span class=\"op\">=</span> tf.placeholder(tf.int32, (<span class=\"va\">None</span>, max_seq_len), <span class=\"st\">&#39;input_ids&#39;</span>)</span>\n<span id=\"cb2-79\"><a href=\"#cb2-79\" aria-hidden=\"true\" tabindex=\"-1\"></a>        input_mask <span class=\"op\">=</span> tf.placeholder(tf.int32, (<span class=\"va\">None</span>, max_seq_len), <span class=\"st\">&#39;input_mask&#39;</span>)</span>\n<span id=\"cb2-80\"><a href=\"#cb2-80\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">#模型前向传播</span></span>\n<span id=\"cb2-81\"><a href=\"#cb2-81\" aria-hidden=\"true\" tabindex=\"-1\"></a>        bert_config <span class=\"op\">=</span> modeling.BertConfig.from_json_file(<span class=\"st\">&#39;./uncased_L-2_H-128_A-2/bert_config.json&#39;</span>)</span>\n<span id=\"cb2-82\"><a href=\"#cb2-82\" aria-hidden=\"true\" tabindex=\"-1\"></a>        loss, per_example_loss, logits, probabilities <span class=\"op\">=</span> create_classification_model(bert_config<span class=\"op\">=</span>bert_config, is_training<span class=\"op\">=</span><span class=\"va\">False</span>,</span>\n<span id=\"cb2-83\"><a href=\"#cb2-83\" aria-hidden=\"true\" tabindex=\"-1\"></a>            input_ids<span class=\"op\">=</span>input_ids, input_mask<span class=\"op\">=</span>input_mask, segment_ids<span class=\"op\">=</span><span class=\"va\">None</span>, labels<span class=\"op\">=</span><span class=\"va\">None</span>, num_labels<span class=\"op\">=</span>num_labels)</span>\n<span id=\"cb2-84\"><a href=\"#cb2-84\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">#转换结果格式</span></span>\n<span id=\"cb2-85\"><a href=\"#cb2-85\" aria-hidden=\"true\" tabindex=\"-1\"></a>        logits <span class=\"op\">=</span> tf.argmax(logits, <span class=\"dv\">1</span>)</span>\n<span id=\"cb2-86\"><a href=\"#cb2-86\" aria-hidden=\"true\" tabindex=\"-1\"></a>        probabilities <span class=\"op\">=</span> tf.identity(probabilities, <span class=\"st\">&#39;pred_prob&#39;</span>)</span>\n<span id=\"cb2-87\"><a href=\"#cb2-87\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\">#模型保存的对象</span></span>\n<span id=\"cb2-88\"><a href=\"#cb2-88\" aria-hidden=\"true\" tabindex=\"-1\"></a>        saver <span class=\"op\">=</span> tf.train.Saver()</span>\n<span id=\"cb2-89\"><a href=\"#cb2-89\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">with</span> tf.Session() <span class=\"im\">as</span> sess:</span>\n<span id=\"cb2-90\"><a href=\"#cb2-90\" aria-hidden=\"true\" tabindex=\"-1\"></a>        sess.run(tf.global_variables_initializer())</span>\n<span id=\"cb2-91\"><a href=\"#cb2-91\" aria-hidden=\"true\" tabindex=\"-1\"></a>        latest_checkpoint <span class=\"op\">=</span> tf.train.latest_checkpoint(model_dir)</span>\n<span id=\"cb2-92\"><a href=\"#cb2-92\" aria-hidden=\"true\" tabindex=\"-1\"></a>        saver.restore(sess,latest_checkpoint )</span>\n<span id=\"cb2-93\"><a href=\"#cb2-93\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\"># Create SavedModelBuilder class</span></span>\n<span id=\"cb2-94\"><a href=\"#cb2-94\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\"># defines where the model will be exported</span></span>\n<span id=\"cb2-95\"><a href=\"#cb2-95\" aria-hidden=\"true\" tabindex=\"-1\"></a>        export_path_base <span class=\"op\">=</span> FLAGS.export_model_dir</span>\n<span id=\"cb2-96\"><a href=\"#cb2-96\" aria-hidden=\"true\" tabindex=\"-1\"></a>        export_path <span class=\"op\">=</span> os.path.join(</span>\n<span id=\"cb2-97\"><a href=\"#cb2-97\" aria-hidden=\"true\" tabindex=\"-1\"></a>            tf.compat.as_bytes(export_path_base),</span>\n<span id=\"cb2-98\"><a href=\"#cb2-98\" aria-hidden=\"true\" tabindex=\"-1\"></a>            tf.compat.as_bytes(<span class=\"bu\">str</span>(FLAGS.model_version)))</span>\n<span id=\"cb2-99\"><a href=\"#cb2-99\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"st\">&#39;Exporting trained model to&#39;</span>, export_path)</span>\n<span id=\"cb2-100\"><a href=\"#cb2-100\" aria-hidden=\"true\" tabindex=\"-1\"></a>        builder <span class=\"op\">=</span> tf.saved_model.builder.SavedModelBuilder(export_path)</span>\n<span id=\"cb2-101\"><a href=\"#cb2-101\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\"># Creates the TensorInfo protobuf objects that encapsulates the input/output tensors</span></span>\n<span id=\"cb2-102\"><a href=\"#cb2-102\" aria-hidden=\"true\" tabindex=\"-1\"></a>        input_ids_tensor <span class=\"op\">=</span> tf.saved_model.utils.build_tensor_info(input_ids)</span>\n<span id=\"cb2-103\"><a href=\"#cb2-103\" aria-hidden=\"true\" tabindex=\"-1\"></a>        input_mask_tensor <span class=\"op\">=</span> tf.saved_model.utils.build_tensor_info(input_mask)</span>\n<span id=\"cb2-104\"><a href=\"#cb2-104\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\"># output tensor info</span></span>\n<span id=\"cb2-105\"><a href=\"#cb2-105\" aria-hidden=\"true\" tabindex=\"-1\"></a>        logits_output <span class=\"op\">=</span> tf.saved_model.utils.build_tensor_info(logits)</span>\n<span id=\"cb2-106\"><a href=\"#cb2-106\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"st\">&quot;logits_output&quot;</span>)</span>\n<span id=\"cb2-107\"><a href=\"#cb2-107\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(logits_output)</span>\n<span id=\"cb2-108\"><a href=\"#cb2-108\" aria-hidden=\"true\" tabindex=\"-1\"></a>        probabilities_output <span class=\"op\">=</span> tf.saved_model.utils.build_tensor_info(probabilities)</span>\n<span id=\"cb2-109\"><a href=\"#cb2-109\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"st\">&quot;probabilities_output&quot;</span>)</span>\n<span id=\"cb2-110\"><a href=\"#cb2-110\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(probabilities_output)</span>\n<span id=\"cb2-111\"><a href=\"#cb2-111\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-112\"><a href=\"#cb2-112\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\"># Defines the DeepLab signatures, uses the TF Predict API</span></span>\n<span id=\"cb2-113\"><a href=\"#cb2-113\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\"># It receives an image and its dimensions and output the segmentation mask</span></span>\n<span id=\"cb2-114\"><a href=\"#cb2-114\" aria-hidden=\"true\" tabindex=\"-1\"></a>        labels_map <span class=\"op\">=</span> [<span class=\"st\">&#39;0&#39;</span>,<span class=\"st\">&#39;1&#39;</span>,<span class=\"st\">&#39;2&#39;</span>]</span>\n<span id=\"cb2-115\"><a href=\"#cb2-115\" aria-hidden=\"true\" tabindex=\"-1\"></a>        prediction_signature <span class=\"op\">=</span> (</span>\n<span id=\"cb2-116\"><a href=\"#cb2-116\" aria-hidden=\"true\" tabindex=\"-1\"></a>            tf.saved_model.signature_def_utils.build_signature_def(</span>\n<span id=\"cb2-117\"><a href=\"#cb2-117\" aria-hidden=\"true\" tabindex=\"-1\"></a>                inputs<span class=\"op\">=</span>&#123;<span class=\"st\">&#39;input_ids&#39;</span>: input_ids_tensor, <span class=\"st\">&#39;input_mask&#39;</span>: input_mask_tensor&#125;,</span>\n<span id=\"cb2-118\"><a href=\"#cb2-118\" aria-hidden=\"true\" tabindex=\"-1\"></a>                outputs<span class=\"op\">=</span>&#123;<span class=\"st\">&#39;pred_label&#39;</span>: logits_output , <span class=\"st\">&#39;score&#39;</span>:probabilities_output&#125;,</span>\n<span id=\"cb2-119\"><a href=\"#cb2-119\" aria-hidden=\"true\" tabindex=\"-1\"></a>                method_name<span class=\"op\">=</span>tf.saved_model.signature_constants.PREDICT_METHOD_NAME))</span>\n<span id=\"cb2-120\"><a href=\"#cb2-120\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-121\"><a href=\"#cb2-121\" aria-hidden=\"true\" tabindex=\"-1\"></a>        builder.add_meta_graph_and_variables(</span>\n<span id=\"cb2-122\"><a href=\"#cb2-122\" aria-hidden=\"true\" tabindex=\"-1\"></a>            sess, [tf.saved_model.tag_constants.SERVING],</span>\n<span id=\"cb2-123\"><a href=\"#cb2-123\" aria-hidden=\"true\" tabindex=\"-1\"></a>            signature_def_map<span class=\"op\">=</span>&#123;</span>\n<span id=\"cb2-124\"><a href=\"#cb2-124\" aria-hidden=\"true\" tabindex=\"-1\"></a>                <span class=\"st\">&#39;result&#39;</span>:</span>\n<span id=\"cb2-125\"><a href=\"#cb2-125\" aria-hidden=\"true\" tabindex=\"-1\"></a>                    prediction_signature,</span>\n<span id=\"cb2-126\"><a href=\"#cb2-126\" aria-hidden=\"true\" tabindex=\"-1\"></a>            &#125;)</span>\n<span id=\"cb2-127\"><a href=\"#cb2-127\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"co\"># export the model</span></span>\n<span id=\"cb2-128\"><a href=\"#cb2-128\" aria-hidden=\"true\" tabindex=\"-1\"></a>        builder.save(as_text<span class=\"op\">=</span><span class=\"va\">True</span>)</span>\n<span id=\"cb2-129\"><a href=\"#cb2-129\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"bu\">print</span>(<span class=\"st\">&#39;Done exporting!&#39;</span>)</span>\n<span id=\"cb2-130\"><a href=\"#cb2-130\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-131\"><a href=\"#cb2-131\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">if</span> <span class=\"va\">__name__</span> <span class=\"op\">==</span> <span class=\"st\">&#39;__main__&#39;</span>:</span>\n<span id=\"cb2-132\"><a href=\"#cb2-132\" aria-hidden=\"true\" tabindex=\"-1\"></a>    max_seq_len <span class=\"op\">=</span> <span class=\"dv\">128</span></span>\n<span id=\"cb2-133\"><a href=\"#cb2-133\" aria-hidden=\"true\" tabindex=\"-1\"></a>    num_labels <span class=\"op\">=</span> <span class=\"dv\">3</span></span>\n<span id=\"cb2-134\"><a href=\"#cb2-134\" aria-hidden=\"true\" tabindex=\"-1\"></a>    model_dir <span class=\"op\">=</span> <span class=\"st\">&#39;./output/comment_0&#39;</span></span>\n<span id=\"cb2-135\"><a href=\"#cb2-135\" aria-hidden=\"true\" tabindex=\"-1\"></a>    main(max_seq_len, model_dir, num_labels)</span></code></pre></div>\n<hr>\n<h3 id=\"about-me\">About ME</h3>\n<h5 id=\"读书城南-在未来面前我们都是孩子\">👋 读书城南，🤔\n在未来面前，我们都是孩子～</h5>\n<ul>\n<li>📙\n一个热衷于探索学习新方向、新事物的智能产品经理，闲暇时间喜欢coding💻、画图🎨、音乐🎵、学习ing~</li>\n</ul>\n<h5 id=\"social-media\">👋 Social Media</h5>\n<ul>\n<li><p>🛠️ Blog: <a href=\"http://oceaneyes.top\">http://oceaneyes.top</a></p></li>\n<li><p>⚡ PM导航: <a href=\"https://pmhub.oceangzy.top\">https://pmhub.oceangzy.top</a></p></li>\n<li><p>☘️ CNBLOG: <a href=\"https://www.cnblogs.com/oceaneyes-gzy/\">https://www.cnblogs.com/oceaneyes-gzy/</a></p></li>\n<li><p>🌱 AI PRJ自己部署的一些算法demo: <a href=\"http://ai.oceangzy.top/\">http://ai.oceangzy.top/</a></p></li>\n<li><p>📫 Email: 1450136519@qq.com</p></li>\n<li><p>💬 WeChat: <a href=\"https://oceaneyes.top/img/wechatqrcode.jpg\">OCEANGZY</a></p></li>\n<li><p>💬 公众号: <a href=\"https://oceaneyes.top/img/wechatgzh.jpeg\">UncleJoker-GZY</a></p></li>\n</ul>\n<h5 id=\"加入小组\">👋 加入小组~</h5>\n<p><img src=\"https://oceaneyes.top/img/zhishigroup.jpg\" title=\"加入组织\" alt width=\"240\"></p>\n<h5 id=\"感谢打赏\">👋 感谢打赏~</h5>\n<p><img src=\"https://oceaneyes.top/img/alipay.jpg\" title=\"支付宝打赏\" alt width=\"140\">\n<img src=\"https://oceaneyes.top/img/wechatpay.jpg\" title=\"微信打赏\" alt width=\"140\"></p>\n","categories":[{"name":"Artificial Intelligence","path":"api/categories/Artificial Intelligence.json"},{"name":"Machine Learning","path":"api/categories/Machine Learning.json"},{"name":"Algorithm","path":"api/categories/Algorithm.json"},{"name":"NLP","path":"api/categories/NLP.json"},{"name":"Bert","path":"api/categories/Bert.json"}],"tags":[{"name":"Machine Learning","path":"api/tags/Machine Learning.json"},{"name":"Algorithm","path":"api/tags/Algorithm.json"},{"name":"NLP","path":"api/tags/NLP.json"},{"name":"Bert","path":"api/tags/Bert.json"},{"name":"Tensorflow","path":"api/tags/Tensorflow.json"}]}