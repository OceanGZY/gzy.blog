{"title":"案例-基于关联规则算法实现电影推荐系统","slug":"案例-基于关联规则算法实现电影推荐系统","date":"2021-01-02T14:19:00.000Z","updated":"2022-09-30T06:56:37.199Z","comments":true,"path":"api/articles/案例-基于关联规则算法实现电影推荐系统.json","excerpt":null,"covers":["/.top//attachment:8bf77266-511e-4e87-bcf0-a2b5340a7f20.png","/.top//attachment:e0663e25-d0d7-4ee0-a2db-857a92930475.png","/.top//attachment:32ceb63e-c986-499e-93f8-638b54d1359c.png","/.top//attachment:6fdd7eed-bc5c-4fa4-8c63-9072c99b5340.png","/.top//attachment:328215b9-7799-4763-b611-8b27a8340c20.png","/.top//attachment:3881dff3-57bd-45dd-a549-56af16b42ec5.png","/.top//output_56_1.png","/.top//attachment:c637faba-51f3-4a89-84f5-ede3ce337e4c.png","/.top//attachment:580b16df-141a-4cce-a502-53a01d1ecb68.png","https://oceaneyes.top/img/zhishigroup.jpg","https://oceaneyes.top/img/alipay.jpg","https://oceaneyes.top/img/wechatpay.jpg"],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"基于关联规则算法实现电影推荐系统\">基于关联规则算法实现电影推荐系统</h3>\n<figure>\n<img src=\"/.top//attachment:8bf77266-511e-4e87-bcf0-a2b5340a7f20.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure>\n<ul>\n<li>利用数据挖掘算法中的Apriori(关联规则)算法来实现一个电影推荐系统\n<ul>\n<li>加载数据</li>\n<li>数据预处理</li>\n<li>生成频繁项集、关联规则</li>\n</ul></li>\n<li>通过关联规则生成电影推荐的列表</li>\n</ul>\n<h3 id=\"apriori算法\">Apriori算法</h3>\n<ul>\n<li><p><strong>案例：</strong> 啤酒与尿布:\n沃尔玛超市在分析销售记录时，发现了啤酒与尿布经常一起被购买，于是他们调整了货架将两者放在了一起，结果真的提升了啤酒的销量。\n原因解释: 爸爸在给宝宝买尿布的时候，会顺便给自己买点啤酒？</p></li>\n<li><p><strong>概述：</strong>\nApriori算法是一种最有影响力的挖掘布尔关联规则的频繁项集的算法，其命名Apriori源于算法使用了频繁项集性质的先验(Prior)知识。\n接下来我们将以超市订单的例子理解关联分析相关的重要概念:\nSupport(支持度)、Confidence(置信度)、Lift(提升度）。</p>\n<figure>\n<img src=\"/.top//attachment:e0663e25-d0d7-4ee0-a2db-857a92930475.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure>\n<ul>\n<li>Support(支持度)：指某事件出现的概率，在本例中即指某个商品组合出现的次数占总次数的比例。</li>\n</ul>\n<p>例：Support('Bread') = 4/5 = 0.8 Support('Milk') = 4/5 = 0.8\nSupport('Bread+Milk') = 3/5 = 0.6</p>\n<ul>\n<li>Confidence(置信度)：本质上是个条件概率，即当购买了商品A的前提下，购买商品B的概率。</li>\n</ul>\n<p>例：Confidence('Bread'—&gt; 'Milk') = Support('Bread+Milk')/\nSupport('Bread') = 0.6/0.8 = 0.75</p>\n<ul>\n<li>Lift(提升度）:\n指商品A的出现，对商品B的出现的概率的提升程度。Lift(A-&gt;B) =\nConfidence(A, B) / Support(B)</li>\n</ul>\n<p>例：Lift('Bread'—&gt; 'Milk') = 0.75/0.8 = 0.9375</p></li>\n<li><p><strong>对于Lift(提升度）有三种情况：</strong></p>\n<ul>\n<li>Lift(A-&gt;B)&gt;1: 代表A对B的出现概率有提升。</li>\n<li>Lift(A-&gt;B)=1: 代表A对B的出现概率没有提升，也没有下降。</li>\n<li>Lift(A-&gt;B)&lt;1: 代表A对B的出现概率有下降效果。</li>\n</ul></li>\n<li><p><strong>原理：</strong>\n该算法挖掘关联规则的过程，即是查找频繁项集(frequent itemset)的过程:</p>\n<ul>\n<li>频繁项集：支持度大于等于最小支持度(Min Support)阈值的项集。</li>\n<li>非频繁集：支持度小于最小支持度的项集。</li>\n</ul></li>\n<li><p><strong>流程：</strong> K = 1, 计算K项集的支持度；\n筛选掉小于最小支持度的项集；\n如果项集为空，则对应K-1项集的结果为最终结果。否则K =\nK+1重复2-3步</p></li>\n</ul>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> pandas <span class=\"im\">as</span> pd</span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> matplotlib.pyplot <span class=\"im\">as</span> plt</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> mlxtend</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> numpy <span class=\"im\">as</span> np</span></code></pre></div>\n<h4 id=\"电影数据准备\">电影数据准备</h4>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_file <span class=\"op\">=</span> <span class=\"st\">&#39;./movie_dataset/movies_metadata.csv&#39;</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_file <span class=\"op\">=</span> <span class=\"st\">&#39;./movie_dataset/ratings_small.csv&#39;</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df <span class=\"op\">=</span> pd.read_csv(movie_data_file)</span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df <span class=\"op\">=</span> pd.read_csv(ratings_file)</span></code></pre></div>\n<pre><code>c:\\users\\ysilhouette\\documents\\pyenv\\py3.6.5\\lib\\site-packages\\IPython\\core\\interactiveshell.py:3072: DtypeWarning: Columns (10) have mixed types.Specify dtype option on import or set low_memory=False.\n  interactivity=interactivity, compiler=compiler, result=result)</code></pre>\n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df.head(<span class=\"dv\">5</span>)</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nadult\n</th>\n<th>\nbelongs_to_collection\n</th>\n<th>\nbudget\n</th>\n<th>\ngenres\n</th>\n<th>\nhomepage\n</th>\n<th>\nid\n</th>\n<th>\nimdb_id\n</th>\n<th>\noriginal_language\n</th>\n<th>\noriginal_title\n</th>\n<th>\noverview\n</th>\n<th>\n...\n</th>\n<th>\nrelease_date\n</th>\n<th>\nrevenue\n</th>\n<th>\nruntime\n</th>\n<th>\nspoken_languages\n</th>\n<th>\nstatus\n</th>\n<th>\ntagline\n</th>\n<th>\ntitle\n</th>\n<th>\nvideo\n</th>\n<th>\nvote_average\n</th>\n<th>\nvote_count\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\nFalse\n</td>\n<td>\n{'id': 10194, 'name': 'Toy Story Collection', ...\n</td>\n<td>\n30000000\n</td>\n<td>\n[{'id': 16, 'name': 'Animation'}, {'id': 35, '...\n</td>\n<td>\nhttp://toystory.disney.com/toy-story\n</td>\n<td>\n862\n</td>\n<td>\ntt0114709\n</td>\n<td>\nen\n</td>\n<td>\nToy Story\n</td>\n<td>\nLed by Woody, Andy's toys live happily in his ...\n</td>\n<td>\n...\n</td>\n<td>\n1995-10-30\n</td>\n<td>\n373554033.0\n</td>\n<td>\n81.0\n</td>\n<td>\n[{'iso_639_1': 'en', 'name': 'English'}]\n</td>\n<td>\nReleased\n</td>\n<td>\nNaN\n</td>\n<td>\nToy Story\n</td>\n<td>\nFalse\n</td>\n<td>\n7.7\n</td>\n<td>\n5415.0\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\nFalse\n</td>\n<td>\nNaN\n</td>\n<td>\n65000000\n</td>\n<td>\n[{'id': 12, 'name': 'Adventure'}, {'id': 14, '...\n</td>\n<td>\nNaN\n</td>\n<td>\n8844\n</td>\n<td>\ntt0113497\n</td>\n<td>\nen\n</td>\n<td>\nJumanji\n</td>\n<td>\nWhen siblings Judy and Peter discover an encha...\n</td>\n<td>\n...\n</td>\n<td>\n1995-12-15\n</td>\n<td>\n262797249.0\n</td>\n<td>\n104.0\n</td>\n<td>\n[{'iso_639_1': 'en', 'name': 'English'}, {'iso...\n</td>\n<td>\nReleased\n</td>\n<td>\nRoll the dice and unleash the excitement!\n</td>\n<td>\nJumanji\n</td>\n<td>\nFalse\n</td>\n<td>\n6.9\n</td>\n<td>\n2413.0\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\nFalse\n</td>\n<td>\n{'id': 119050, 'name': 'Grumpy Old Men Collect...\n</td>\n<td>\n0\n</td>\n<td>\n[{'id': 10749, 'name': 'Romance'}, {'id': 35, ...\n</td>\n<td>\nNaN\n</td>\n<td>\n15602\n</td>\n<td>\ntt0113228\n</td>\n<td>\nen\n</td>\n<td>\nGrumpier Old Men\n</td>\n<td>\nA family wedding reignites the ancient feud be...\n</td>\n<td>\n...\n</td>\n<td>\n1995-12-22\n</td>\n<td>\n0.0\n</td>\n<td>\n101.0\n</td>\n<td>\n[{'iso_639_1': 'en', 'name': 'English'}]\n</td>\n<td>\nReleased\n</td>\n<td>\nStill Yelling. Still Fighting. Still Ready for...\n</td>\n<td>\nGrumpier Old Men\n</td>\n<td>\nFalse\n</td>\n<td>\n6.5\n</td>\n<td>\n92.0\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\nFalse\n</td>\n<td>\nNaN\n</td>\n<td>\n16000000\n</td>\n<td>\n[{'id': 35, 'name': 'Comedy'}, {'id': 18, 'nam...\n</td>\n<td>\nNaN\n</td>\n<td>\n31357\n</td>\n<td>\ntt0114885\n</td>\n<td>\nen\n</td>\n<td>\nWaiting to Exhale\n</td>\n<td>\nCheated on, mistreated and stepped on, the wom...\n</td>\n<td>\n...\n</td>\n<td>\n1995-12-22\n</td>\n<td>\n81452156.0\n</td>\n<td>\n127.0\n</td>\n<td>\n[{'iso_639_1': 'en', 'name': 'English'}]\n</td>\n<td>\nReleased\n</td>\n<td>\nFriends are the people who let you be yourself...\n</td>\n<td>\nWaiting to Exhale\n</td>\n<td>\nFalse\n</td>\n<td>\n6.1\n</td>\n<td>\n34.0\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\nFalse\n</td>\n<td>\n{'id': 96871, 'name': 'Father of the Bride Col...\n</td>\n<td>\n0\n</td>\n<td>\n[{'id': 35, 'name': 'Comedy'}]\n</td>\n<td>\nNaN\n</td>\n<td>\n11862\n</td>\n<td>\ntt0113041\n</td>\n<td>\nen\n</td>\n<td>\nFather of the Bride Part II\n</td>\n<td>\nJust when George Banks has recovered from his ...\n</td>\n<td>\n...\n</td>\n<td>\n1995-02-10\n</td>\n<td>\n76578911.0\n</td>\n<td>\n106.0\n</td>\n<td>\n[{'iso_639_1': 'en', 'name': 'English'}]\n</td>\n<td>\nReleased\n</td>\n<td>\nJust When His World Is Back To Normal... He's ...\n</td>\n<td>\nFather of the Bride Part II\n</td>\n<td>\nFalse\n</td>\n<td>\n5.7\n</td>\n<td>\n173.0\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n5 rows × 24 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb6\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df.describe()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nrevenue\n</th>\n<th>\nruntime\n</th>\n<th>\nvote_average\n</th>\n<th>\nvote_count\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\ncount\n</th>\n<td>\n4.546000e+04\n</td>\n<td>\n45203.000000\n</td>\n<td>\n45460.000000\n</td>\n<td>\n45460.000000\n</td>\n</tr>\n<tr>\n<th>\nmean\n</th>\n<td>\n1.120935e+07\n</td>\n<td>\n94.128199\n</td>\n<td>\n5.618207\n</td>\n<td>\n109.897338\n</td>\n</tr>\n<tr>\n<th>\nstd\n</th>\n<td>\n6.433225e+07\n</td>\n<td>\n38.407810\n</td>\n<td>\n1.924216\n</td>\n<td>\n491.310374\n</td>\n</tr>\n<tr>\n<th>\nmin\n</th>\n<td>\n0.000000e+00\n</td>\n<td>\n0.000000\n</td>\n<td>\n0.000000\n</td>\n<td>\n0.000000\n</td>\n</tr>\n<tr>\n<th>\n25%\n</th>\n<td>\n0.000000e+00\n</td>\n<td>\n85.000000\n</td>\n<td>\n5.000000\n</td>\n<td>\n3.000000\n</td>\n</tr>\n<tr>\n<th>\n50%\n</th>\n<td>\n0.000000e+00\n</td>\n<td>\n95.000000\n</td>\n<td>\n6.000000\n</td>\n<td>\n10.000000\n</td>\n</tr>\n<tr>\n<th>\n75%\n</th>\n<td>\n0.000000e+00\n</td>\n<td>\n107.000000\n</td>\n<td>\n6.800000\n</td>\n<td>\n34.000000\n</td>\n</tr>\n<tr>\n<th>\nmax\n</th>\n<td>\n2.787965e+09\n</td>\n<td>\n1256.000000\n</td>\n<td>\n10.000000\n</td>\n<td>\n14075.000000\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb7\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df.info</span></code></pre></div>\n<pre><code>&lt;bound method DataFrame.info of        adult                              belongs_to_collection    budget  \\\n0      False  &#123;&#39;id&#39;: 10194, &#39;name&#39;: &#39;Toy Story Collection&#39;, ...  30000000   \n1      False                                                NaN  65000000   \n2      False  &#123;&#39;id&#39;: 119050, &#39;name&#39;: &#39;Grumpy Old Men Collect...         0   \n3      False                                                NaN  16000000   \n4      False  &#123;&#39;id&#39;: 96871, &#39;name&#39;: &#39;Father of the Bride Col...         0   \n...      ...                                                ...       ...   \n45461  False                                                NaN         0   \n45462  False                                                NaN         0   \n45463  False                                                NaN         0   \n45464  False                                                NaN         0   \n45465  False                                                NaN         0   \n\n                                                  genres  \\\n0      [&#123;&#39;id&#39;: 16, &#39;name&#39;: &#39;Animation&#39;&#125;, &#123;&#39;id&#39;: 35, &#39;...   \n1      [&#123;&#39;id&#39;: 12, &#39;name&#39;: &#39;Adventure&#39;&#125;, &#123;&#39;id&#39;: 14, &#39;...   \n2      [&#123;&#39;id&#39;: 10749, &#39;name&#39;: &#39;Romance&#39;&#125;, &#123;&#39;id&#39;: 35, ...   \n3      [&#123;&#39;id&#39;: 35, &#39;name&#39;: &#39;Comedy&#39;&#125;, &#123;&#39;id&#39;: 18, &#39;nam...   \n4                         [&#123;&#39;id&#39;: 35, &#39;name&#39;: &#39;Comedy&#39;&#125;]   \n...                                                  ...   \n45461  [&#123;&#39;id&#39;: 18, &#39;name&#39;: &#39;Drama&#39;&#125;, &#123;&#39;id&#39;: 10751, &#39;n...   \n45462                      [&#123;&#39;id&#39;: 18, &#39;name&#39;: &#39;Drama&#39;&#125;]   \n45463  [&#123;&#39;id&#39;: 28, &#39;name&#39;: &#39;Action&#39;&#125;, &#123;&#39;id&#39;: 18, &#39;nam...   \n45464                                                 []   \n45465                                                 []   \n\n                                   homepage      id    imdb_id  \\\n0      http://toystory.disney.com/toy-story     862  tt0114709   \n1                                       NaN    8844  tt0113497   \n2                                       NaN   15602  tt0113228   \n3                                       NaN   31357  tt0114885   \n4                                       NaN   11862  tt0113041   \n...                                     ...     ...        ...   \n45461  http://www.imdb.com/title/tt6209470/  439050  tt6209470   \n45462                                   NaN  111109  tt2028550   \n45463                                   NaN   67758  tt0303758   \n45464                                   NaN  227506  tt0008536   \n45465                                   NaN  461257  tt6980792   \n\n      original_language               original_title  \\\n0                    en                    Toy Story   \n1                    en                      Jumanji   \n2                    en             Grumpier Old Men   \n3                    en            Waiting to Exhale   \n4                    en  Father of the Bride Part II   \n...                 ...                          ...   \n45461                fa                      رگ خواب   \n45462                tl          Siglo ng Pagluluwal   \n45463                en                     Betrayal   \n45464                en          Satana likuyushchiy   \n45465                en                     Queerama   \n\n                                                overview  ... release_date  \\\n0      Led by Woody, Andy&#39;s toys live happily in his ...  ...   1995-10-30   \n1      When siblings Judy and Peter discover an encha...  ...   1995-12-15   \n2      A family wedding reignites the ancient feud be...  ...   1995-12-22   \n3      Cheated on, mistreated and stepped on, the wom...  ...   1995-12-22   \n4      Just when George Banks has recovered from his ...  ...   1995-02-10   \n...                                                  ...  ...          ...   \n45461        Rising and falling between a man and woman.  ...          NaN   \n45462  An artist struggles to finish his work while a...  ...   2011-11-17   \n45463  When one of her hits goes wrong, a professiona...  ...   2003-08-01   \n45464  In a small town live two brothers, one a minis...  ...   1917-10-21   \n45465  50 years after decriminalisation of homosexual...  ...   2017-06-09   \n\n           revenue runtime                                   spoken_languages  \\\n0      373554033.0    81.0           [&#123;&#39;iso_639_1&#39;: &#39;en&#39;, &#39;name&#39;: &#39;English&#39;&#125;]   \n1      262797249.0   104.0  [&#123;&#39;iso_639_1&#39;: &#39;en&#39;, &#39;name&#39;: &#39;English&#39;&#125;, &#123;&#39;iso...   \n2              0.0   101.0           [&#123;&#39;iso_639_1&#39;: &#39;en&#39;, &#39;name&#39;: &#39;English&#39;&#125;]   \n3       81452156.0   127.0           [&#123;&#39;iso_639_1&#39;: &#39;en&#39;, &#39;name&#39;: &#39;English&#39;&#125;]   \n4       76578911.0   106.0           [&#123;&#39;iso_639_1&#39;: &#39;en&#39;, &#39;name&#39;: &#39;English&#39;&#125;]   \n...            ...     ...                                                ...   \n45461          0.0    90.0             [&#123;&#39;iso_639_1&#39;: &#39;fa&#39;, &#39;name&#39;: &#39;فارسی&#39;&#125;]   \n45462          0.0   360.0                  [&#123;&#39;iso_639_1&#39;: &#39;tl&#39;, &#39;name&#39;: &#39;&#39;&#125;]   \n45463          0.0    90.0           [&#123;&#39;iso_639_1&#39;: &#39;en&#39;, &#39;name&#39;: &#39;English&#39;&#125;]   \n45464          0.0    87.0                                                 []   \n45465          0.0    75.0           [&#123;&#39;iso_639_1&#39;: &#39;en&#39;, &#39;name&#39;: &#39;English&#39;&#125;]   \n\n         status                                            tagline  \\\n0      Released                                                NaN   \n1      Released          Roll the dice and unleash the excitement!   \n2      Released  Still Yelling. Still Fighting. Still Ready for...   \n3      Released  Friends are the people who let you be yourself...   \n4      Released  Just When His World Is Back To Normal... He&#39;s ...   \n...         ...                                                ...   \n45461  Released         Rising and falling between a man and woman   \n45462  Released                                                NaN   \n45463  Released                             A deadly game of wits.   \n45464  Released                                                NaN   \n45465  Released                                                NaN   \n\n                             title  video vote_average vote_count  \n0                        Toy Story  False          7.7     5415.0  \n1                          Jumanji  False          6.9     2413.0  \n2                 Grumpier Old Men  False          6.5       92.0  \n3                Waiting to Exhale  False          6.1       34.0  \n4      Father of the Bride Part II  False          5.7      173.0  \n...                            ...    ...          ...        ...  \n45461                       Subdue  False          4.0        1.0  \n45462          Century of Birthing  False          9.0        3.0  \n45463                     Betrayal  False          3.8        6.0  \n45464             Satan Triumphant  False          0.0        0.0  \n45465                     Queerama  False          0.0        0.0  \n\n[45466 rows x 24 columns]&gt;</code></pre>\n<div class=\"sourceCode\" id=\"cb9\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df.count()</span></code></pre></div>\n<pre><code>adult                    45466\nbelongs_to_collection     4494\nbudget                   45466\ngenres                   45466\nhomepage                  7782\nid                       45466\nimdb_id                  45449\noriginal_language        45455\noriginal_title           45466\noverview                 44512\npopularity               45461\nposter_path              45080\nproduction_companies     45463\nproduction_countries     45463\nrelease_date             45379\nrevenue                  45460\nruntime                  45203\nspoken_languages         45460\nstatus                   45379\ntagline                  20412\ntitle                    45460\nvideo                    45460\nvote_average             45460\nvote_count               45460\ndtype: int64</code></pre>\n<div class=\"sourceCode\" id=\"cb11\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df.columns</span></code></pre></div>\n<pre><code>Index([&#39;adult&#39;, &#39;belongs_to_collection&#39;, &#39;budget&#39;, &#39;genres&#39;, &#39;homepage&#39;, &#39;id&#39;,\n       &#39;imdb_id&#39;, &#39;original_language&#39;, &#39;original_title&#39;, &#39;overview&#39;,\n       &#39;popularity&#39;, &#39;poster_path&#39;, &#39;production_companies&#39;,\n       &#39;production_countries&#39;, &#39;release_date&#39;, &#39;revenue&#39;, &#39;runtime&#39;,\n       &#39;spoken_languages&#39;, &#39;status&#39;, &#39;tagline&#39;, &#39;title&#39;, &#39;video&#39;,\n       &#39;vote_average&#39;, &#39;vote_count&#39;],\n      dtype=&#39;object&#39;)</code></pre>\n<div class=\"sourceCode\" id=\"cb13\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb13-1\"><a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df.head(<span class=\"dv\">5</span>)</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntimestamp\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n31\n</td>\n<td>\n2.5\n</td>\n<td>\n1260759144\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n1\n</td>\n<td>\n1029\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759179\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n1\n</td>\n<td>\n1061\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759182\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n1\n</td>\n<td>\n1129\n</td>\n<td>\n2.0\n</td>\n<td>\n1260759185\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n1\n</td>\n<td>\n1172\n</td>\n<td>\n4.0\n</td>\n<td>\n1260759205\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb14\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df.columns</span></code></pre></div>\n<pre><code>Index([&#39;userId&#39;, &#39;movieId&#39;, &#39;rating&#39;, &#39;timestamp&#39;], dtype=&#39;object&#39;)</code></pre>\n<div class=\"sourceCode\" id=\"cb16\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df.count()</span></code></pre></div>\n<pre><code>userId       100004\nmovieId      100004\nrating       100004\ntimestamp    100004\ndtype: int64</code></pre>\n<div class=\"sourceCode\" id=\"cb18\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb18-1\"><a href=\"#cb18-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df.shape</span></code></pre></div>\n<pre><code>(100004, 4)</code></pre>\n<div class=\"sourceCode\" id=\"cb20\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb20-1\"><a href=\"#cb20-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df.shape</span></code></pre></div>\n<pre><code>(45466, 24)</code></pre>\n<h4 id=\"数据预处理\">数据预处理</h4>\n<ul>\n<li>缺失值处理</li>\n<li>数据去重</li>\n<li>电影源信息 merge 电影评分信息</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb22\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb22-1\"><a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t<span class=\"op\">=</span>movie_data_df[[<span class=\"st\">&#39;title&#39;</span>,<span class=\"st\">&#39;id&#39;</span>]]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb23\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb23-1\"><a href=\"#cb23-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.dtypes</span></code></pre></div>\n<pre><code>title    object\nid       object\ndtype: object</code></pre>\n<div class=\"sourceCode\" id=\"cb25\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb25-1\"><a href=\"#cb25-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s <span class=\"op\">=</span> ratings_df.drop([<span class=\"st\">&#39;timestamp&#39;</span>], axis<span class=\"op\">=</span><span class=\"dv\">1</span>)  <span class=\"co\">#axis=0 跨列删除行 ，axis=1 跨行删除列</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb26\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb26-1\"><a href=\"#cb26-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.dtypes</span></code></pre></div>\n<pre><code>userId       int64\nmovieId      int64\nrating     float64\ndtype: object</code></pre>\n<h5 id=\"缺失值处理\">缺失值处理</h5>\n<ul>\n<li>pandas中用NaN(Not a\nNumber)表示浮点数和非浮点数数组中的缺失值，同时python中None值也被当作缺失值。</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb28\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb28-1\"><a href=\"#cb28-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># pd.to_numeric 将id列 的数据 由字符串转为数值类型， 不能转换的数据设置为NaN</span></span>\n<span id=\"cb28-2\"><a href=\"#cb28-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>pd.to_numeric(movie_data_df_t[<span class=\"st\">&#39;id&#39;</span>],errors<span class=\"op\">=</span><span class=\"st\">&#39;coerce&#39;</span>)</span></code></pre></div>\n<pre><code>0           862.0\n1          8844.0\n2         15602.0\n3         31357.0\n4         11862.0\n           ...   \n45461    439050.0\n45462    111109.0\n45463     67758.0\n45464    227506.0\n45465    461257.0\nName: id, Length: 45466, dtype: float64</code></pre>\n<div class=\"sourceCode\" id=\"cb30\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb30-1\"><a href=\"#cb30-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#np.where返回满足（）内条件的数据所在的位置</span></span>\n<span id=\"cb30-2\"><a href=\"#cb30-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>np.where(pd.to_numeric(movie_data_df_t[<span class=\"st\">&#39;id&#39;</span>], errors<span class=\"op\">=</span><span class=\"st\">&#39;coerce&#39;</span>).isna()) <span class=\"co\">#返回缺失值的位置，其中isna() 对于NaN返回True，否则返回False</span></span></code></pre></div>\n<pre><code>(array([19730, 29503, 35587], dtype=int64),)</code></pre>\n<ul>\n<li><strong>loc works on labels in the index.</strong>\n<ul>\n<li>loc为Selection by\nLabel函数，即为按标签取数据，标签是什么，就是上面的’0’~‘4’,\n‘A’~‘B’。</li>\n<li>例如第一个参数选择index，第二个参数选择column</li>\n<li><figure>\n<img src=\"/.top//attachment:32ceb63e-c986-499e-93f8-638b54d1359c.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure></li>\n<li>建议写df.loc[0,\n:]，这样可以清楚的看出为第0行的所有记录，同样如果取第’A’列的所有记录，可以写df.loc[:,\n‘A’]，如下图：</li>\n<li><figure>\n<img src=\"/.top//attachment:6fdd7eed-bc5c-4fa4-8c63-9072c99b5340.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure></li>\n<li>:表示所有，[]里边为先行后列</li>\n</ul></li>\n<li><strong>iloc works on the positions in the index (so it only takes\nintegers).</strong>\n<ul>\n<li>iloc函数为Selection by\nPosition，即按位置选择数据，即第n行，第n列数据，只接受整型参数, 比如\n0:2为左闭右开区间，即取0，1</li>\n<li><figure>\n<img src=\"/.top//attachment:328215b9-7799-4763-b611-8b27a8340c20.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure></li>\n<li>若要取第一列的所有数据，则为df.iloc[:, 0]，不接受’A’作为参数</li>\n<li><figure>\n<img src=\"/.top//attachment:3881dff3-57bd-45dd-a549-56af16b42ec5.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure></li>\n</ul></li>\n</ul>\n<div class=\"sourceCode\" id=\"cb32\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb32-1\"><a href=\"#cb32-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.iloc[<span class=\"dv\">19730</span>]</span></code></pre></div>\n<pre><code>title           NaN\nid       1997-08-20\nName: 19730, dtype: object</code></pre>\n<div class=\"sourceCode\" id=\"cb34\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb34-1\"><a href=\"#cb34-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.iloc[[<span class=\"dv\">19730</span>,<span class=\"dv\">29503</span>,<span class=\"dv\">35587</span>]]</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\ntitle\n</th>\n<th>\nid\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n19730\n</th>\n<td>\nNaN\n</td>\n<td>\n1997-08-20\n</td>\n</tr>\n<tr>\n<th>\n29503\n</th>\n<td>\nNaN\n</td>\n<td>\n2012-09-29\n</td>\n</tr>\n<tr>\n<th>\n35587\n</th>\n<td>\nNaN\n</td>\n<td>\n2014-01-01\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb35\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb35-1\"><a href=\"#cb35-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 将格式转换后的数据 赋值给id列</span></span>\n<span id=\"cb35-2\"><a href=\"#cb35-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t[<span class=\"st\">&#39;id&#39;</span>] <span class=\"op\">=</span> pd.to_numeric(movie_data_df_t[<span class=\"st\">&#39;id&#39;</span>], errors<span class=\"op\">=</span><span class=\"st\">&#39;coerce&#39;</span>)</span></code></pre></div>\n<pre><code>c:\\users\\ysilhouette\\documents\\pyenv\\py3.6.5\\lib\\site-packages\\ipykernel_launcher.py:2: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy</code></pre>\n<p>​</p>\n<div class=\"sourceCode\" id=\"cb37\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb37-1\"><a href=\"#cb37-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.info()</span></code></pre></div>\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 45466 entries, 0 to 45465\nData columns (total 2 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   title   45460 non-null  object \n 1   id      45463 non-null  float64\ndtypes: float64(1), object(1)\nmemory usage: 710.5+ KB</code></pre>\n<div class=\"sourceCode\" id=\"cb39\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb39-1\"><a href=\"#cb39-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.iloc[[<span class=\"dv\">19730</span>,<span class=\"dv\">29503</span>,<span class=\"dv\">35587</span>]]</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\ntitle\n</th>\n<th>\nid\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n19730\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n29503\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n35587\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb40\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb40-1\"><a href=\"#cb40-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.shape</span></code></pre></div>\n<pre><code>(45466, 2)</code></pre>\n<div class=\"sourceCode\" id=\"cb42\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb42-1\"><a href=\"#cb42-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.drop(np.where(movie_data_df_t[<span class=\"st\">&#39;id&#39;</span>].isna())[<span class=\"dv\">0</span>], inplace<span class=\"op\">=</span><span class=\"va\">True</span>)</span></code></pre></div>\n<pre><code>c:\\users\\ysilhouette\\documents\\pyenv\\py3.6.5\\lib\\site-packages\\pandas\\core\\frame.py:4174: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  errors=errors,</code></pre>\n<div class=\"sourceCode\" id=\"cb44\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb44-1\"><a href=\"#cb44-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.shape</span></code></pre></div>\n<pre><code>(45463, 2)</code></pre>\n<h5 id=\"数据去重\">数据去重</h5>\n<div class=\"sourceCode\" id=\"cb46\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb46-1\"><a href=\"#cb46-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.duplicated([<span class=\"st\">&#39;id&#39;</span>,<span class=\"st\">&#39;title&#39;</span>]).<span class=\"bu\">sum</span>()</span></code></pre></div>\n<pre><code>30</code></pre>\n<div class=\"sourceCode\" id=\"cb48\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb48-1\"><a href=\"#cb48-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.drop_duplicates([<span class=\"st\">&#39;id&#39;</span>],inplace<span class=\"op\">=</span><span class=\"va\">True</span>)</span></code></pre></div>\n<pre><code>c:\\users\\ysilhouette\\documents\\pyenv\\py3.6.5\\lib\\site-packages\\ipykernel_launcher.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  &quot;&quot;&quot;Entry point for launching an IPython kernel.</code></pre>\n<div class=\"sourceCode\" id=\"cb50\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb50-1\"><a href=\"#cb50-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.shape</span></code></pre></div>\n<pre><code>(45433, 2)</code></pre>\n<div class=\"sourceCode\" id=\"cb52\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb52-1\"><a href=\"#cb52-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.duplicated([<span class=\"st\">&#39;userId&#39;</span>,<span class=\"st\">&#39;movieId&#39;</span>]).<span class=\"bu\">sum</span>()</span></code></pre></div>\n<pre><code>0</code></pre>\n<div class=\"sourceCode\" id=\"cb54\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb54-1\"><a href=\"#cb54-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t[<span class=\"st\">&#39;id&#39;</span>] <span class=\"op\">=</span> movie_data_df_t[<span class=\"st\">&#39;id&#39;</span>].astype(np.int64)</span></code></pre></div>\n<pre><code>c:\\users\\ysilhouette\\documents\\pyenv\\py3.6.5\\lib\\site-packages\\ipykernel_launcher.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  &quot;&quot;&quot;Entry point for launching an IPython kernel.</code></pre>\n<div class=\"sourceCode\" id=\"cb56\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb56-1\"><a href=\"#cb56-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.dtypes</span></code></pre></div>\n<pre><code>title    object\nid        int64\ndtype: object</code></pre>\n<div class=\"sourceCode\" id=\"cb58\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb58-1\"><a href=\"#cb58-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.dtypes</span></code></pre></div>\n<pre><code>userId       int64\nmovieId      int64\nrating     float64\ndtype: object</code></pre>\n<h3 id=\"数据合并\">数据合并</h3>\n<div class=\"sourceCode\" id=\"cb60\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb60-1\"><a href=\"#cb60-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 左dataframe 和 右dataframe 根据 movieId 和 id进行合并</span></span>\n<span id=\"cb60-2\"><a href=\"#cb60-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s <span class=\"op\">=</span> pd.merge(ratings_df_s,movie_data_df_t, left_on<span class=\"op\">=</span><span class=\"st\">&#39;movieId&#39;</span>,right_on<span class=\"op\">=</span><span class=\"st\">&#39;id&#39;</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb61\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb61-1\"><a href=\"#cb61-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.head()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntitle\n</th>\n<th>\nid\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n1371\n</td>\n<td>\n2.5\n</td>\n<td>\nRocky III\n</td>\n<td>\n1371\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n4\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n<td>\n1371\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n7\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n<td>\n1371\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n19\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n<td>\n1371\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n21\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n<td>\n1371\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb62\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb62-1\"><a href=\"#cb62-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.drop([<span class=\"st\">&#39;id&#39;</span>],axis<span class=\"op\">=</span><span class=\"dv\">1</span>,inplace<span class=\"op\">=</span><span class=\"va\">True</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb63\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb63-1\"><a href=\"#cb63-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntitle\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n1371\n</td>\n<td>\n2.5\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n4\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n7\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n19\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n21\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n44984\n</th>\n<td>\n652\n</td>\n<td>\n129009\n</td>\n<td>\n4.0\n</td>\n<td>\nLove Is a Ball\n</td>\n</tr>\n<tr>\n<th>\n44985\n</th>\n<td>\n653\n</td>\n<td>\n2103\n</td>\n<td>\n3.0\n</td>\n<td>\nSolaris\n</td>\n</tr>\n<tr>\n<th>\n44986\n</th>\n<td>\n659\n</td>\n<td>\n167\n</td>\n<td>\n4.0\n</td>\n<td>\nK-PAX\n</td>\n</tr>\n<tr>\n<th>\n44987\n</th>\n<td>\n659\n</td>\n<td>\n563\n</td>\n<td>\n3.0\n</td>\n<td>\nStarship Troopers\n</td>\n</tr>\n<tr>\n<th>\n44988\n</th>\n<td>\n665\n</td>\n<td>\n129\n</td>\n<td>\n3.0\n</td>\n<td>\nSpirited Away\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n44989 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb64\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb64-1\"><a href=\"#cb64-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.shape</span></code></pre></div>\n<pre><code>(44989, 4)</code></pre>\n<div class=\"sourceCode\" id=\"cb66\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb66-1\"><a href=\"#cb66-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 有评分记录的电影的个数</span></span>\n<span id=\"cb66-2\"><a href=\"#cb66-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">len</span>(ratings_df_s[<span class=\"st\">&#39;title&#39;</span>].unique())</span></code></pre></div>\n<pre><code>2794</code></pre>\n<div class=\"sourceCode\" id=\"cb68\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb68-1\"><a href=\"#cb68-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s[<span class=\"st\">&#39;title&#39;</span>].unique()</span></code></pre></div>\n<pre><code>array([&#39;Rocky III&#39;, &#39;Greed&#39;, &#39;American Pie&#39;, ..., &#39;K-PAX&#39;,\n       &#39;Starship Troopers&#39;, &#39;Spirited Away&#39;], dtype=object)</code></pre>\n<div class=\"sourceCode\" id=\"cb70\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb70-1\"><a href=\"#cb70-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.groupby([ratings_df_s[<span class=\"st\">&#39;title&#39;</span>],ratings_df_s[<span class=\"st\">&#39;rating&#39;</span>]]).count().reset_index()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\ntitle\n</th>\n<th>\nrating\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n!Women Art Revolution\n</td>\n<td>\n3.0\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n!Women Art Revolution\n</td>\n<td>\n3.5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n'Gator Bait\n</td>\n<td>\n0.5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n'Twas the Night Before Christmas\n</td>\n<td>\n3.5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n'Twas the Night Before Christmas\n</td>\n<td>\n4.5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n10263\n</th>\n<td>\nÀ nos amours\n</td>\n<td>\n4.0\n</td>\n<td>\n5\n</td>\n<td>\n5\n</td>\n</tr>\n<tr>\n<th>\n10264\n</th>\n<td>\nÀ nos amours\n</td>\n<td>\n4.5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n10265\n</th>\n<td>\nÀ nos amours\n</td>\n<td>\n5.0\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n10266\n</th>\n<td>\nÖdipussi\n</td>\n<td>\n4.5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n10267\n</th>\n<td>\nŞaban Oğlu Şaban\n</td>\n<td>\n4.5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n10268 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb71\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb71-1\"><a href=\"#cb71-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.groupby(ratings_df_s[<span class=\"st\">&#39;title&#39;</span>]).count().reset_index()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\ntitle\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n!Women Art Revolution\n</td>\n<td>\n2\n</td>\n<td>\n2\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n'Gator Bait\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n'Twas the Night Before Christmas\n</td>\n<td>\n2\n</td>\n<td>\n2\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n...And God Created Woman\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n00 Schneider - Jagd auf Nihil Baxter\n</td>\n<td>\n2\n</td>\n<td>\n2\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n2789\n</th>\n<td>\nxXx\n</td>\n<td>\n28\n</td>\n<td>\n28\n</td>\n<td>\n28\n</td>\n</tr>\n<tr>\n<th>\n2790\n</th>\n<td>\n¡Three Amigos!\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2791\n</th>\n<td>\nÀ nos amours\n</td>\n<td>\n14\n</td>\n<td>\n14\n</td>\n<td>\n14\n</td>\n</tr>\n<tr>\n<th>\n2792\n</th>\n<td>\nÖdipussi\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2793\n</th>\n<td>\nŞaban Oğlu Şaban\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n2794 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb72\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb72-1\"><a href=\"#cb72-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_allcounts <span class=\"op\">=</span> ratings_df_s.groupby(ratings_df_s[<span class=\"st\">&#39;title&#39;</span>])[<span class=\"st\">&#39;userId&#39;</span>].count().reset_index()</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb73\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb73-1\"><a href=\"#cb73-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_allcounts <span class=\"op\">=</span> ratings_df_s_allcounts.rename(columns <span class=\"op\">=</span> &#123;<span class=\"st\">&#39;userId&#39;</span>:<span class=\"st\">&#39;totalRatings&#39;</span>&#125;)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb74\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb74-1\"><a href=\"#cb74-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_allcounts</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\ntitle\n</th>\n<th>\ntotalRatings\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n!Women Art Revolution\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n'Gator Bait\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n'Twas the Night Before Christmas\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n...And God Created Woman\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n00 Schneider - Jagd auf Nihil Baxter\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n2789\n</th>\n<td>\nxXx\n</td>\n<td>\n28\n</td>\n</tr>\n<tr>\n<th>\n2790\n</th>\n<td>\n¡Three Amigos!\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2791\n</th>\n<td>\nÀ nos amours\n</td>\n<td>\n14\n</td>\n</tr>\n<tr>\n<th>\n2792\n</th>\n<td>\nÖdipussi\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2793\n</th>\n<td>\nŞaban Oğlu Şaban\n</td>\n<td>\n1\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n2794 rows × 2 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb75\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb75-1\"><a href=\"#cb75-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_allcounts.shape</span></code></pre></div>\n<pre><code>(2794, 2)</code></pre>\n<div class=\"sourceCode\" id=\"cb77\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb77-1\"><a href=\"#cb77-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_allcounts[<span class=\"st\">&#39;totalRatings&#39;</span>].describe()</span></code></pre></div>\n<pre><code>count    2794.000000\nmean       16.102004\nstd        31.481795\nmin         1.000000\n25%         1.000000\n50%         4.000000\n75%        15.750000\nmax       324.000000\nName: totalRatings, dtype: float64</code></pre>\n<div class=\"sourceCode\" id=\"cb79\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb79-1\"><a href=\"#cb79-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_allcounts.hist()</span></code></pre></div>\n<pre><code>array([[&lt;AxesSubplot:title=&#123;&#39;center&#39;:&#39;totalRatings&#39;&#125;&gt;]], dtype=object)</code></pre>\n<figure>\n<img src=\"/.top//output_56_1.png\" alt=\"png\">\n<figcaption aria-hidden=\"true\">png</figcaption>\n</figure>\n<div class=\"sourceCode\" id=\"cb81\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb81-1\"><a href=\"#cb81-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_allcounts[<span class=\"st\">&#39;totalRatings&#39;</span>].quantile(np.arange(<span class=\"fl\">0.6</span>,<span class=\"dv\">1</span>, <span class=\"fl\">0.01</span>)) <span class=\"co\">#分位点</span></span></code></pre></div>\n<pre><code>0.60      7.00\n0.61      7.00\n0.62      7.00\n0.63      8.00\n0.64      8.00\n0.65      9.00\n0.66      9.00\n0.67     10.00\n0.68     10.00\n0.69     11.00\n0.70     12.00\n0.71     12.00\n0.72     13.00\n0.73     14.00\n0.74     14.00\n0.75     15.75\n0.76     17.00\n0.77     18.00\n0.78     19.00\n0.79     20.00\n0.80     21.00\n0.81     22.33\n0.82     24.00\n0.83     26.00\n0.84     27.00\n0.85     29.00\n0.86     31.00\n0.87     34.00\n0.88     37.00\n0.89     41.77\n0.90     45.00\n0.91     49.00\n0.92     52.56\n0.93     59.00\n0.94     64.42\n0.95     71.00\n0.96     83.28\n0.97     98.21\n0.98    119.14\n0.99    168.49\nName: totalRatings, dtype: float64</code></pre>\n<ul>\n<li><strong>从分位点数据分析可以看出，21%的电影\n评分记录数超过20个</strong></li>\n</ul>\n<div class=\"sourceCode\" id=\"cb83\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb83-1\"><a href=\"#cb83-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>votes_count_threshold <span class=\"op\">=</span> <span class=\"dv\">20</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb84\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb84-1\"><a href=\"#cb84-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_top<span class=\"op\">=</span>ratings_df_s_allcounts.query(<span class=\"st\">&#39;totalRatings &gt; @votes_count_threshold&#39;</span>).reset_index()</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb85\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb85-1\"><a href=\"#cb85-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_top</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nindex\n</th>\n<th>\ntitle\n</th>\n<th>\ntotalRatings\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n18\n</td>\n<td>\n20,000 Leagues Under the Sea\n</td>\n<td>\n89\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n19\n</td>\n<td>\n2001: A Space Odyssey\n</td>\n<td>\n87\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n24\n</td>\n<td>\n24 Hour Party People\n</td>\n<td>\n22\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n26\n</td>\n<td>\n28 Days Later\n</td>\n<td>\n26\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n27\n</td>\n<td>\n28 Weeks Later\n</td>\n<td>\n47\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n575\n</th>\n<td>\n2770\n</td>\n<td>\nYoung Adam\n</td>\n<td>\n34\n</td>\n</tr>\n<tr>\n<th>\n576\n</th>\n<td>\n2772\n</td>\n<td>\nYoung Frankenstein\n</td>\n<td>\n29\n</td>\n</tr>\n<tr>\n<th>\n577\n</th>\n<td>\n2774\n</td>\n<td>\nYoung and Innocent\n</td>\n<td>\n193\n</td>\n</tr>\n<tr>\n<th>\n578\n</th>\n<td>\n2781\n</td>\n<td>\nZatoichi\n</td>\n<td>\n61\n</td>\n</tr>\n<tr>\n<th>\n579\n</th>\n<td>\n2789\n</td>\n<td>\nxXx\n</td>\n<td>\n28\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n580 rows × 3 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb86\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb86-1\"><a href=\"#cb86-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_top.drop([<span class=\"st\">&#39;index&#39;</span>],axis<span class=\"op\">=</span><span class=\"dv\">1</span>,inplace<span class=\"op\">=</span><span class=\"va\">True</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb87\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb87-1\"><a href=\"#cb87-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_top.head()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\ntitle\n</th>\n<th>\ntotalRatings\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n20,000 Leagues Under the Sea\n</td>\n<td>\n89\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n2001: A Space Odyssey\n</td>\n<td>\n87\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n24 Hour Party People\n</td>\n<td>\n22\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n28 Days Later\n</td>\n<td>\n26\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n28 Weeks Later\n</td>\n<td>\n47\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb88\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb88-1\"><a href=\"#cb88-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s[<span class=\"st\">&#39;title&#39;</span>]</span></code></pre></div>\n<pre><code>0                Rocky III\n1                Rocky III\n2                Rocky III\n3                Rocky III\n4                Rocky III\n               ...        \n44984       Love Is a Ball\n44985              Solaris\n44986                K-PAX\n44987    Starship Troopers\n44988        Spirited Away\nName: title, Length: 44989, dtype: object</code></pre>\n<div class=\"sourceCode\" id=\"cb90\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb90-1\"><a href=\"#cb90-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_top[<span class=\"st\">&#39;title&#39;</span>]</span></code></pre></div>\n<pre><code>0      20,000 Leagues Under the Sea\n1             2001: A Space Odyssey\n2              24 Hour Party People\n3                     28 Days Later\n4                    28 Weeks Later\n                   ...             \n575                      Young Adam\n576              Young Frankenstein\n577              Young and Innocent\n578                        Zatoichi\n579                             xXx\nName: title, Length: 580, dtype: object</code></pre>\n<div class=\"sourceCode\" id=\"cb92\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb92-1\"><a href=\"#cb92-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s[ratings_df_s[<span class=\"st\">&#39;title&#39;</span>].isin(ratings_df_s_top[<span class=\"st\">&#39;title&#39;</span>])]</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntitle\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n1371\n</td>\n<td>\n2.5\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n4\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n7\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n19\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n21\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n44507\n</th>\n<td>\n624\n</td>\n<td>\n3057\n</td>\n<td>\n4.0\n</td>\n<td>\nFrankenstein\n</td>\n</tr>\n<tr>\n<th>\n44781\n</th>\n<td>\n547\n</td>\n<td>\n97936\n</td>\n<td>\n3.0\n</td>\n<td>\nSweet November\n</td>\n</tr>\n<tr>\n<th>\n44782\n</th>\n<td>\n624\n</td>\n<td>\n97936\n</td>\n<td>\n3.0\n</td>\n<td>\nSweet November\n</td>\n</tr>\n<tr>\n<th>\n44909\n</th>\n<td>\n609\n</td>\n<td>\n1450\n</td>\n<td>\n5.0\n</td>\n<td>\nBlood: The Last Vampire\n</td>\n</tr>\n<tr>\n<th>\n44985\n</th>\n<td>\n653\n</td>\n<td>\n2103\n</td>\n<td>\n3.0\n</td>\n<td>\nSolaris\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n34552 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb93\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb93-1\"><a href=\"#cb93-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s[ratings_df_s[<span class=\"st\">&#39;title&#39;</span>].isin(ratings_df_s_top[<span class=\"st\">&#39;title&#39;</span>])]  <span class=\"co\">#得到评分数量大于20的</span></span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntitle\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n1371\n</td>\n<td>\n2.5\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n4\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n7\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n19\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n21\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n44507\n</th>\n<td>\n624\n</td>\n<td>\n3057\n</td>\n<td>\n4.0\n</td>\n<td>\nFrankenstein\n</td>\n</tr>\n<tr>\n<th>\n44781\n</th>\n<td>\n547\n</td>\n<td>\n97936\n</td>\n<td>\n3.0\n</td>\n<td>\nSweet November\n</td>\n</tr>\n<tr>\n<th>\n44782\n</th>\n<td>\n624\n</td>\n<td>\n97936\n</td>\n<td>\n3.0\n</td>\n<td>\nSweet November\n</td>\n</tr>\n<tr>\n<th>\n44909\n</th>\n<td>\n609\n</td>\n<td>\n1450\n</td>\n<td>\n5.0\n</td>\n<td>\nBlood: The Last Vampire\n</td>\n</tr>\n<tr>\n<th>\n44985\n</th>\n<td>\n653\n</td>\n<td>\n2103\n</td>\n<td>\n3.0\n</td>\n<td>\nSolaris\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n34552 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb94\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb94-1\"><a href=\"#cb94-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s[<span class=\"op\">~</span>ratings_df_s[<span class=\"st\">&#39;title&#39;</span>].isin(ratings_df_s_top[<span class=\"st\">&#39;title&#39;</span>])] <span class=\"co\"># 得到评分数量小于20的</span></span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntitle\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n1714\n</th>\n<td>\n2\n</td>\n<td>\n248\n</td>\n<td>\n3.0\n</td>\n<td>\nPocketful of Miracles\n</td>\n</tr>\n<tr>\n<th>\n1715\n</th>\n<td>\n36\n</td>\n<td>\n248\n</td>\n<td>\n2.0\n</td>\n<td>\nPocketful of Miracles\n</td>\n</tr>\n<tr>\n<th>\n1716\n</th>\n<td>\n110\n</td>\n<td>\n248\n</td>\n<td>\n4.0\n</td>\n<td>\nPocketful of Miracles\n</td>\n</tr>\n<tr>\n<th>\n1717\n</th>\n<td>\n239\n</td>\n<td>\n248\n</td>\n<td>\n4.0\n</td>\n<td>\nPocketful of Miracles\n</td>\n</tr>\n<tr>\n<th>\n1718\n</th>\n<td>\n242\n</td>\n<td>\n248\n</td>\n<td>\n3.0\n</td>\n<td>\nPocketful of Miracles\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n44983\n</th>\n<td>\n652\n</td>\n<td>\n127728\n</td>\n<td>\n5.0\n</td>\n<td>\n8:46\n</td>\n</tr>\n<tr>\n<th>\n44984\n</th>\n<td>\n652\n</td>\n<td>\n129009\n</td>\n<td>\n4.0\n</td>\n<td>\nLove Is a Ball\n</td>\n</tr>\n<tr>\n<th>\n44986\n</th>\n<td>\n659\n</td>\n<td>\n167\n</td>\n<td>\n4.0\n</td>\n<td>\nK-PAX\n</td>\n</tr>\n<tr>\n<th>\n44987\n</th>\n<td>\n659\n</td>\n<td>\n563\n</td>\n<td>\n3.0\n</td>\n<td>\nStarship Troopers\n</td>\n</tr>\n<tr>\n<th>\n44988\n</th>\n<td>\n665\n</td>\n<td>\n129\n</td>\n<td>\n3.0\n</td>\n<td>\nSpirited Away\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n10437 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb95\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb95-1\"><a href=\"#cb95-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20 <span class=\"op\">=</span> ratings_df_s[ratings_df_s[<span class=\"st\">&#39;title&#39;</span>].isin(ratings_df_s_top[<span class=\"st\">&#39;title&#39;</span>])]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb96\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb96-1\"><a href=\"#cb96-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntX20 <span class=\"op\">=</span> ratings_df_s[<span class=\"op\">~</span>ratings_df_s[<span class=\"st\">&#39;title&#39;</span>].isin(ratings_df_s_top[<span class=\"st\">&#39;title&#39;</span>])]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb97\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb97-1\"><a href=\"#cb97-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20.shape</span></code></pre></div>\n<pre><code>(34552, 4)</code></pre>\n<div class=\"sourceCode\" id=\"cb99\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb99-1\"><a href=\"#cb99-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntX20.shape</span></code></pre></div>\n<pre><code>(10437, 4)</code></pre>\n<div class=\"sourceCode\" id=\"cb101\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb101-1\"><a href=\"#cb101-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20.isna().<span class=\"bu\">sum</span>() <span class=\"co\">#检查有无缺失值</span></span></code></pre></div>\n<pre><code>userId     0\nmovieId    0\nrating     0\ntitle      0\ndtype: int64</code></pre>\n<div class=\"sourceCode\" id=\"cb103\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb103-1\"><a href=\"#cb103-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20.duplicated([<span class=\"st\">&#39;userId&#39;</span>,<span class=\"st\">&#39;title&#39;</span>]).<span class=\"bu\">sum</span>()</span></code></pre></div>\n<pre><code>140</code></pre>\n<div class=\"sourceCode\" id=\"cb105\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb105-1\"><a href=\"#cb105-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20<span class=\"op\">=</span>ratings_df_s_cntD20.drop_duplicates([<span class=\"st\">&#39;userId&#39;</span>,<span class=\"st\">&#39;title&#39;</span>]) <span class=\"co\"># 只保留每个用户对每个电影的一条评论记录</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb106\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb106-1\"><a href=\"#cb106-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntitle\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n1371\n</td>\n<td>\n2.5\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n4\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n7\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n19\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n21\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n44506\n</th>\n<td>\n472\n</td>\n<td>\n3057\n</td>\n<td>\n3.0\n</td>\n<td>\nFrankenstein\n</td>\n</tr>\n<tr>\n<th>\n44507\n</th>\n<td>\n624\n</td>\n<td>\n3057\n</td>\n<td>\n4.0\n</td>\n<td>\nFrankenstein\n</td>\n</tr>\n<tr>\n<th>\n44782\n</th>\n<td>\n624\n</td>\n<td>\n97936\n</td>\n<td>\n3.0\n</td>\n<td>\nSweet November\n</td>\n</tr>\n<tr>\n<th>\n44909\n</th>\n<td>\n609\n</td>\n<td>\n1450\n</td>\n<td>\n5.0\n</td>\n<td>\nBlood: The Last Vampire\n</td>\n</tr>\n<tr>\n<th>\n44985\n</th>\n<td>\n653\n</td>\n<td>\n2103\n</td>\n<td>\n3.0\n</td>\n<td>\nSolaris\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n34412 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb107\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb107-1\"><a href=\"#cb107-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20.duplicated([<span class=\"st\">&#39;userId&#39;</span>,<span class=\"st\">&#39;title&#39;</span>]).<span class=\"bu\">sum</span>()</span></code></pre></div>\n<pre><code>0</code></pre>\n<div class=\"sourceCode\" id=\"cb109\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb109-1\"><a href=\"#cb109-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 将一个dataframe的记录数据整合成表格，而且是按照pivot(‘index=xx’,’columns=xx’,’values=xx’)来整合的。还有另外一种写法，就是pivot(‘索引列’，‘列名’，‘值’)。</span></span>\n<span id=\"cb109-2\"><a href=\"#cb109-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20_for_apriori <span class=\"op\">=</span> ratings_df_s_cntD20.pivot(index<span class=\"op\">=</span><span class=\"st\">&#39;userId&#39;</span>,columns<span class=\"op\">=</span><span class=\"st\">&#39;title&#39;</span>,values<span class=\"op\">=</span><span class=\"st\">&#39;rating&#39;</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb110\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb110-1\"><a href=\"#cb110-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20_for_apriori</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\ntitle\n</th>\n<th>\n20,000 Leagues Under the Sea\n</th>\n<th>\n2001: A Space Odyssey\n</th>\n<th>\n24 Hour Party People\n</th>\n<th>\n28 Days Later\n</th>\n<th>\n28 Weeks Later\n</th>\n<th>\n300\n</th>\n<th>\n48 Hrs.\n</th>\n<th>\n5 Card Stud\n</th>\n<th>\n7 Virgins\n</th>\n<th>\n8 Women\n</th>\n<th>\n...\n</th>\n<th>\nWithin the Woods\n</th>\n<th>\nX-Men Origins: Wolverine\n</th>\n<th>\nY Tu Mamá También\n</th>\n<th>\nYankee Doodle Dandy\n</th>\n<th>\nYesterday\n</th>\n<th>\nYoung Adam\n</th>\n<th>\nYoung Frankenstein\n</th>\n<th>\nYoung and Innocent\n</th>\n<th>\nZatoichi\n</th>\n<th>\nxXx\n</th>\n</tr>\n<tr>\n<th>\nuserId\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n1\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\nNaN\n</td>\n<td>\n3.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n5.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n3.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n3.5\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n3.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\n5.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n5.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n5\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n4.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n3.5\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n667\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n4.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n668\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n669\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n670\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n3.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n671\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n5.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n4.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n671 rows × 580 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb111\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb111-1\"><a href=\"#cb111-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20_for_apriori<span class=\"op\">=</span> ratings_df_s_cntD20_for_apriori.fillna(<span class=\"dv\">0</span>) <span class=\"co\">#缺失值 填充0</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb112\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb112-1\"><a href=\"#cb112-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> encode_units(x): <span class=\"co\"># 有效评分规则， 1表示有效，0 表示无效</span></span>\n<span id=\"cb112-2\"><a href=\"#cb112-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> x <span class=\"op\">&lt;=</span> <span class=\"dv\">0</span>:</span>\n<span id=\"cb112-3\"><a href=\"#cb112-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"dv\">0</span></span>\n<span id=\"cb112-4\"><a href=\"#cb112-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> x<span class=\"op\">&gt;</span><span class=\"dv\">0</span>:</span>\n<span id=\"cb112-5\"><a href=\"#cb112-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"dv\">1</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb113\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb113-1\"><a href=\"#cb113-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20_for_apriori <span class=\"op\">=</span> ratings_df_s_cntD20_for_apriori.applymap(encode_units)</span></code></pre></div>\n<h3 id=\"计算频繁项集-和关联规则\">计算频繁项集 和关联规则</h3>\n<div class=\"sourceCode\" id=\"cb114\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb114-1\"><a href=\"#cb114-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> mlxtend.frequent_patterns <span class=\"im\">import</span> apriori</span>\n<span id=\"cb114-2\"><a href=\"#cb114-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> mlxtend.frequent_patterns <span class=\"im\">import</span> association_rules</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb115\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb115-1\"><a href=\"#cb115-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20_for_apriori.head()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\ntitle\n</th>\n<th>\n20,000 Leagues Under the Sea\n</th>\n<th>\n2001: A Space Odyssey\n</th>\n<th>\n24 Hour Party People\n</th>\n<th>\n28 Days Later\n</th>\n<th>\n28 Weeks Later\n</th>\n<th>\n300\n</th>\n<th>\n48 Hrs.\n</th>\n<th>\n5 Card Stud\n</th>\n<th>\n7 Virgins\n</th>\n<th>\n8 Women\n</th>\n<th>\n...\n</th>\n<th>\nWithin the Woods\n</th>\n<th>\nX-Men Origins: Wolverine\n</th>\n<th>\nY Tu Mamá También\n</th>\n<th>\nYankee Doodle Dandy\n</th>\n<th>\nYesterday\n</th>\n<th>\nYoung Adam\n</th>\n<th>\nYoung Frankenstein\n</th>\n<th>\nYoung and Innocent\n</th>\n<th>\nZatoichi\n</th>\n<th>\nxXx\n</th>\n</tr>\n<tr>\n<th>\nuserId\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n1\n</th>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n...\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n...\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n...\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n...\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n</tr>\n<tr>\n<th>\n5\n</th>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n...\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n5 rows × 580 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb116\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb116-1\"><a href=\"#cb116-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20_for_apriori.isna().<span class=\"bu\">sum</span>() <span class=\"co\">#检查是否有nan值</span></span></code></pre></div>\n<pre><code>title\n20,000 Leagues Under the Sea    0\n2001: A Space Odyssey           0\n24 Hour Party People            0\n28 Days Later                   0\n28 Weeks Later                  0\n                               ..\nYoung Adam                      0\nYoung Frankenstein              0\nYoung and Innocent              0\nZatoichi                        0\nxXx                             0\nLength: 580, dtype: int64</code></pre>\n<div class=\"sourceCode\" id=\"cb118\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb118-1\"><a href=\"#cb118-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>frequent_itemsets <span class=\"op\">=</span> apriori(ratings_df_s_cntD20_for_apriori, min_support<span class=\"op\">=</span><span class=\"fl\">0.10</span>, use_colnames<span class=\"op\">=</span><span class=\"va\">True</span>)  <span class=\"co\">#生成符合条件的频繁项集</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb119\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb119-1\"><a href=\"#cb119-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>frequent_itemsets.sort_values(<span class=\"st\">&#39;support&#39;</span>,ascending<span class=\"op\">=</span><span class=\"va\">False</span>)  <span class=\"co\">#support降序排列的频繁项集</span></span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nsupport\n</th>\n<th>\nitemsets\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n111\n</th>\n<td>\n0.482861\n</td>\n<td>\n(Terminator 3: Rise of the Machines)\n</td>\n</tr>\n<tr>\n<th>\n130\n</th>\n<td>\n0.463487\n</td>\n<td>\n(The Million Dollar Hotel)\n</td>\n</tr>\n<tr>\n<th>\n105\n</th>\n<td>\n0.454545\n</td>\n<td>\n(Solaris)\n</td>\n</tr>\n<tr>\n<th>\n113\n</th>\n<td>\n0.433681\n</td>\n<td>\n(The 39 Steps)\n</td>\n</tr>\n<tr>\n<th>\n69\n</th>\n<td>\n0.408346\n</td>\n<td>\n(Monsoon Wedding)\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n1613\n</th>\n<td>\n0.101341\n</td>\n<td>\n(Sleepless in Seattle, 5 Card Stud, The Tunnel)\n</td>\n</tr>\n<tr>\n<th>\n5455\n</th>\n<td>\n0.101341\n</td>\n<td>\n(Beauty and the Beast, Rain Man, Terminator 3:...\n</td>\n</tr>\n<tr>\n<th>\n5454\n</th>\n<td>\n0.101341\n</td>\n<td>\n(The Passion of Joan of Arc, Beauty and the Be...\n</td>\n</tr>\n<tr>\n<th>\n6769\n</th>\n<td>\n0.101341\n</td>\n<td>\n(The Million Dollar Hotel, The Hours, Three Co...\n</td>\n</tr>\n<tr>\n<th>\n3108\n</th>\n<td>\n0.101341\n</td>\n<td>\n(The Conversation, Men in Black II, The Millio...\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n7327 rows × 2 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb120\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb120-1\"><a href=\"#cb120-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>rules<span class=\"op\">=</span> association_rules(frequent_itemsets, metric<span class=\"op\">=</span><span class=\"st\">&quot;lift&quot;</span>, min_threshold<span class=\"op\">=</span><span class=\"dv\">1</span>)  <span class=\"co\">#生成关联规则，只保留lift&gt;1的部分</span></span>\n<span id=\"cb120-2\"><a href=\"#cb120-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>rules</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nantecedents\n</th>\n<th>\nconsequents\n</th>\n<th>\nantecedent support\n</th>\n<th>\nconsequent support\n</th>\n<th>\nsupport\n</th>\n<th>\nconfidence\n</th>\n<th>\nlift\n</th>\n<th>\nleverage\n</th>\n<th>\nconviction\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n(5 Card Stud)\n</td>\n<td>\n(48 Hrs.)\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.108793\n</td>\n<td>\n0.365000\n</td>\n<td>\n1.224575\n</td>\n<td>\n0.019952\n</td>\n<td>\n1.105413\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n(48 Hrs.)\n</td>\n<td>\n(5 Card Stud)\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.108793\n</td>\n<td>\n0.365000\n</td>\n<td>\n1.224575\n</td>\n<td>\n0.019952\n</td>\n<td>\n1.105413\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n(A Clockwork Orange)\n</td>\n<td>\n(48 Hrs.)\n</td>\n<td>\n0.152012\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.102832\n</td>\n<td>\n0.676471\n</td>\n<td>\n2.269559\n</td>\n<td>\n0.057523\n</td>\n<td>\n2.169625\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n(48 Hrs.)\n</td>\n<td>\n(A Clockwork Orange)\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.152012\n</td>\n<td>\n0.102832\n</td>\n<td>\n0.345000\n</td>\n<td>\n2.269559\n</td>\n<td>\n0.057523\n</td>\n<td>\n1.294638\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n(48 Hrs.)\n</td>\n<td>\n(A Nightmare on Elm Street)\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.268256\n</td>\n<td>\n0.156483\n</td>\n<td>\n0.525000\n</td>\n<td>\n1.957083\n</td>\n<td>\n0.076526\n</td>\n<td>\n1.540513\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n75531\n</th>\n<td>\n(The Hours)\n</td>\n<td>\n(The Million Dollar Hotel, Terminator 3: Rise ...\n</td>\n<td>\n0.301043\n</td>\n<td>\n0.126677\n</td>\n<td>\n0.104322\n</td>\n<td>\n0.346535\n</td>\n<td>\n2.735585\n</td>\n<td>\n0.066187\n</td>\n<td>\n1.336449\n</td>\n</tr>\n<tr>\n<th>\n75532\n</th>\n<td>\n(Terminator 3: Rise of the Machines)\n</td>\n<td>\n(The Million Dollar Hotel, The Hours, Rain Man...\n</td>\n<td>\n0.482861\n</td>\n<td>\n0.114754\n</td>\n<td>\n0.104322\n</td>\n<td>\n0.216049\n</td>\n<td>\n1.882716\n</td>\n<td>\n0.048912\n</td>\n<td>\n1.129211\n</td>\n</tr>\n<tr>\n<th>\n75533\n</th>\n<td>\n(Rain Man)\n</td>\n<td>\n(The Million Dollar Hotel, The Hours, Terminat...\n</td>\n<td>\n0.295082\n</td>\n<td>\n0.120715\n</td>\n<td>\n0.104322\n</td>\n<td>\n0.353535\n</td>\n<td>\n2.928669\n</td>\n<td>\n0.068701\n</td>\n<td>\n1.360143\n</td>\n</tr>\n<tr>\n<th>\n75534\n</th>\n<td>\n(Sissi)\n</td>\n<td>\n(The Million Dollar Hotel, The Hours, Terminat...\n</td>\n<td>\n0.317437\n</td>\n<td>\n0.117735\n</td>\n<td>\n0.104322\n</td>\n<td>\n0.328638\n</td>\n<td>\n2.791347\n</td>\n<td>\n0.066949\n</td>\n<td>\n1.314143\n</td>\n</tr>\n<tr>\n<th>\n75535\n</th>\n<td>\n(Solaris)\n</td>\n<td>\n(The Million Dollar Hotel, The Hours, Terminat...\n</td>\n<td>\n0.454545\n</td>\n<td>\n0.113264\n</td>\n<td>\n0.104322\n</td>\n<td>\n0.229508\n</td>\n<td>\n2.026316\n</td>\n<td>\n0.052838\n</td>\n<td>\n1.150870\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n75536 rows × 9 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb121\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb121-1\"><a href=\"#cb121-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>rules.sort_values(<span class=\"st\">&#39;lift&#39;</span>,ascending<span class=\"op\">=</span><span class=\"va\">False</span>)</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nantecedents\n</th>\n<th>\nconsequents\n</th>\n<th>\nantecedent support\n</th>\n<th>\nconsequent support\n</th>\n<th>\nsupport\n</th>\n<th>\nconfidence\n</th>\n<th>\nlift\n</th>\n<th>\nleverage\n</th>\n<th>\nconviction\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n1473\n</th>\n<td>\n(Muxmäuschenstill)\n</td>\n<td>\n(Waiter)\n</td>\n<td>\n0.156483\n</td>\n<td>\n0.120715\n</td>\n<td>\n0.105812\n</td>\n<td>\n0.676190\n</td>\n<td>\n5.601529\n</td>\n<td>\n0.086922\n</td>\n<td>\n2.715438\n</td>\n</tr>\n<tr>\n<th>\n1472\n</th>\n<td>\n(Waiter)\n</td>\n<td>\n(Muxmäuschenstill)\n</td>\n<td>\n0.120715\n</td>\n<td>\n0.156483\n</td>\n<td>\n0.105812\n</td>\n<td>\n0.876543\n</td>\n<td>\n5.601529\n</td>\n<td>\n0.086922\n</td>\n<td>\n6.832489\n</td>\n</tr>\n<tr>\n<th>\n38208\n</th>\n<td>\n(Titanic, Big Fish)\n</td>\n<td>\n(Psycho, Rain Man)\n</td>\n<td>\n0.150522\n</td>\n<td>\n0.131148\n</td>\n<td>\n0.101341\n</td>\n<td>\n0.673267\n</td>\n<td>\n5.133663\n</td>\n<td>\n0.081601\n</td>\n<td>\n2.659215\n</td>\n</tr>\n<tr>\n<th>\n38209\n</th>\n<td>\n(Psycho, Rain Man)\n</td>\n<td>\n(Titanic, Big Fish)\n</td>\n<td>\n0.131148\n</td>\n<td>\n0.150522\n</td>\n<td>\n0.101341\n</td>\n<td>\n0.772727\n</td>\n<td>\n5.133663\n</td>\n<td>\n0.081601\n</td>\n<td>\n3.737705\n</td>\n</tr>\n<tr>\n<th>\n38238\n</th>\n<td>\n(Titanic, Big Fish)\n</td>\n<td>\n(Psycho, Solaris)\n</td>\n<td>\n0.150522\n</td>\n<td>\n0.134128\n</td>\n<td>\n0.102832\n</td>\n<td>\n0.683168\n</td>\n<td>\n5.093399\n</td>\n<td>\n0.082642\n</td>\n<td>\n2.732908\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n108\n</th>\n<td>\n(5 Card Stud)\n</td>\n<td>\n(Men in Black II)\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.333830\n</td>\n<td>\n0.110283\n</td>\n<td>\n0.370000\n</td>\n<td>\n1.108348\n</td>\n<td>\n0.010781\n</td>\n<td>\n1.057413\n</td>\n</tr>\n<tr>\n<th>\n571\n</th>\n<td>\n(Bang, Boom, Bang)\n</td>\n<td>\n(The 39 Steps)\n</td>\n<td>\n0.260805\n</td>\n<td>\n0.433681\n</td>\n<td>\n0.125186\n</td>\n<td>\n0.480000\n</td>\n<td>\n1.106804\n</td>\n<td>\n0.012080\n</td>\n<td>\n1.089075\n</td>\n</tr>\n<tr>\n<th>\n570\n</th>\n<td>\n(The 39 Steps)\n</td>\n<td>\n(Bang, Boom, Bang)\n</td>\n<td>\n0.433681\n</td>\n<td>\n0.260805\n</td>\n<td>\n0.125186\n</td>\n<td>\n0.288660\n</td>\n<td>\n1.106804\n</td>\n<td>\n0.012080\n</td>\n<td>\n1.039159\n</td>\n</tr>\n<tr>\n<th>\n1137\n</th>\n<td>\n(Sissi)\n</td>\n<td>\n(License to Wed)\n</td>\n<td>\n0.317437\n</td>\n<td>\n0.301043\n</td>\n<td>\n0.102832\n</td>\n<td>\n0.323944\n</td>\n<td>\n1.076070\n</td>\n<td>\n0.007269\n</td>\n<td>\n1.033874\n</td>\n</tr>\n<tr>\n<th>\n1136\n</th>\n<td>\n(License to Wed)\n</td>\n<td>\n(Sissi)\n</td>\n<td>\n0.301043\n</td>\n<td>\n0.317437\n</td>\n<td>\n0.102832\n</td>\n<td>\n0.341584\n</td>\n<td>\n1.076070\n</td>\n<td>\n0.007269\n</td>\n<td>\n1.036675\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n75536 rows × 9 columns\n</p>\n</div>\n<ul>\n<li><strong>结果说明：上述输出的即为所有关联规则的结果，每一行代表一个关联规则，其中行号1473所在的关联规则(Waiter-&gt;Muxmauschenstill)关联度最高(conviction值越大，代表antecedents与consequents的关联度越大）)。</strong></li>\n</ul>\n<h2 id=\"电影推荐\">电影推荐</h2>\n<h4 id=\"推荐电影列表\">推荐电影列表</h4>\n<div class=\"sourceCode\" id=\"cb122\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb122-1\"><a href=\"#cb122-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>all_antecedents <span class=\"op\">=</span> [<span class=\"bu\">list</span>(x) <span class=\"cf\">for</span> x <span class=\"kw\">in</span> rules[<span class=\"st\">&#39;antecedents&#39;</span>].values]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb123\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb123-1\"><a href=\"#cb123-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>desired_indices <span class=\"op\">=</span> [i <span class=\"cf\">for</span> i <span class=\"kw\">in</span> <span class=\"bu\">range</span>(<span class=\"bu\">len</span>(all_antecedents)) <span class=\"cf\">if</span> <span class=\"bu\">len</span>(all_antecedents[i]) <span class=\"op\">==</span> <span class=\"dv\">1</span> <span class=\"kw\">and</span> all_antecedents[i][<span class=\"dv\">0</span>] <span class=\"op\">==</span> <span class=\"st\">&#39;Batman Returns&#39;</span>] </span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb124\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb124-1\"><a href=\"#cb124-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>apriori_recommendations <span class=\"op\">=</span>rules.iloc[desired_indices,].sort_values(by<span class=\"op\">=</span>[<span class=\"st\">&#39;lift&#39;</span>],ascending<span class=\"op\">=</span><span class=\"va\">False</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb125\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb125-1\"><a href=\"#cb125-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>apriori_recommendations.head()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nantecedents\n</th>\n<th>\nconsequents\n</th>\n<th>\nantecedent support\n</th>\n<th>\nconsequent support\n</th>\n<th>\nsupport\n</th>\n<th>\nconfidence\n</th>\n<th>\nlift\n</th>\n<th>\nleverage\n</th>\n<th>\nconviction\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n63981\n</th>\n<td>\n(Batman Returns)\n</td>\n<td>\n(The Hours, Monsoon Wedding, Silent Hill, Rese...\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.107303\n</td>\n<td>\n0.102832\n</td>\n<td>\n0.345\n</td>\n<td>\n3.215208\n</td>\n<td>\n0.070849\n</td>\n<td>\n1.362897\n</td>\n</tr>\n<tr>\n<th>\n36084\n</th>\n<td>\n(Batman Returns)\n</td>\n<td>\n(Reservoir Dogs, Wag the Dog, Silent Hill)\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.105812\n</td>\n<td>\n0.101341\n</td>\n<td>\n0.340\n</td>\n<td>\n3.213239\n</td>\n<td>\n0.069803\n</td>\n<td>\n1.354830\n</td>\n</tr>\n<tr>\n<th>\n63891\n</th>\n<td>\n(Batman Returns)\n</td>\n<td>\n(Monsoon Wedding, Silent Hill, Reservoir Dogs,...\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.107303\n</td>\n<td>\n0.101341\n</td>\n<td>\n0.340\n</td>\n<td>\n3.168611\n</td>\n<td>\n0.069358\n</td>\n<td>\n1.352572\n</td>\n</tr>\n<tr>\n<th>\n63351\n</th>\n<td>\n(Batman Returns)\n</td>\n<td>\n(Monsoon Wedding, Silent Hill, Reservoir Dogs,...\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.107303\n</td>\n<td>\n0.101341\n</td>\n<td>\n0.340\n</td>\n<td>\n3.168611\n</td>\n<td>\n0.069358\n</td>\n<td>\n1.352572\n</td>\n</tr>\n<tr>\n<th>\n36014\n</th>\n<td>\n(Batman Returns)\n</td>\n<td>\n(The Hours, Reservoir Dogs, Silent Hill)\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.116244\n</td>\n<td>\n0.108793\n</td>\n<td>\n0.365\n</td>\n<td>\n3.139936\n</td>\n<td>\n0.074145\n</td>\n<td>\n1.391741\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb126\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb126-1\"><a href=\"#cb126-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>apriori_recommendations_list <span class=\"op\">=</span> [<span class=\"bu\">list</span>(x) <span class=\"cf\">for</span> x <span class=\"kw\">in</span> apriori_recommendations[<span class=\"st\">&#39;consequents&#39;</span>].values]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb127\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb127-1\"><a href=\"#cb127-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">print</span>(<span class=\"st\">&quot;Apriori Recommendations for movie: Batman Returns</span><span class=\"ch\">\\n</span><span class=\"st\">&quot;</span>)</span>\n<span id=\"cb127-2\"><a href=\"#cb127-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> i <span class=\"kw\">in</span> <span class=\"bu\">range</span>(<span class=\"dv\">5</span>):</span>\n<span id=\"cb127-3\"><a href=\"#cb127-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">print</span>(<span class=\"st\">&quot;</span><span class=\"sc\">&#123;0&#125;</span><span class=\"st\">:</span><span class=\"sc\">&#123;1&#125;</span><span class=\"st\"> with lift of </span><span class=\"sc\">&#123;2&#125;</span><span class=\"st\">&quot;</span> .<span class=\"bu\">format</span>(i<span class=\"op\">+</span><span class=\"dv\">1</span>, apriori_recommendations_list[i], apriori_recommendations.iloc[i,<span class=\"dv\">6</span>]))</span></code></pre></div>\n<pre><code>Apriori Recommendations for movie: Batman Returns\n\n1:[&#39;The Hours&#39;, &#39;Monsoon Wedding&#39;, &#39;Silent Hill&#39;, &#39;Reservoir Dogs&#39;] with lift of 3.215208333333333\n2:[&#39;Reservoir Dogs&#39;, &#39;Wag the Dog&#39;, &#39;Silent Hill&#39;] with lift of 3.2132394366197183\n3:[&#39;Monsoon Wedding&#39;, &#39;Silent Hill&#39;, &#39;Reservoir Dogs&#39;, &#39;Sissi&#39;] with lift of 3.168611111111111\n4:[&#39;Monsoon Wedding&#39;, &#39;Silent Hill&#39;, &#39;Reservoir Dogs&#39;, &#39;Rain Man&#39;] with lift of 3.168611111111111\n5:[&#39;The Hours&#39;, &#39;Reservoir Dogs&#39;, &#39;Silent Hill&#39;] with lift of 3.139935897435898</code></pre>\n<h4 id=\"推荐单部电影\">推荐单部电影</h4>\n<div class=\"sourceCode\" id=\"cb129\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb129-1\"><a href=\"#cb129-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>apriori_single_recommendations <span class=\"op\">=</span> apriori_recommendations.iloc[[x <span class=\"cf\">for</span> x <span class=\"kw\">in</span> <span class=\"bu\">range</span>(<span class=\"bu\">len</span>(apriori_recommendations_list)) <span class=\"cf\">if</span> <span class=\"bu\">len</span>(apriori_recommendations_list[x]) <span class=\"op\">==</span><span class=\"dv\">1</span>],]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb130\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb130-1\"><a href=\"#cb130-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>apriori_single_recommendations_list <span class=\"op\">=</span> [<span class=\"bu\">list</span>(x) <span class=\"cf\">for</span> x <span class=\"kw\">in</span> apriori_single_recommendations[<span class=\"st\">&#39;consequents&#39;</span>].values]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb131\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb131-1\"><a href=\"#cb131-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">print</span>(<span class=\"st\">&quot;Apriori single-movie Recommendations for movie: Batman Returns</span><span class=\"ch\">\\n</span><span class=\"st\">&quot;</span>)</span>\n<span id=\"cb131-2\"><a href=\"#cb131-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> i <span class=\"kw\">in</span> <span class=\"bu\">range</span>(<span class=\"dv\">5</span>):</span>\n<span id=\"cb131-3\"><a href=\"#cb131-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">print</span>(<span class=\"st\">&quot;</span><span class=\"sc\">&#123;0&#125;</span><span class=\"st\">: </span><span class=\"sc\">&#123;1&#125;</span><span class=\"st\">, with lift of </span><span class=\"sc\">&#123;2&#125;</span><span class=\"st\">&quot;</span>.<span class=\"bu\">format</span>(i<span class=\"op\">+</span><span class=\"dv\">1</span>,apriori_single_recommendations_list[i][<span class=\"dv\">0</span>],apriori_single_recommendations.iloc[i,<span class=\"dv\">6</span>]))</span></code></pre></div>\n<pre><code>Apriori single-movie Recommendations for movie: Batman Returns\n\n1: Reservoir Dogs, with lift of 2.6094444444444447\n2: Ariel, with lift of 2.5397663551401872\n3: Wag the Dog, with lift of 2.496744186046512\n4: To Kill a Mockingbird, with lift of 2.478125\n5: Romeo + Juliet, with lift of 2.4705000000000004</code></pre>\n<ul>\n<li><strong>结果说明：我们约束consequents(后件)的长度为1，选出lift降序排列的前五个关联规则(关联规则格式为前件——&gt;后件）。对于用户观看的电影记录《Batman\nReturns》，即antecedents(前件），我们根据规则按照推荐程度降序给出了单部电影推荐结果</strong></li>\n</ul>\n<h2 id=\"协同过滤\"><strong>协同过滤</strong></h2>\n<h4 id=\"基于user的协同过滤\">基于user的协同过滤</h4>\n<ul>\n<li>在海量的用户中发现一小部分和你品味比较相近的，在协同过滤中，这些用户称为邻居，然后根据他们喜欢的东西组织成一个排序的目录来推荐给你\n<ul>\n<li><strong>重点就是怎样去寻找和你比较相似的用户，怎么将那些邻居的喜好组织成一个排序的目录给用户</strong>\n<ul>\n<li>在世纪钟给出一个数字K表示和你最为相似的用户。</li>\n<li>在计算相似度的时候，理论上要计算被推荐的用户与所有用户的相似度，但是当数据量比较大的时候，这样做是很费时间的\n，</li>\n<li>数据集中可能有很多用户和需要被推荐的用户是没有关系的，\n在计算是完全是没有必要的，</li>\n<li>所以需要物品到用户的反查表，也就是没一件物品对应的用户信息，有了这个表，就可以过滤掉很多和你没有关系的用户，减少计算量。</li>\n<li><figure>\n<img src=\"/.top//attachment:c637faba-51f3-4a89-84f5-ede3ce337e4c.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure></li>\n</ul></li>\n<li>总结来说，推荐的过程就是先计算用户之间的相似度，根据相似度的高低选取前K个用户，在这K个用户中计算每一件物品的推荐程度。</li>\n</ul></li>\n</ul>\n<div class=\"sourceCode\" id=\"cb133\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb133-1\"><a href=\"#cb133-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 读取ratings_small.csv数据用于建模</span></span>\n<span id=\"cb133-2\"><a href=\"#cb133-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_path <span class=\"op\">=</span> <span class=\"st\">&quot;./movie_dataset/ratings_small.csv&quot;</span></span>\n<span id=\"cb133-3\"><a href=\"#cb133-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_df <span class=\"op\">=</span> pd.read_csv(ratings_small_path)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb134\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb134-1\"><a href=\"#cb134-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_df.shape</span></code></pre></div>\n<pre><code>(100004, 4)</code></pre>\n<div class=\"sourceCode\" id=\"cb136\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb136-1\"><a href=\"#cb136-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_df.head()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntimestamp\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n31\n</td>\n<td>\n2.5\n</td>\n<td>\n1260759144\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n1\n</td>\n<td>\n1029\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759179\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n1\n</td>\n<td>\n1061\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759182\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n1\n</td>\n<td>\n1129\n</td>\n<td>\n2.0\n</td>\n<td>\n1260759185\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n1\n</td>\n<td>\n1172\n</td>\n<td>\n4.0\n</td>\n<td>\n1260759205\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb137\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb137-1\"><a href=\"#cb137-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 原始的movieId 并非从0到1 的连续值， 为方便更贱user-item矩阵， 重新排列movie_id</span></span>\n<span id=\"cb137-2\"><a href=\"#cb137-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_id <span class=\"op\">=</span> ratings_small_df[<span class=\"st\">&#39;movieId&#39;</span>].drop_duplicates()</span>\n<span id=\"cb137-3\"><a href=\"#cb137-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_id <span class=\"op\">=</span> pd.DataFrame(movie_id)</span>\n<span id=\"cb137-4\"><a href=\"#cb137-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_id[<span class=\"st\">&#39;movieid&#39;</span>] <span class=\"op\">=</span> <span class=\"bu\">range</span>(<span class=\"bu\">len</span>(movie_id))</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb138\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb138-1\"><a href=\"#cb138-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_id</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nmovieId\n</th>\n<th>\nmovieid\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n31\n</td>\n<td>\n0\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n1029\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n1061\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n1129\n</td>\n<td>\n3\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n1172\n</td>\n<td>\n4\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n99131\n</th>\n<td>\n64997\n</td>\n<td>\n9061\n</td>\n</tr>\n<tr>\n<th>\n99159\n</th>\n<td>\n72380\n</td>\n<td>\n9062\n</td>\n</tr>\n<tr>\n<th>\n99274\n</th>\n<td>\n129\n</td>\n<td>\n9063\n</td>\n</tr>\n<tr>\n<th>\n99678\n</th>\n<td>\n4736\n</td>\n<td>\n9064\n</td>\n</tr>\n<tr>\n<th>\n99820\n</th>\n<td>\n6425\n</td>\n<td>\n9065\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n9066 rows × 2 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb139\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb139-1\"><a href=\"#cb139-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_df <span class=\"op\">=</span> pd.merge(ratings_small_df, movie_id, on <span class=\"op\">=</span>[<span class=\"st\">&#39;movieId&#39;</span>], how<span class=\"op\">=</span><span class=\"st\">&#39;left&#39;</span>)</span>\n<span id=\"cb139-2\"><a href=\"#cb139-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_df</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntimestamp\n</th>\n<th>\nmovieid\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n31\n</td>\n<td>\n2.5\n</td>\n<td>\n1260759144\n</td>\n<td>\n0\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n1\n</td>\n<td>\n1029\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759179\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n1\n</td>\n<td>\n1061\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759182\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n1\n</td>\n<td>\n1129\n</td>\n<td>\n2.0\n</td>\n<td>\n1260759185\n</td>\n<td>\n3\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n1\n</td>\n<td>\n1172\n</td>\n<td>\n4.0\n</td>\n<td>\n1260759205\n</td>\n<td>\n4\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n99999\n</th>\n<td>\n671\n</td>\n<td>\n6268\n</td>\n<td>\n2.5\n</td>\n<td>\n1065579370\n</td>\n<td>\n7005\n</td>\n</tr>\n<tr>\n<th>\n100000\n</th>\n<td>\n671\n</td>\n<td>\n6269\n</td>\n<td>\n4.0\n</td>\n<td>\n1065149201\n</td>\n<td>\n4771\n</td>\n</tr>\n<tr>\n<th>\n100001\n</th>\n<td>\n671\n</td>\n<td>\n6365\n</td>\n<td>\n4.0\n</td>\n<td>\n1070940363\n</td>\n<td>\n1329\n</td>\n</tr>\n<tr>\n<th>\n100002\n</th>\n<td>\n671\n</td>\n<td>\n6385\n</td>\n<td>\n2.5\n</td>\n<td>\n1070979663\n</td>\n<td>\n1331\n</td>\n</tr>\n<tr>\n<th>\n100003\n</th>\n<td>\n671\n</td>\n<td>\n6565\n</td>\n<td>\n3.5\n</td>\n<td>\n1074784724\n</td>\n<td>\n2946\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n100004 rows × 5 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb140\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb140-1\"><a href=\"#cb140-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_df <span class=\"op\">=</span> ratings_small_df[[<span class=\"st\">&#39;userId&#39;</span>,<span class=\"st\">&#39;movieid&#39;</span>,<span class=\"st\">&#39;rating&#39;</span>,<span class=\"st\">&#39;timestamp&#39;</span>]]  <span class=\"co\">#更新 movieId ----&gt; movieid</span></span>\n<span id=\"cb140-2\"><a href=\"#cb140-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_df</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieid\n</th>\n<th>\nrating\n</th>\n<th>\ntimestamp\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n2.5\n</td>\n<td>\n1260759144\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759179\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n1\n</td>\n<td>\n2\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759182\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n1\n</td>\n<td>\n3\n</td>\n<td>\n2.0\n</td>\n<td>\n1260759185\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n1\n</td>\n<td>\n4\n</td>\n<td>\n4.0\n</td>\n<td>\n1260759205\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n99999\n</th>\n<td>\n671\n</td>\n<td>\n7005\n</td>\n<td>\n2.5\n</td>\n<td>\n1065579370\n</td>\n</tr>\n<tr>\n<th>\n100000\n</th>\n<td>\n671\n</td>\n<td>\n4771\n</td>\n<td>\n4.0\n</td>\n<td>\n1065149201\n</td>\n</tr>\n<tr>\n<th>\n100001\n</th>\n<td>\n671\n</td>\n<td>\n1329\n</td>\n<td>\n4.0\n</td>\n<td>\n1070940363\n</td>\n</tr>\n<tr>\n<th>\n100002\n</th>\n<td>\n671\n</td>\n<td>\n1331\n</td>\n<td>\n2.5\n</td>\n<td>\n1070979663\n</td>\n</tr>\n<tr>\n<th>\n100003\n</th>\n<td>\n671\n</td>\n<td>\n2946\n</td>\n<td>\n3.5\n</td>\n<td>\n1074784724\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n100004 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb141\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb141-1\"><a href=\"#cb141-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 用户物品统计</span></span>\n<span id=\"cb141-2\"><a href=\"#cb141-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># unique()是以 数组形式（numpy.ndarray）返回列的所有唯一值（特征的所有唯一值）</span></span>\n<span id=\"cb141-3\"><a href=\"#cb141-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># nunique() Return number of unique elements in the object.即返回的是唯一值的个数</span></span>\n<span id=\"cb141-4\"><a href=\"#cb141-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb141-5\"><a href=\"#cb141-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>n_users <span class=\"op\">=</span> ratings_small_df.userId.nunique()</span>\n<span id=\"cb141-6\"><a href=\"#cb141-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>n_users</span></code></pre></div>\n<pre><code>671</code></pre>\n<div class=\"sourceCode\" id=\"cb143\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb143-1\"><a href=\"#cb143-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>n_items <span class=\"op\">=</span> ratings_small_df.movieid.nunique()</span>\n<span id=\"cb143-2\"><a href=\"#cb143-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>n_items </span></code></pre></div>\n<pre><code>9066</code></pre>\n<div class=\"sourceCode\" id=\"cb145\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb145-1\"><a href=\"#cb145-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 拆分数据集</span></span>\n<span id=\"cb145-2\"><a href=\"#cb145-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> sklearn.model_selection <span class=\"im\">import</span> train_test_split</span>\n<span id=\"cb145-3\"><a href=\"#cb145-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#按照训练集70% 测试集30%的比例 对数据进行拆分</span></span>\n<span id=\"cb145-4\"><a href=\"#cb145-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>train_data,test_data <span class=\"op\">=</span> train_test_split(ratings_small_df,test_size<span class=\"op\">=</span> <span class=\"fl\">0.3</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb146\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb146-1\"><a href=\"#cb146-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>train_data</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieid\n</th>\n<th>\nrating\n</th>\n<th>\ntimestamp\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n69526\n</th>\n<td>\n481\n</td>\n<td>\n329\n</td>\n<td>\n4.0\n</td>\n<td>\n1437001087\n</td>\n</tr>\n<tr>\n<th>\n41670\n</th>\n<td>\n299\n</td>\n<td>\n917\n</td>\n<td>\n3.5\n</td>\n<td>\n1344188856\n</td>\n</tr>\n<tr>\n<th>\n49260\n</th>\n<td>\n358\n</td>\n<td>\n288\n</td>\n<td>\n2.0\n</td>\n<td>\n957480147\n</td>\n</tr>\n<tr>\n<th>\n39317\n</th>\n<td>\n287\n</td>\n<td>\n3582\n</td>\n<td>\n4.0\n</td>\n<td>\n1470168974\n</td>\n</tr>\n<tr>\n<th>\n35991\n</th>\n<td>\n262\n</td>\n<td>\n2094\n</td>\n<td>\n3.0\n</td>\n<td>\n1433899624\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n6262\n</th>\n<td>\n33\n</td>\n<td>\n1095\n</td>\n<td>\n2.0\n</td>\n<td>\n1032769543\n</td>\n</tr>\n<tr>\n<th>\n8504\n</th>\n<td>\n56\n</td>\n<td>\n367\n</td>\n<td>\n2.0\n</td>\n<td>\n1467005360\n</td>\n</tr>\n<tr>\n<th>\n8540\n</th>\n<td>\n56\n</td>\n<td>\n1435\n</td>\n<td>\n4.0\n</td>\n<td>\n1467006577\n</td>\n</tr>\n<tr>\n<th>\n77937\n</th>\n<td>\n542\n</td>\n<td>\n1496\n</td>\n<td>\n1.0\n</td>\n<td>\n1424966216\n</td>\n</tr>\n<tr>\n<th>\n94226\n</th>\n<td>\n624\n</td>\n<td>\n476\n</td>\n<td>\n3.0\n</td>\n<td>\n1053249671\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n70002 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb147\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb147-1\"><a href=\"#cb147-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 训练集 用户-物品 矩阵</span></span>\n<span id=\"cb147-2\"><a href=\"#cb147-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_item_matrix <span class=\"op\">=</span> np.zeros((n_users,n_items))</span>\n<span id=\"cb147-3\"><a href=\"#cb147-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_item_matrix.shape</span></code></pre></div>\n<pre><code>(671, 9066)</code></pre>\n<div class=\"sourceCode\" id=\"cb149\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb149-1\"><a href=\"#cb149-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># iterrows() : 将DataFrame迭代成（index ,series）</span></span>\n<span id=\"cb149-2\"><a href=\"#cb149-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># iteritems()： 将DataFrame迭代成（列名，series）</span></span>\n<span id=\"cb149-3\"><a href=\"#cb149-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># itertuples()： 将DataFrame迭代成元组 </span></span>\n<span id=\"cb149-4\"><a href=\"#cb149-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> line <span class=\"kw\">in</span> train_data.itertuples():</span>\n<span id=\"cb149-5\"><a href=\"#cb149-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_item_matrix[line[<span class=\"dv\">1</span>]<span class=\"op\">-</span><span class=\"dv\">1</span>,line[<span class=\"dv\">2</span>]]<span class=\"op\">=</span>line[<span class=\"dv\">3</span>]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb150\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb150-1\"><a href=\"#cb150-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_item_matrix</span></code></pre></div>\n<pre><code>array([[0., 3., 3., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       ...,\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.]])</code></pre>\n<div class=\"sourceCode\" id=\"cb152\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb152-1\"><a href=\"#cb152-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_item_matrix.shape</span></code></pre></div>\n<pre><code>(671, 9066)</code></pre>\n<div class=\"sourceCode\" id=\"cb154\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb154-1\"><a href=\"#cb154-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 构建用户相似矩阵 ---采用余弦距离</span></span>\n<span id=\"cb154-2\"><a href=\"#cb154-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> sklearn.metrics.pairwise <span class=\"im\">import</span> pairwise_distances</span>\n<span id=\"cb154-3\"><a href=\"#cb154-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 相似度计算 定义余弦距离</span></span>\n<span id=\"cb154-4\"><a href=\"#cb154-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_similarity_m <span class=\"op\">=</span> pairwise_distances(user_item_matrix,metric<span class=\"op\">=</span><span class=\"st\">&#39;cosine&#39;</span>)  <span class=\"co\"># 每个用户为1行数据，故此处不需要再进行转置</span></span></code></pre></div>\n<figure>\n<img src=\"/.top//attachment:580b16df-141a-4cce-a502-53a01d1ecb68.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure>\n<div class=\"sourceCode\" id=\"cb155\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb155-1\"><a href=\"#cb155-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>a<span class=\"op\">=</span>[[<span class=\"dv\">1</span>,<span class=\"dv\">3</span>],[<span class=\"dv\">2</span>,<span class=\"dv\">2</span>]]</span>\n<span id=\"cb155-2\"><a href=\"#cb155-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>a</span></code></pre></div>\n<pre><code>[[1, 3], [2, 2]]</code></pre>\n<div class=\"sourceCode\" id=\"cb157\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb157-1\"><a href=\"#cb157-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>pairwise_distances(a,metric<span class=\"op\">=</span><span class=\"st\">&#39;euclidean&#39;</span>)</span></code></pre></div>\n<pre><code>array([[0.        , 1.41421356],\n       [1.41421356, 0.        ]])</code></pre>\n<div class=\"sourceCode\" id=\"cb159\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb159-1\"><a href=\"#cb159-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>b <span class=\"op\">=</span> np.array([[<span class=\"dv\">1</span>,<span class=\"dv\">2</span>],[<span class=\"dv\">1</span>,<span class=\"dv\">3</span>],[<span class=\"dv\">2</span>,<span class=\"dv\">1</span>]])</span>\n<span id=\"cb159-2\"><a href=\"#cb159-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>b</span></code></pre></div>\n<pre><code>array([[1, 2],\n       [1, 3],\n       [2, 1]])</code></pre>\n<div class=\"sourceCode\" id=\"cb161\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb161-1\"><a href=\"#cb161-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>pairwise_distances(b,metric<span class=\"op\">=</span><span class=\"st\">&#39;euclidean&#39;</span>) <span class=\"co\">#结果数组的第一行第二列表示 a[0]与a[1]的距离</span></span></code></pre></div>\n<pre><code>array([[0.        , 1.        , 1.41421356],\n       [1.        , 0.        , 2.23606798],\n       [1.41421356, 2.23606798, 0.        ]])</code></pre>\n<div class=\"sourceCode\" id=\"cb163\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb163-1\"><a href=\"#cb163-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>pairwise_distances(b,metric<span class=\"op\">=</span><span class=\"st\">&#39;cosine&#39;</span>)</span></code></pre></div>\n<pre><code>array([[0.        , 0.01005051, 0.2       ],\n       [0.01005051, 0.        , 0.29289322],\n       [0.2       , 0.29289322, 0.        ]])</code></pre>\n<div class=\"sourceCode\" id=\"cb165\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb165-1\"><a href=\"#cb165-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>b.shape</span></code></pre></div>\n<pre><code>(3, 2)</code></pre>\n<div class=\"sourceCode\" id=\"cb167\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb167-1\"><a href=\"#cb167-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>b[<span class=\"dv\">1</span>]</span></code></pre></div>\n<pre><code>array([1, 3])</code></pre>\n<div class=\"sourceCode\" id=\"cb169\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb169-1\"><a href=\"#cb169-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>b[<span class=\"dv\">0</span>]</span></code></pre></div>\n<pre><code>array([1, 2])</code></pre>\n<div class=\"sourceCode\" id=\"cb171\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb171-1\"><a href=\"#cb171-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_similarity_m.shape</span></code></pre></div>\n<pre><code>(671, 671)</code></pre>\n<div class=\"sourceCode\" id=\"cb173\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb173-1\"><a href=\"#cb173-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_similarity_m[<span class=\"dv\">0</span>:<span class=\"dv\">5</span>,<span class=\"dv\">0</span>:<span class=\"dv\">5</span>].<span class=\"bu\">round</span>(<span class=\"dv\">2</span>)</span></code></pre></div>\n<pre><code>array([[0.  , 1.  , 1.  , 0.94, 0.97],\n       [1.  , 0.  , 0.89, 0.93, 0.92],\n       [1.  , 0.89, 0.  , 0.93, 0.93],\n       [0.94, 0.93, 0.93, 0.  , 0.94],\n       [0.97, 0.92, 0.93, 0.94, 0.  ]])</code></pre>\n<div class=\"sourceCode\" id=\"cb175\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb175-1\"><a href=\"#cb175-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_similarity_m_triu <span class=\"op\">=</span> np.triu(user_similarity_m,k<span class=\"op\">=</span><span class=\"dv\">1</span>) <span class=\"co\">#取得上三角数据</span></span>\n<span id=\"cb175-2\"><a href=\"#cb175-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>np.<span class=\"bu\">round</span>(user_similarity_m_triu[user_similarity_m_triu.nonzero()],<span class=\"dv\">3</span>)</span></code></pre></div>\n<pre><code>array([1.   , 1.   , 0.938, ..., 0.934, 0.919, 0.814])</code></pre>\n<div class=\"sourceCode\" id=\"cb177\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb177-1\"><a href=\"#cb177-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_sim_nonzero <span class=\"op\">=</span> np.<span class=\"bu\">round</span>(user_similarity_m_triu[user_similarity_m_triu.nonzero()],<span class=\"dv\">3</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb178\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb178-1\"><a href=\"#cb178-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>np.percentile(user_sim_nonzero,np.arange(<span class=\"dv\">0</span>,<span class=\"dv\">101</span>,<span class=\"dv\">10</span>))</span></code></pre></div>\n<pre><code>array([0.316, 0.844, 0.885, 0.911, 0.93 , 0.947, 0.961, 0.976, 1.   ,\n       1.   , 1.   ])</code></pre>\n<h4 id=\"训练集预测\">训练集预测</h4>\n<div class=\"sourceCode\" id=\"cb180\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb180-1\"><a href=\"#cb180-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>mean_user_rating <span class=\"op\">=</span> user_item_matrix.mean(axis<span class=\"op\">=</span><span class=\"dv\">1</span>)</span>\n<span id=\"cb180-2\"><a href=\"#cb180-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>mean_user_rating</span></code></pre></div>\n<pre><code>array([0.00297816, 0.0198544 , 0.01301566, 0.06265167, 0.03027796,\n       0.01196779, 0.02404589, 0.03805427, 0.01114053, 0.0147805 ,\n       0.01047871, 0.01301566, 0.01615928, 0.004743  , 0.33984116,\n       0.01069932, 0.0991617 , 0.0147805 , 0.11780278, 0.02294286,\n       0.0443415 , 0.04936025, 0.21111846, 0.00683874, 0.00617692,\n       0.04031546, 0.00816236, 0.01555261, 0.00363997, 0.29643724,\n       0.02625193, 0.01080962, 0.03684094, 0.05702625, 0.0025921 ,\n       0.03000221, 0.01147143, 0.03838518, 0.0196338 , 0.01301566,\n       0.0592323 , 0.0196338 , 0.02172954, 0.00694904, 0.00512905,\n       0.01312597, 0.01069932, 0.14212442, 0.02371498, 0.01169204,\n       0.01069932, 0.01941319, 0.00893448, 0.01384293, 0.00838297,\n       0.14615045, 0.06254136, 0.01753805, 0.02090227, 0.02018531,\n       0.04197   , 0.0172623 , 0.02454225, 0.00739025, 0.00694904,\n       0.01544231, 0.02856828, 0.03331127, 0.02327377, 0.02856828,\n       0.00794176, 0.05035297, 0.42096845, 0.01544231, 0.0394882 ,\n       0.00573572, 0.07346128, 0.08234061, 0.00921024, 0.0100375 ,\n       0.05283477, 0.01235385, 0.04555482, 0.03424884, 0.0247077 ,\n       0.05084933, 0.00650783, 0.06281712, 0.02448709, 0.01577322,\n       0.04671299, 0.02779616, 0.0444518 , 0.0497463 , 0.08769027,\n       0.02288771, 0.03160159, 0.02332892, 0.0497463 , 0.00661813,\n       0.0173726 , 0.1978822 , 0.02437679, 0.02360468, 0.13942202,\n       0.01411869, 0.00656298, 0.00783146, 0.00628723, 0.04015001,\n       0.09541143, 0.00650783, 0.00959629, 0.00827267, 0.01351202,\n       0.00667328, 0.01389808, 0.05592323, 0.17185087, 0.03833002,\n       0.02503861, 0.00882418, 0.00937569, 0.02415619, 0.0666777 ,\n       0.01808957, 0.00573572, 0.09695566, 0.00595632, 0.09254357,\n       0.01433929, 0.0297816 , 0.03518641, 0.10065078, 0.00529451,\n       0.01637988, 0.02018531, 0.02024046, 0.02090227, 0.01213325,\n       0.00816236, 0.01103022, 0.02365983, 0.01158173, 0.01455989,\n       0.02134348, 0.01312597, 0.04081182, 0.06121774, 0.09557688,\n       0.01654533, 0.05664019, 0.01698654, 0.00926539, 0.01279506,\n       0.01604897, 0.08697331, 0.00562541, 0.04070152, 0.03132583,\n       0.02702405, 0.00915508, 0.02007501, 0.02421134, 0.10870285,\n       0.01422899, 0.00761085, 0.02790646, 0.03623428, 0.00590117,\n       0.01588352, 0.0051842 , 0.01169204, 0.00639753, 0.03551732,\n       0.05834988, 0.07059343, 0.03259431, 0.01080962, 0.00452239,\n       0.01108537, 0.04301787, 0.01433929, 0.01125083, 0.05625414,\n       0.0099272 , 0.1014229 , 0.02867858, 0.03320097, 0.02150893,\n       0.00739025, 0.01687624, 0.01886168, 0.01367748, 0.10533863,\n       0.02702405, 0.02051621, 0.01979925, 0.12221487, 0.05846018,\n       0.03910214, 0.01831017, 0.01086477, 0.00871388, 0.05542687,\n       0.00948599, 0.00672844, 0.01604897, 0.00452239, 0.00683874,\n       0.01610413, 0.2176263 , 0.18409442, 0.06254136, 0.01753805,\n       0.02465255, 0.03430399, 0.01433929, 0.03855063, 0.07842488,\n       0.00501875, 0.02658284, 0.01158173, 0.02625193, 0.00827267,\n       0.00921024, 0.00750055, 0.02349437, 0.00987205, 0.03347673,\n       0.00937569, 0.20416942, 0.00871388, 0.03160159, 0.04858813,\n       0.06507831, 0.01075447, 0.02432164, 0.0843812 , 0.07246856,\n       0.0147805 , 0.14328259, 0.08151335, 0.02195014, 0.04268696,\n       0.00739025, 0.07677035, 0.03595853, 0.0051842 , 0.05581293,\n       0.03628943, 0.01147143, 0.05840503, 0.03739246, 0.04252151,\n       0.00650783, 0.02768586, 0.01025811, 0.00926539, 0.01235385,\n       0.01047871, 0.13710567, 0.03000221, 0.01091992, 0.054379  ,\n       0.00959629, 0.01158173, 0.10324289, 0.00628723, 0.06176925,\n       0.02029561, 0.01158173, 0.0296713 , 0.01114053, 0.06585043,\n       0.00479815, 0.01808957, 0.0147805 , 0.01136113, 0.00838297,\n       0.02509376, 0.03524156, 0.05333113, 0.01433929, 0.10302228,\n       0.00915508, 0.0893448 , 0.02029561, 0.0049636 , 0.02090227,\n       0.02553497, 0.08018972, 0.02217075, 0.25672844, 0.06849768,\n       0.00634238, 0.03662034, 0.02647253, 0.11763733, 0.01389808,\n       0.00551511, 0.00750055, 0.06243106, 0.03309067, 0.00595632,\n       0.16997573, 0.02029561, 0.0148908 , 0.04594088, 0.00468784,\n       0.23830796, 0.07290977, 0.08112729, 0.01169204, 0.01246415,\n       0.03524156, 0.00573572, 0.01588352, 0.00595632, 0.01571807,\n       0.02283256, 0.01323627, 0.00700419, 0.04180454, 0.00446724,\n       0.00783146, 0.02073682, 0.04649239, 0.00584602, 0.02680344,\n       0.00689389, 0.00816236, 0.02503861, 0.01086477, 0.007666  ,\n       0.00816236, 0.00330907, 0.01323627, 0.02950585, 0.01384293,\n       0.00595632, 0.05868079, 0.01114053, 0.04500331, 0.0619347 ,\n       0.09055813, 0.00650783, 0.01621443, 0.00639753, 0.0495257 ,\n       0.01378778, 0.02443194, 0.1039047 , 0.01544231, 0.09039268,\n       0.00419148, 0.00948599, 0.15243768, 0.01483565, 0.0098169 ,\n       0.01533201, 0.03071917, 0.05404809, 0.00909993, 0.0224465 ,\n       0.0097066 , 0.05217295, 0.00628723, 0.01345687, 0.03055372,\n       0.0446724 , 0.00849327, 0.06165895, 0.00838297, 0.00705934,\n       0.01808957, 0.00645268, 0.03750276, 0.01990955, 0.28375248,\n       0.02945069, 0.07654975, 0.01544231, 0.11973307, 0.03132583,\n       0.02691374, 0.09276417, 0.22865652, 0.01246415, 0.03430399,\n       0.02923009, 0.00617692, 0.0125193 , 0.04511361, 0.00683874,\n       0.03540702, 0.01632473, 0.01544231, 0.00595632, 0.01676594,\n       0.024818  , 0.09303993, 0.00783146, 0.0098169 , 0.11675491,\n       0.0270792 , 0.10699316, 0.05978381, 0.01566292, 0.00799691,\n       0.00882418, 0.05129054, 0.00650783, 0.01698654, 0.00893448,\n       0.02724465, 0.04114273, 0.0494154 , 0.01643503, 0.02823737,\n       0.0101478 , 0.0296713 , 0.09458416, 0.00799691, 0.01588352,\n       0.06507831, 0.09458416, 0.04560997, 0.00457754, 0.09618354,\n       0.09303993, 0.02013016, 0.06221046, 0.05382749, 0.00606662,\n       0.02161924, 0.00683874, 0.00612177, 0.05779837, 0.01367748,\n       0.03568277, 0.07572248, 0.01775866, 0.00441209, 0.00540481,\n       0.00904478, 0.01808957, 0.00639753, 0.00871388, 0.03943305,\n       0.01599382, 0.33085153, 0.02294286, 0.0101478 , 0.00821752,\n       0.01660049, 0.14179351, 0.02272226, 0.00705934, 0.08283697,\n       0.15784249, 0.0121884 , 0.13335539, 0.01058901, 0.01119568,\n       0.0593426 , 0.02095742, 0.30228326, 0.0048533 , 0.01869623,\n       0.0569711 , 0.24652548, 0.02614163, 0.01301566, 0.14284139,\n       0.01114053, 0.00490845, 0.02774101, 0.03132583, 0.1185749 ,\n       0.1435032 , 0.01819987, 0.03259431, 0.00573572, 0.004743  ,\n       0.0398191 , 0.04037062, 0.01781381, 0.00672844, 0.0051842 ,\n       0.01875138, 0.01941319, 0.02923009, 0.02415619, 0.00617692,\n       0.03309067, 0.03419369, 0.0048533 , 0.01235385, 0.05741231,\n       0.05658504, 0.03353188, 0.01334657, 0.004743  , 0.09927201,\n       0.0051842 , 0.01125083, 0.01334657, 0.2351092 , 0.04367968,\n       0.00948599, 0.00921024, 0.00584602, 0.1037944 , 0.00876903,\n       0.03805427, 0.01411869, 0.19170527, 0.05619899, 0.03987426,\n       0.01384293, 0.06083168, 0.04003971, 0.01968895, 0.03992941,\n       0.00777631, 0.03171189, 0.03325612, 0.16804544, 0.02062652,\n       0.03298037, 0.01384293, 0.0394882 , 0.08030002, 0.01378778,\n       0.03011251, 0.10070593, 0.00739025, 0.01058901, 0.00551511,\n       0.00683874, 0.01704169, 0.01544231, 0.09265387, 0.02713435,\n       0.02178469, 0.63484447, 0.03562762, 0.00623208, 0.03353188,\n       0.02360468, 0.00783146, 0.06358923, 0.01511141, 0.01831017,\n       0.00959629, 0.01329142, 0.07224796, 0.04378998, 0.03253916,\n       0.07798368, 0.07026252, 0.04616148, 0.52404589, 0.00871388,\n       0.00777631, 0.01147143, 0.01180234, 0.02283256, 0.03634458,\n       0.01577322, 0.02950585, 0.0101478 , 0.09022722, 0.14284139,\n       0.01125083, 0.0917163 , 0.00805206, 0.00209574, 0.22887712,\n       0.00595632, 0.03502096, 0.00821752, 0.06072138, 0.09728657,\n       0.0150011 , 0.15938672, 0.01400838, 0.01047871, 0.02228105,\n       0.00849327, 0.03904699, 0.02128833, 0.02514891, 0.05118023,\n       0.14399956, 0.06243106, 0.07842488, 0.05757776, 0.01119568,\n       0.01268476, 0.03926759, 0.03617913, 0.00330907, 0.11096404,\n       0.0196338 , 0.12618575, 0.08879329, 0.02283256, 0.01913744,\n       0.01080962, 0.01742775, 0.01560777, 0.02889918, 0.10225017,\n       0.01069932, 0.01764836, 0.0100375 , 0.01257445, 0.04086698,\n       0.02614163, 0.01185749, 0.03105008, 0.39383411, 0.02079197,\n       0.04290757, 0.04500331, 0.0223362 , 0.00959629, 0.0075557 ,\n       0.00937569, 0.01185749, 0.00772116, 0.00534966, 0.00750055,\n       0.00739025, 0.00976175, 0.004743  , 0.01455989, 0.01191264,\n       0.04059122, 0.01169204, 0.00490845, 0.01125083, 0.007666  ,\n       0.05834988, 0.05162144, 0.07715641, 0.0245974 , 0.00827267,\n       0.00595632, 0.08509817, 0.01753805, 0.20257004, 0.03353188,\n       0.0445621 , 0.00419148, 0.01952349, 0.03827487, 0.02950585,\n       0.00843812, 0.01742775, 0.00871388, 0.15927642, 0.1088683 ,\n       0.00816236, 0.01687624, 0.00739025, 0.0098169 , 0.00716964,\n       0.0347452 ])</code></pre>\n<div class=\"sourceCode\" id=\"cb182\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb182-1\"><a href=\"#cb182-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>rating_diff <span class=\"op\">=</span> (user_item_matrix <span class=\"op\">-</span> mean_user_rating[:,np.newaxis])   <span class=\"co\"># np.newaxis作用：为mean_user_rating增加一个维度，实现加减操作</span></span>\n<span id=\"cb182-2\"><a href=\"#cb182-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>rating_diff</span></code></pre></div>\n<pre><code>array([[-2.97816016e-03,  2.99702184e+00,  2.99702184e+00, ...,\n        -2.97816016e-03, -2.97816016e-03, -2.97816016e-03],\n       [-1.98544011e-02, -1.98544011e-02, -1.98544011e-02, ...,\n        -1.98544011e-02, -1.98544011e-02, -1.98544011e-02],\n       [-1.30156629e-02, -1.30156629e-02, -1.30156629e-02, ...,\n        -1.30156629e-02, -1.30156629e-02, -1.30156629e-02],\n       ...,\n       [-9.81689830e-03, -9.81689830e-03, -9.81689830e-03, ...,\n        -9.81689830e-03, -9.81689830e-03, -9.81689830e-03],\n       [-7.16964483e-03, -7.16964483e-03, -7.16964483e-03, ...,\n        -7.16964483e-03, -7.16964483e-03, -7.16964483e-03],\n       [-3.47452019e-02, -3.47452019e-02, -3.47452019e-02, ...,\n        -3.47452019e-02, -3.47452019e-02, -3.47452019e-02]])</code></pre>\n<div class=\"sourceCode\" id=\"cb184\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb184-1\"><a href=\"#cb184-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_prediction <span class=\"op\">=</span> mean_user_rating[:,np.newaxis] <span class=\"op\">+</span> user_similarity_m.dot(rating_diff) <span class=\"op\">/</span> np.array([np.<span class=\"bu\">abs</span>(user_similarity_m).<span class=\"bu\">sum</span>(axis<span class=\"op\">=</span><span class=\"dv\">1</span>)]).T</span>\n<span id=\"cb184-2\"><a href=\"#cb184-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 处以np.array([np.abs(item_similarity_m).sum(axis=1)]是为了可以使评分在1~5之间，使1~5的标准化</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb185\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb185-1\"><a href=\"#cb185-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_prediction</span></code></pre></div>\n<pre><code>array([[ 8.48587738e-02,  1.11549860e-01,  7.78496257e-02, ...,\n        -3.30873704e-02, -3.59785123e-02, -3.59132569e-02],\n       [ 9.36489784e-02,  1.35396758e-01,  1.04357090e-01, ...,\n        -1.62815182e-02, -1.93136443e-02, -1.93247190e-02],\n       [ 9.44428457e-02,  1.33314515e-01,  9.83052575e-02, ...,\n        -2.28228892e-02, -2.58037344e-02, -2.59258365e-02],\n       ...,\n       [ 9.29750987e-02,  1.27902780e-01,  9.32275326e-02, ...,\n        -2.60694824e-02, -2.89101875e-02, -2.87905826e-02],\n       [ 8.62056229e-02,  1.26697599e-01,  9.17810994e-02, ...,\n        -2.88942031e-02, -3.19119828e-02, -3.20590645e-02],\n       [ 1.17342284e-01,  1.50739909e-01,  1.17908253e-01, ...,\n        -7.69495365e-05, -2.99819315e-03, -3.02101562e-03]])</code></pre>\n<div class=\"sourceCode\" id=\"cb187\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb187-1\"><a href=\"#cb187-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 只取数据集中有评分的数据集进行评估</span></span>\n<span id=\"cb187-2\"><a href=\"#cb187-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> sklearn.metrics <span class=\"im\">import</span> mean_squared_error</span>\n<span id=\"cb187-3\"><a href=\"#cb187-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> math <span class=\"im\">import</span> sqrt</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb188\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb188-1\"><a href=\"#cb188-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>prediction_flatten <span class=\"op\">=</span> user_prediction[user_item_matrix.nonzero()]</span>\n<span id=\"cb188-2\"><a href=\"#cb188-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>prediction_flatten</span></code></pre></div>\n<pre><code>array([0.11154986, 0.07784963, 0.14877094, ..., 0.04236321, 0.01114962,\n       0.02448394])</code></pre>\n<div class=\"sourceCode\" id=\"cb190\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb190-1\"><a href=\"#cb190-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_item_matrix_flatten <span class=\"op\">=</span> user_item_matrix[user_item_matrix.nonzero()]</span>\n<span id=\"cb190-2\"><a href=\"#cb190-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_item_matrix_flatten</span></code></pre></div>\n<pre><code>array([3., 3., 2., ..., 4., 4., 4.])</code></pre>\n<div class=\"sourceCode\" id=\"cb192\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb192-1\"><a href=\"#cb192-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>error_test <span class=\"op\">=</span> sqrt(mean_squared_error(prediction_flatten,user_item_matrix_flatten)) <span class=\"co\"># 均方根误差计算</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb193\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb193-1\"><a href=\"#cb193-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>error_test</span></code></pre></div>\n<pre><code>3.390138302832629</code></pre>\n<hr>\n<h3 id=\"about-me\">About ME</h3>\n<h5 id=\"读书城南-在未来面前我们都是孩子\">👋 读书城南，🤔\n在未来面前，我们都是孩子～</h5>\n<ul>\n<li>📙\n一个热衷于探索学习新方向、新事物的智能产品经理，闲暇时间喜欢coding💻、画图🎨、音乐🎵、学习ing~</li>\n</ul>\n<h5 id=\"social-media\">👋 Social Media</h5>\n<ul>\n<li><p>🛠️ Blog: <a href=\"http://oceaneyes.top\">http://oceaneyes.top</a></p></li>\n<li><p>⚡ PM导航: <a href=\"https://pmhub.oceangzy.top\">https://pmhub.oceangzy.top</a></p></li>\n<li><p>☘️ CNBLOG: <a href=\"https://www.cnblogs.com/oceaneyes-gzy/\">https://www.cnblogs.com/oceaneyes-gzy/</a></p></li>\n<li><p>🌱 AI PRJ自己部署的一些算法demo: <a href=\"http://ai.oceangzy.top/\">http://ai.oceangzy.top/</a></p></li>\n<li><p>📫 Email: 1450136519@qq.com</p></li>\n<li><p>💬 WeChat: <a href=\"https://oceaneyes.top/img/wechatqrcode.jpg\">OCEANGZY</a></p></li>\n<li><p>💬 公众号: <a href=\"https://oceaneyes.top/img/wechatgzh.jpeg\">UncleJoker-GZY</a></p></li>\n</ul>\n<h5 id=\"加入小组\">👋 加入小组~</h5>\n<p><img src=\"https://oceaneyes.top/img/zhishigroup.jpg\" title=\"加入组织\" alt width=\"240\"></p>\n<h5 id=\"感谢打赏\">👋 感谢打赏~</h5>\n<p><img src=\"https://oceaneyes.top/img/alipay.jpg\" title=\"支付宝打赏\" alt width=\"140\">\n<img src=\"https://oceaneyes.top/img/wechatpay.jpg\" title=\"微信打赏\" alt width=\"140\"></p>\n","more":"<h3 id=\"基于关联规则算法实现电影推荐系统\">基于关联规则算法实现电影推荐系统</h3>\n<figure>\n<img src=\"/.top//attachment:8bf77266-511e-4e87-bcf0-a2b5340a7f20.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure>\n<ul>\n<li>利用数据挖掘算法中的Apriori(关联规则)算法来实现一个电影推荐系统\n<ul>\n<li>加载数据</li>\n<li>数据预处理</li>\n<li>生成频繁项集、关联规则</li>\n</ul></li>\n<li>通过关联规则生成电影推荐的列表</li>\n</ul>\n<h3 id=\"apriori算法\">Apriori算法</h3>\n<ul>\n<li><p><strong>案例：</strong> 啤酒与尿布:\n沃尔玛超市在分析销售记录时，发现了啤酒与尿布经常一起被购买，于是他们调整了货架将两者放在了一起，结果真的提升了啤酒的销量。\n原因解释: 爸爸在给宝宝买尿布的时候，会顺便给自己买点啤酒？</p></li>\n<li><p><strong>概述：</strong>\nApriori算法是一种最有影响力的挖掘布尔关联规则的频繁项集的算法，其命名Apriori源于算法使用了频繁项集性质的先验(Prior)知识。\n接下来我们将以超市订单的例子理解关联分析相关的重要概念:\nSupport(支持度)、Confidence(置信度)、Lift(提升度）。</p>\n<figure>\n<img src=\"/.top//attachment:e0663e25-d0d7-4ee0-a2db-857a92930475.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure>\n<ul>\n<li>Support(支持度)：指某事件出现的概率，在本例中即指某个商品组合出现的次数占总次数的比例。</li>\n</ul>\n<p>例：Support('Bread') = 4/5 = 0.8 Support('Milk') = 4/5 = 0.8\nSupport('Bread+Milk') = 3/5 = 0.6</p>\n<ul>\n<li>Confidence(置信度)：本质上是个条件概率，即当购买了商品A的前提下，购买商品B的概率。</li>\n</ul>\n<p>例：Confidence('Bread'—&gt; 'Milk') = Support('Bread+Milk')/\nSupport('Bread') = 0.6/0.8 = 0.75</p>\n<ul>\n<li>Lift(提升度）:\n指商品A的出现，对商品B的出现的概率的提升程度。Lift(A-&gt;B) =\nConfidence(A, B) / Support(B)</li>\n</ul>\n<p>例：Lift('Bread'—&gt; 'Milk') = 0.75/0.8 = 0.9375</p></li>\n<li><p><strong>对于Lift(提升度）有三种情况：</strong></p>\n<ul>\n<li>Lift(A-&gt;B)&gt;1: 代表A对B的出现概率有提升。</li>\n<li>Lift(A-&gt;B)=1: 代表A对B的出现概率没有提升，也没有下降。</li>\n<li>Lift(A-&gt;B)&lt;1: 代表A对B的出现概率有下降效果。</li>\n</ul></li>\n<li><p><strong>原理：</strong>\n该算法挖掘关联规则的过程，即是查找频繁项集(frequent itemset)的过程:</p>\n<ul>\n<li>频繁项集：支持度大于等于最小支持度(Min Support)阈值的项集。</li>\n<li>非频繁集：支持度小于最小支持度的项集。</li>\n</ul></li>\n<li><p><strong>流程：</strong> K = 1, 计算K项集的支持度；\n筛选掉小于最小支持度的项集；\n如果项集为空，则对应K-1项集的结果为最终结果。否则K =\nK+1重复2-3步</p></li>\n</ul>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> pandas <span class=\"im\">as</span> pd</span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> matplotlib.pyplot <span class=\"im\">as</span> plt</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> mlxtend</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">import</span> numpy <span class=\"im\">as</span> np</span></code></pre></div>\n<h4 id=\"电影数据准备\">电影数据准备</h4>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_file <span class=\"op\">=</span> <span class=\"st\">&#39;./movie_dataset/movies_metadata.csv&#39;</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_file <span class=\"op\">=</span> <span class=\"st\">&#39;./movie_dataset/ratings_small.csv&#39;</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb3\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df <span class=\"op\">=</span> pd.read_csv(movie_data_file)</span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df <span class=\"op\">=</span> pd.read_csv(ratings_file)</span></code></pre></div>\n<pre><code>c:\\users\\ysilhouette\\documents\\pyenv\\py3.6.5\\lib\\site-packages\\IPython\\core\\interactiveshell.py:3072: DtypeWarning: Columns (10) have mixed types.Specify dtype option on import or set low_memory=False.\n  interactivity=interactivity, compiler=compiler, result=result)</code></pre>\n<div class=\"sourceCode\" id=\"cb5\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df.head(<span class=\"dv\">5</span>)</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nadult\n</th>\n<th>\nbelongs_to_collection\n</th>\n<th>\nbudget\n</th>\n<th>\ngenres\n</th>\n<th>\nhomepage\n</th>\n<th>\nid\n</th>\n<th>\nimdb_id\n</th>\n<th>\noriginal_language\n</th>\n<th>\noriginal_title\n</th>\n<th>\noverview\n</th>\n<th>\n...\n</th>\n<th>\nrelease_date\n</th>\n<th>\nrevenue\n</th>\n<th>\nruntime\n</th>\n<th>\nspoken_languages\n</th>\n<th>\nstatus\n</th>\n<th>\ntagline\n</th>\n<th>\ntitle\n</th>\n<th>\nvideo\n</th>\n<th>\nvote_average\n</th>\n<th>\nvote_count\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\nFalse\n</td>\n<td>\n{'id': 10194, 'name': 'Toy Story Collection', ...\n</td>\n<td>\n30000000\n</td>\n<td>\n[{'id': 16, 'name': 'Animation'}, {'id': 35, '...\n</td>\n<td>\nhttp://toystory.disney.com/toy-story\n</td>\n<td>\n862\n</td>\n<td>\ntt0114709\n</td>\n<td>\nen\n</td>\n<td>\nToy Story\n</td>\n<td>\nLed by Woody, Andy's toys live happily in his ...\n</td>\n<td>\n...\n</td>\n<td>\n1995-10-30\n</td>\n<td>\n373554033.0\n</td>\n<td>\n81.0\n</td>\n<td>\n[{'iso_639_1': 'en', 'name': 'English'}]\n</td>\n<td>\nReleased\n</td>\n<td>\nNaN\n</td>\n<td>\nToy Story\n</td>\n<td>\nFalse\n</td>\n<td>\n7.7\n</td>\n<td>\n5415.0\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\nFalse\n</td>\n<td>\nNaN\n</td>\n<td>\n65000000\n</td>\n<td>\n[{'id': 12, 'name': 'Adventure'}, {'id': 14, '...\n</td>\n<td>\nNaN\n</td>\n<td>\n8844\n</td>\n<td>\ntt0113497\n</td>\n<td>\nen\n</td>\n<td>\nJumanji\n</td>\n<td>\nWhen siblings Judy and Peter discover an encha...\n</td>\n<td>\n...\n</td>\n<td>\n1995-12-15\n</td>\n<td>\n262797249.0\n</td>\n<td>\n104.0\n</td>\n<td>\n[{'iso_639_1': 'en', 'name': 'English'}, {'iso...\n</td>\n<td>\nReleased\n</td>\n<td>\nRoll the dice and unleash the excitement!\n</td>\n<td>\nJumanji\n</td>\n<td>\nFalse\n</td>\n<td>\n6.9\n</td>\n<td>\n2413.0\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\nFalse\n</td>\n<td>\n{'id': 119050, 'name': 'Grumpy Old Men Collect...\n</td>\n<td>\n0\n</td>\n<td>\n[{'id': 10749, 'name': 'Romance'}, {'id': 35, ...\n</td>\n<td>\nNaN\n</td>\n<td>\n15602\n</td>\n<td>\ntt0113228\n</td>\n<td>\nen\n</td>\n<td>\nGrumpier Old Men\n</td>\n<td>\nA family wedding reignites the ancient feud be...\n</td>\n<td>\n...\n</td>\n<td>\n1995-12-22\n</td>\n<td>\n0.0\n</td>\n<td>\n101.0\n</td>\n<td>\n[{'iso_639_1': 'en', 'name': 'English'}]\n</td>\n<td>\nReleased\n</td>\n<td>\nStill Yelling. Still Fighting. Still Ready for...\n</td>\n<td>\nGrumpier Old Men\n</td>\n<td>\nFalse\n</td>\n<td>\n6.5\n</td>\n<td>\n92.0\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\nFalse\n</td>\n<td>\nNaN\n</td>\n<td>\n16000000\n</td>\n<td>\n[{'id': 35, 'name': 'Comedy'}, {'id': 18, 'nam...\n</td>\n<td>\nNaN\n</td>\n<td>\n31357\n</td>\n<td>\ntt0114885\n</td>\n<td>\nen\n</td>\n<td>\nWaiting to Exhale\n</td>\n<td>\nCheated on, mistreated and stepped on, the wom...\n</td>\n<td>\n...\n</td>\n<td>\n1995-12-22\n</td>\n<td>\n81452156.0\n</td>\n<td>\n127.0\n</td>\n<td>\n[{'iso_639_1': 'en', 'name': 'English'}]\n</td>\n<td>\nReleased\n</td>\n<td>\nFriends are the people who let you be yourself...\n</td>\n<td>\nWaiting to Exhale\n</td>\n<td>\nFalse\n</td>\n<td>\n6.1\n</td>\n<td>\n34.0\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\nFalse\n</td>\n<td>\n{'id': 96871, 'name': 'Father of the Bride Col...\n</td>\n<td>\n0\n</td>\n<td>\n[{'id': 35, 'name': 'Comedy'}]\n</td>\n<td>\nNaN\n</td>\n<td>\n11862\n</td>\n<td>\ntt0113041\n</td>\n<td>\nen\n</td>\n<td>\nFather of the Bride Part II\n</td>\n<td>\nJust when George Banks has recovered from his ...\n</td>\n<td>\n...\n</td>\n<td>\n1995-02-10\n</td>\n<td>\n76578911.0\n</td>\n<td>\n106.0\n</td>\n<td>\n[{'iso_639_1': 'en', 'name': 'English'}]\n</td>\n<td>\nReleased\n</td>\n<td>\nJust When His World Is Back To Normal... He's ...\n</td>\n<td>\nFather of the Bride Part II\n</td>\n<td>\nFalse\n</td>\n<td>\n5.7\n</td>\n<td>\n173.0\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n5 rows × 24 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb6\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df.describe()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nrevenue\n</th>\n<th>\nruntime\n</th>\n<th>\nvote_average\n</th>\n<th>\nvote_count\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\ncount\n</th>\n<td>\n4.546000e+04\n</td>\n<td>\n45203.000000\n</td>\n<td>\n45460.000000\n</td>\n<td>\n45460.000000\n</td>\n</tr>\n<tr>\n<th>\nmean\n</th>\n<td>\n1.120935e+07\n</td>\n<td>\n94.128199\n</td>\n<td>\n5.618207\n</td>\n<td>\n109.897338\n</td>\n</tr>\n<tr>\n<th>\nstd\n</th>\n<td>\n6.433225e+07\n</td>\n<td>\n38.407810\n</td>\n<td>\n1.924216\n</td>\n<td>\n491.310374\n</td>\n</tr>\n<tr>\n<th>\nmin\n</th>\n<td>\n0.000000e+00\n</td>\n<td>\n0.000000\n</td>\n<td>\n0.000000\n</td>\n<td>\n0.000000\n</td>\n</tr>\n<tr>\n<th>\n25%\n</th>\n<td>\n0.000000e+00\n</td>\n<td>\n85.000000\n</td>\n<td>\n5.000000\n</td>\n<td>\n3.000000\n</td>\n</tr>\n<tr>\n<th>\n50%\n</th>\n<td>\n0.000000e+00\n</td>\n<td>\n95.000000\n</td>\n<td>\n6.000000\n</td>\n<td>\n10.000000\n</td>\n</tr>\n<tr>\n<th>\n75%\n</th>\n<td>\n0.000000e+00\n</td>\n<td>\n107.000000\n</td>\n<td>\n6.800000\n</td>\n<td>\n34.000000\n</td>\n</tr>\n<tr>\n<th>\nmax\n</th>\n<td>\n2.787965e+09\n</td>\n<td>\n1256.000000\n</td>\n<td>\n10.000000\n</td>\n<td>\n14075.000000\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb7\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb7-1\"><a href=\"#cb7-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df.info</span></code></pre></div>\n<pre><code>&lt;bound method DataFrame.info of        adult                              belongs_to_collection    budget  \\\n0      False  &#123;&#39;id&#39;: 10194, &#39;name&#39;: &#39;Toy Story Collection&#39;, ...  30000000   \n1      False                                                NaN  65000000   \n2      False  &#123;&#39;id&#39;: 119050, &#39;name&#39;: &#39;Grumpy Old Men Collect...         0   \n3      False                                                NaN  16000000   \n4      False  &#123;&#39;id&#39;: 96871, &#39;name&#39;: &#39;Father of the Bride Col...         0   \n...      ...                                                ...       ...   \n45461  False                                                NaN         0   \n45462  False                                                NaN         0   \n45463  False                                                NaN         0   \n45464  False                                                NaN         0   \n45465  False                                                NaN         0   \n\n                                                  genres  \\\n0      [&#123;&#39;id&#39;: 16, &#39;name&#39;: &#39;Animation&#39;&#125;, &#123;&#39;id&#39;: 35, &#39;...   \n1      [&#123;&#39;id&#39;: 12, &#39;name&#39;: &#39;Adventure&#39;&#125;, &#123;&#39;id&#39;: 14, &#39;...   \n2      [&#123;&#39;id&#39;: 10749, &#39;name&#39;: &#39;Romance&#39;&#125;, &#123;&#39;id&#39;: 35, ...   \n3      [&#123;&#39;id&#39;: 35, &#39;name&#39;: &#39;Comedy&#39;&#125;, &#123;&#39;id&#39;: 18, &#39;nam...   \n4                         [&#123;&#39;id&#39;: 35, &#39;name&#39;: &#39;Comedy&#39;&#125;]   \n...                                                  ...   \n45461  [&#123;&#39;id&#39;: 18, &#39;name&#39;: &#39;Drama&#39;&#125;, &#123;&#39;id&#39;: 10751, &#39;n...   \n45462                      [&#123;&#39;id&#39;: 18, &#39;name&#39;: &#39;Drama&#39;&#125;]   \n45463  [&#123;&#39;id&#39;: 28, &#39;name&#39;: &#39;Action&#39;&#125;, &#123;&#39;id&#39;: 18, &#39;nam...   \n45464                                                 []   \n45465                                                 []   \n\n                                   homepage      id    imdb_id  \\\n0      http://toystory.disney.com/toy-story     862  tt0114709   \n1                                       NaN    8844  tt0113497   \n2                                       NaN   15602  tt0113228   \n3                                       NaN   31357  tt0114885   \n4                                       NaN   11862  tt0113041   \n...                                     ...     ...        ...   \n45461  http://www.imdb.com/title/tt6209470/  439050  tt6209470   \n45462                                   NaN  111109  tt2028550   \n45463                                   NaN   67758  tt0303758   \n45464                                   NaN  227506  tt0008536   \n45465                                   NaN  461257  tt6980792   \n\n      original_language               original_title  \\\n0                    en                    Toy Story   \n1                    en                      Jumanji   \n2                    en             Grumpier Old Men   \n3                    en            Waiting to Exhale   \n4                    en  Father of the Bride Part II   \n...                 ...                          ...   \n45461                fa                      رگ خواب   \n45462                tl          Siglo ng Pagluluwal   \n45463                en                     Betrayal   \n45464                en          Satana likuyushchiy   \n45465                en                     Queerama   \n\n                                                overview  ... release_date  \\\n0      Led by Woody, Andy&#39;s toys live happily in his ...  ...   1995-10-30   \n1      When siblings Judy and Peter discover an encha...  ...   1995-12-15   \n2      A family wedding reignites the ancient feud be...  ...   1995-12-22   \n3      Cheated on, mistreated and stepped on, the wom...  ...   1995-12-22   \n4      Just when George Banks has recovered from his ...  ...   1995-02-10   \n...                                                  ...  ...          ...   \n45461        Rising and falling between a man and woman.  ...          NaN   \n45462  An artist struggles to finish his work while a...  ...   2011-11-17   \n45463  When one of her hits goes wrong, a professiona...  ...   2003-08-01   \n45464  In a small town live two brothers, one a minis...  ...   1917-10-21   \n45465  50 years after decriminalisation of homosexual...  ...   2017-06-09   \n\n           revenue runtime                                   spoken_languages  \\\n0      373554033.0    81.0           [&#123;&#39;iso_639_1&#39;: &#39;en&#39;, &#39;name&#39;: &#39;English&#39;&#125;]   \n1      262797249.0   104.0  [&#123;&#39;iso_639_1&#39;: &#39;en&#39;, &#39;name&#39;: &#39;English&#39;&#125;, &#123;&#39;iso...   \n2              0.0   101.0           [&#123;&#39;iso_639_1&#39;: &#39;en&#39;, &#39;name&#39;: &#39;English&#39;&#125;]   \n3       81452156.0   127.0           [&#123;&#39;iso_639_1&#39;: &#39;en&#39;, &#39;name&#39;: &#39;English&#39;&#125;]   \n4       76578911.0   106.0           [&#123;&#39;iso_639_1&#39;: &#39;en&#39;, &#39;name&#39;: &#39;English&#39;&#125;]   \n...            ...     ...                                                ...   \n45461          0.0    90.0             [&#123;&#39;iso_639_1&#39;: &#39;fa&#39;, &#39;name&#39;: &#39;فارسی&#39;&#125;]   \n45462          0.0   360.0                  [&#123;&#39;iso_639_1&#39;: &#39;tl&#39;, &#39;name&#39;: &#39;&#39;&#125;]   \n45463          0.0    90.0           [&#123;&#39;iso_639_1&#39;: &#39;en&#39;, &#39;name&#39;: &#39;English&#39;&#125;]   \n45464          0.0    87.0                                                 []   \n45465          0.0    75.0           [&#123;&#39;iso_639_1&#39;: &#39;en&#39;, &#39;name&#39;: &#39;English&#39;&#125;]   \n\n         status                                            tagline  \\\n0      Released                                                NaN   \n1      Released          Roll the dice and unleash the excitement!   \n2      Released  Still Yelling. Still Fighting. Still Ready for...   \n3      Released  Friends are the people who let you be yourself...   \n4      Released  Just When His World Is Back To Normal... He&#39;s ...   \n...         ...                                                ...   \n45461  Released         Rising and falling between a man and woman   \n45462  Released                                                NaN   \n45463  Released                             A deadly game of wits.   \n45464  Released                                                NaN   \n45465  Released                                                NaN   \n\n                             title  video vote_average vote_count  \n0                        Toy Story  False          7.7     5415.0  \n1                          Jumanji  False          6.9     2413.0  \n2                 Grumpier Old Men  False          6.5       92.0  \n3                Waiting to Exhale  False          6.1       34.0  \n4      Father of the Bride Part II  False          5.7      173.0  \n...                            ...    ...          ...        ...  \n45461                       Subdue  False          4.0        1.0  \n45462          Century of Birthing  False          9.0        3.0  \n45463                     Betrayal  False          3.8        6.0  \n45464             Satan Triumphant  False          0.0        0.0  \n45465                     Queerama  False          0.0        0.0  \n\n[45466 rows x 24 columns]&gt;</code></pre>\n<div class=\"sourceCode\" id=\"cb9\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb9-1\"><a href=\"#cb9-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df.count()</span></code></pre></div>\n<pre><code>adult                    45466\nbelongs_to_collection     4494\nbudget                   45466\ngenres                   45466\nhomepage                  7782\nid                       45466\nimdb_id                  45449\noriginal_language        45455\noriginal_title           45466\noverview                 44512\npopularity               45461\nposter_path              45080\nproduction_companies     45463\nproduction_countries     45463\nrelease_date             45379\nrevenue                  45460\nruntime                  45203\nspoken_languages         45460\nstatus                   45379\ntagline                  20412\ntitle                    45460\nvideo                    45460\nvote_average             45460\nvote_count               45460\ndtype: int64</code></pre>\n<div class=\"sourceCode\" id=\"cb11\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb11-1\"><a href=\"#cb11-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df.columns</span></code></pre></div>\n<pre><code>Index([&#39;adult&#39;, &#39;belongs_to_collection&#39;, &#39;budget&#39;, &#39;genres&#39;, &#39;homepage&#39;, &#39;id&#39;,\n       &#39;imdb_id&#39;, &#39;original_language&#39;, &#39;original_title&#39;, &#39;overview&#39;,\n       &#39;popularity&#39;, &#39;poster_path&#39;, &#39;production_companies&#39;,\n       &#39;production_countries&#39;, &#39;release_date&#39;, &#39;revenue&#39;, &#39;runtime&#39;,\n       &#39;spoken_languages&#39;, &#39;status&#39;, &#39;tagline&#39;, &#39;title&#39;, &#39;video&#39;,\n       &#39;vote_average&#39;, &#39;vote_count&#39;],\n      dtype=&#39;object&#39;)</code></pre>\n<div class=\"sourceCode\" id=\"cb13\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb13-1\"><a href=\"#cb13-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df.head(<span class=\"dv\">5</span>)</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntimestamp\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n31\n</td>\n<td>\n2.5\n</td>\n<td>\n1260759144\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n1\n</td>\n<td>\n1029\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759179\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n1\n</td>\n<td>\n1061\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759182\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n1\n</td>\n<td>\n1129\n</td>\n<td>\n2.0\n</td>\n<td>\n1260759185\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n1\n</td>\n<td>\n1172\n</td>\n<td>\n4.0\n</td>\n<td>\n1260759205\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb14\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb14-1\"><a href=\"#cb14-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df.columns</span></code></pre></div>\n<pre><code>Index([&#39;userId&#39;, &#39;movieId&#39;, &#39;rating&#39;, &#39;timestamp&#39;], dtype=&#39;object&#39;)</code></pre>\n<div class=\"sourceCode\" id=\"cb16\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb16-1\"><a href=\"#cb16-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df.count()</span></code></pre></div>\n<pre><code>userId       100004\nmovieId      100004\nrating       100004\ntimestamp    100004\ndtype: int64</code></pre>\n<div class=\"sourceCode\" id=\"cb18\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb18-1\"><a href=\"#cb18-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df.shape</span></code></pre></div>\n<pre><code>(100004, 4)</code></pre>\n<div class=\"sourceCode\" id=\"cb20\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb20-1\"><a href=\"#cb20-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df.shape</span></code></pre></div>\n<pre><code>(45466, 24)</code></pre>\n<h4 id=\"数据预处理\">数据预处理</h4>\n<ul>\n<li>缺失值处理</li>\n<li>数据去重</li>\n<li>电影源信息 merge 电影评分信息</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb22\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb22-1\"><a href=\"#cb22-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t<span class=\"op\">=</span>movie_data_df[[<span class=\"st\">&#39;title&#39;</span>,<span class=\"st\">&#39;id&#39;</span>]]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb23\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb23-1\"><a href=\"#cb23-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.dtypes</span></code></pre></div>\n<pre><code>title    object\nid       object\ndtype: object</code></pre>\n<div class=\"sourceCode\" id=\"cb25\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb25-1\"><a href=\"#cb25-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s <span class=\"op\">=</span> ratings_df.drop([<span class=\"st\">&#39;timestamp&#39;</span>], axis<span class=\"op\">=</span><span class=\"dv\">1</span>)  <span class=\"co\">#axis=0 跨列删除行 ，axis=1 跨行删除列</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb26\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb26-1\"><a href=\"#cb26-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.dtypes</span></code></pre></div>\n<pre><code>userId       int64\nmovieId      int64\nrating     float64\ndtype: object</code></pre>\n<h5 id=\"缺失值处理\">缺失值处理</h5>\n<ul>\n<li>pandas中用NaN(Not a\nNumber)表示浮点数和非浮点数数组中的缺失值，同时python中None值也被当作缺失值。</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb28\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb28-1\"><a href=\"#cb28-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># pd.to_numeric 将id列 的数据 由字符串转为数值类型， 不能转换的数据设置为NaN</span></span>\n<span id=\"cb28-2\"><a href=\"#cb28-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>pd.to_numeric(movie_data_df_t[<span class=\"st\">&#39;id&#39;</span>],errors<span class=\"op\">=</span><span class=\"st\">&#39;coerce&#39;</span>)</span></code></pre></div>\n<pre><code>0           862.0\n1          8844.0\n2         15602.0\n3         31357.0\n4         11862.0\n           ...   \n45461    439050.0\n45462    111109.0\n45463     67758.0\n45464    227506.0\n45465    461257.0\nName: id, Length: 45466, dtype: float64</code></pre>\n<div class=\"sourceCode\" id=\"cb30\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb30-1\"><a href=\"#cb30-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#np.where返回满足（）内条件的数据所在的位置</span></span>\n<span id=\"cb30-2\"><a href=\"#cb30-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>np.where(pd.to_numeric(movie_data_df_t[<span class=\"st\">&#39;id&#39;</span>], errors<span class=\"op\">=</span><span class=\"st\">&#39;coerce&#39;</span>).isna()) <span class=\"co\">#返回缺失值的位置，其中isna() 对于NaN返回True，否则返回False</span></span></code></pre></div>\n<pre><code>(array([19730, 29503, 35587], dtype=int64),)</code></pre>\n<ul>\n<li><strong>loc works on labels in the index.</strong>\n<ul>\n<li>loc为Selection by\nLabel函数，即为按标签取数据，标签是什么，就是上面的’0’~‘4’,\n‘A’~‘B’。</li>\n<li>例如第一个参数选择index，第二个参数选择column</li>\n<li><figure>\n<img src=\"/.top//attachment:32ceb63e-c986-499e-93f8-638b54d1359c.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure></li>\n<li>建议写df.loc[0,\n:]，这样可以清楚的看出为第0行的所有记录，同样如果取第’A’列的所有记录，可以写df.loc[:,\n‘A’]，如下图：</li>\n<li><figure>\n<img src=\"/.top//attachment:6fdd7eed-bc5c-4fa4-8c63-9072c99b5340.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure></li>\n<li>:表示所有，[]里边为先行后列</li>\n</ul></li>\n<li><strong>iloc works on the positions in the index (so it only takes\nintegers).</strong>\n<ul>\n<li>iloc函数为Selection by\nPosition，即按位置选择数据，即第n行，第n列数据，只接受整型参数, 比如\n0:2为左闭右开区间，即取0，1</li>\n<li><figure>\n<img src=\"/.top//attachment:328215b9-7799-4763-b611-8b27a8340c20.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure></li>\n<li>若要取第一列的所有数据，则为df.iloc[:, 0]，不接受’A’作为参数</li>\n<li><figure>\n<img src=\"/.top//attachment:3881dff3-57bd-45dd-a549-56af16b42ec5.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure></li>\n</ul></li>\n</ul>\n<div class=\"sourceCode\" id=\"cb32\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb32-1\"><a href=\"#cb32-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.iloc[<span class=\"dv\">19730</span>]</span></code></pre></div>\n<pre><code>title           NaN\nid       1997-08-20\nName: 19730, dtype: object</code></pre>\n<div class=\"sourceCode\" id=\"cb34\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb34-1\"><a href=\"#cb34-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.iloc[[<span class=\"dv\">19730</span>,<span class=\"dv\">29503</span>,<span class=\"dv\">35587</span>]]</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\ntitle\n</th>\n<th>\nid\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n19730\n</th>\n<td>\nNaN\n</td>\n<td>\n1997-08-20\n</td>\n</tr>\n<tr>\n<th>\n29503\n</th>\n<td>\nNaN\n</td>\n<td>\n2012-09-29\n</td>\n</tr>\n<tr>\n<th>\n35587\n</th>\n<td>\nNaN\n</td>\n<td>\n2014-01-01\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb35\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb35-1\"><a href=\"#cb35-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 将格式转换后的数据 赋值给id列</span></span>\n<span id=\"cb35-2\"><a href=\"#cb35-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t[<span class=\"st\">&#39;id&#39;</span>] <span class=\"op\">=</span> pd.to_numeric(movie_data_df_t[<span class=\"st\">&#39;id&#39;</span>], errors<span class=\"op\">=</span><span class=\"st\">&#39;coerce&#39;</span>)</span></code></pre></div>\n<pre><code>c:\\users\\ysilhouette\\documents\\pyenv\\py3.6.5\\lib\\site-packages\\ipykernel_launcher.py:2: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy</code></pre>\n<p>​</p>\n<div class=\"sourceCode\" id=\"cb37\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb37-1\"><a href=\"#cb37-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.info()</span></code></pre></div>\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 45466 entries, 0 to 45465\nData columns (total 2 columns):\n #   Column  Non-Null Count  Dtype  \n---  ------  --------------  -----  \n 0   title   45460 non-null  object \n 1   id      45463 non-null  float64\ndtypes: float64(1), object(1)\nmemory usage: 710.5+ KB</code></pre>\n<div class=\"sourceCode\" id=\"cb39\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb39-1\"><a href=\"#cb39-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.iloc[[<span class=\"dv\">19730</span>,<span class=\"dv\">29503</span>,<span class=\"dv\">35587</span>]]</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\ntitle\n</th>\n<th>\nid\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n19730\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n29503\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n35587\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb40\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb40-1\"><a href=\"#cb40-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.shape</span></code></pre></div>\n<pre><code>(45466, 2)</code></pre>\n<div class=\"sourceCode\" id=\"cb42\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb42-1\"><a href=\"#cb42-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.drop(np.where(movie_data_df_t[<span class=\"st\">&#39;id&#39;</span>].isna())[<span class=\"dv\">0</span>], inplace<span class=\"op\">=</span><span class=\"va\">True</span>)</span></code></pre></div>\n<pre><code>c:\\users\\ysilhouette\\documents\\pyenv\\py3.6.5\\lib\\site-packages\\pandas\\core\\frame.py:4174: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  errors=errors,</code></pre>\n<div class=\"sourceCode\" id=\"cb44\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb44-1\"><a href=\"#cb44-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.shape</span></code></pre></div>\n<pre><code>(45463, 2)</code></pre>\n<h5 id=\"数据去重\">数据去重</h5>\n<div class=\"sourceCode\" id=\"cb46\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb46-1\"><a href=\"#cb46-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.duplicated([<span class=\"st\">&#39;id&#39;</span>,<span class=\"st\">&#39;title&#39;</span>]).<span class=\"bu\">sum</span>()</span></code></pre></div>\n<pre><code>30</code></pre>\n<div class=\"sourceCode\" id=\"cb48\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb48-1\"><a href=\"#cb48-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.drop_duplicates([<span class=\"st\">&#39;id&#39;</span>],inplace<span class=\"op\">=</span><span class=\"va\">True</span>)</span></code></pre></div>\n<pre><code>c:\\users\\ysilhouette\\documents\\pyenv\\py3.6.5\\lib\\site-packages\\ipykernel_launcher.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  &quot;&quot;&quot;Entry point for launching an IPython kernel.</code></pre>\n<div class=\"sourceCode\" id=\"cb50\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb50-1\"><a href=\"#cb50-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.shape</span></code></pre></div>\n<pre><code>(45433, 2)</code></pre>\n<div class=\"sourceCode\" id=\"cb52\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb52-1\"><a href=\"#cb52-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.duplicated([<span class=\"st\">&#39;userId&#39;</span>,<span class=\"st\">&#39;movieId&#39;</span>]).<span class=\"bu\">sum</span>()</span></code></pre></div>\n<pre><code>0</code></pre>\n<div class=\"sourceCode\" id=\"cb54\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb54-1\"><a href=\"#cb54-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t[<span class=\"st\">&#39;id&#39;</span>] <span class=\"op\">=</span> movie_data_df_t[<span class=\"st\">&#39;id&#39;</span>].astype(np.int64)</span></code></pre></div>\n<pre><code>c:\\users\\ysilhouette\\documents\\pyenv\\py3.6.5\\lib\\site-packages\\ipykernel_launcher.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  &quot;&quot;&quot;Entry point for launching an IPython kernel.</code></pre>\n<div class=\"sourceCode\" id=\"cb56\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb56-1\"><a href=\"#cb56-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_data_df_t.dtypes</span></code></pre></div>\n<pre><code>title    object\nid        int64\ndtype: object</code></pre>\n<div class=\"sourceCode\" id=\"cb58\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb58-1\"><a href=\"#cb58-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.dtypes</span></code></pre></div>\n<pre><code>userId       int64\nmovieId      int64\nrating     float64\ndtype: object</code></pre>\n<h3 id=\"数据合并\">数据合并</h3>\n<div class=\"sourceCode\" id=\"cb60\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb60-1\"><a href=\"#cb60-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 左dataframe 和 右dataframe 根据 movieId 和 id进行合并</span></span>\n<span id=\"cb60-2\"><a href=\"#cb60-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s <span class=\"op\">=</span> pd.merge(ratings_df_s,movie_data_df_t, left_on<span class=\"op\">=</span><span class=\"st\">&#39;movieId&#39;</span>,right_on<span class=\"op\">=</span><span class=\"st\">&#39;id&#39;</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb61\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb61-1\"><a href=\"#cb61-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.head()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntitle\n</th>\n<th>\nid\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n1371\n</td>\n<td>\n2.5\n</td>\n<td>\nRocky III\n</td>\n<td>\n1371\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n4\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n<td>\n1371\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n7\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n<td>\n1371\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n19\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n<td>\n1371\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n21\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n<td>\n1371\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb62\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb62-1\"><a href=\"#cb62-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.drop([<span class=\"st\">&#39;id&#39;</span>],axis<span class=\"op\">=</span><span class=\"dv\">1</span>,inplace<span class=\"op\">=</span><span class=\"va\">True</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb63\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb63-1\"><a href=\"#cb63-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntitle\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n1371\n</td>\n<td>\n2.5\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n4\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n7\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n19\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n21\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n44984\n</th>\n<td>\n652\n</td>\n<td>\n129009\n</td>\n<td>\n4.0\n</td>\n<td>\nLove Is a Ball\n</td>\n</tr>\n<tr>\n<th>\n44985\n</th>\n<td>\n653\n</td>\n<td>\n2103\n</td>\n<td>\n3.0\n</td>\n<td>\nSolaris\n</td>\n</tr>\n<tr>\n<th>\n44986\n</th>\n<td>\n659\n</td>\n<td>\n167\n</td>\n<td>\n4.0\n</td>\n<td>\nK-PAX\n</td>\n</tr>\n<tr>\n<th>\n44987\n</th>\n<td>\n659\n</td>\n<td>\n563\n</td>\n<td>\n3.0\n</td>\n<td>\nStarship Troopers\n</td>\n</tr>\n<tr>\n<th>\n44988\n</th>\n<td>\n665\n</td>\n<td>\n129\n</td>\n<td>\n3.0\n</td>\n<td>\nSpirited Away\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n44989 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb64\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb64-1\"><a href=\"#cb64-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.shape</span></code></pre></div>\n<pre><code>(44989, 4)</code></pre>\n<div class=\"sourceCode\" id=\"cb66\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb66-1\"><a href=\"#cb66-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 有评分记录的电影的个数</span></span>\n<span id=\"cb66-2\"><a href=\"#cb66-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">len</span>(ratings_df_s[<span class=\"st\">&#39;title&#39;</span>].unique())</span></code></pre></div>\n<pre><code>2794</code></pre>\n<div class=\"sourceCode\" id=\"cb68\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb68-1\"><a href=\"#cb68-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s[<span class=\"st\">&#39;title&#39;</span>].unique()</span></code></pre></div>\n<pre><code>array([&#39;Rocky III&#39;, &#39;Greed&#39;, &#39;American Pie&#39;, ..., &#39;K-PAX&#39;,\n       &#39;Starship Troopers&#39;, &#39;Spirited Away&#39;], dtype=object)</code></pre>\n<div class=\"sourceCode\" id=\"cb70\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb70-1\"><a href=\"#cb70-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.groupby([ratings_df_s[<span class=\"st\">&#39;title&#39;</span>],ratings_df_s[<span class=\"st\">&#39;rating&#39;</span>]]).count().reset_index()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\ntitle\n</th>\n<th>\nrating\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n!Women Art Revolution\n</td>\n<td>\n3.0\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n!Women Art Revolution\n</td>\n<td>\n3.5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n'Gator Bait\n</td>\n<td>\n0.5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n'Twas the Night Before Christmas\n</td>\n<td>\n3.5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n'Twas the Night Before Christmas\n</td>\n<td>\n4.5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n10263\n</th>\n<td>\nÀ nos amours\n</td>\n<td>\n4.0\n</td>\n<td>\n5\n</td>\n<td>\n5\n</td>\n</tr>\n<tr>\n<th>\n10264\n</th>\n<td>\nÀ nos amours\n</td>\n<td>\n4.5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n10265\n</th>\n<td>\nÀ nos amours\n</td>\n<td>\n5.0\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n10266\n</th>\n<td>\nÖdipussi\n</td>\n<td>\n4.5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n10267\n</th>\n<td>\nŞaban Oğlu Şaban\n</td>\n<td>\n4.5\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n10268 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb71\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb71-1\"><a href=\"#cb71-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s.groupby(ratings_df_s[<span class=\"st\">&#39;title&#39;</span>]).count().reset_index()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\ntitle\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n!Women Art Revolution\n</td>\n<td>\n2\n</td>\n<td>\n2\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n'Gator Bait\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n'Twas the Night Before Christmas\n</td>\n<td>\n2\n</td>\n<td>\n2\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n...And God Created Woman\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n00 Schneider - Jagd auf Nihil Baxter\n</td>\n<td>\n2\n</td>\n<td>\n2\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n2789\n</th>\n<td>\nxXx\n</td>\n<td>\n28\n</td>\n<td>\n28\n</td>\n<td>\n28\n</td>\n</tr>\n<tr>\n<th>\n2790\n</th>\n<td>\n¡Three Amigos!\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2791\n</th>\n<td>\nÀ nos amours\n</td>\n<td>\n14\n</td>\n<td>\n14\n</td>\n<td>\n14\n</td>\n</tr>\n<tr>\n<th>\n2792\n</th>\n<td>\nÖdipussi\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2793\n</th>\n<td>\nŞaban Oğlu Şaban\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n1\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n2794 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb72\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb72-1\"><a href=\"#cb72-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_allcounts <span class=\"op\">=</span> ratings_df_s.groupby(ratings_df_s[<span class=\"st\">&#39;title&#39;</span>])[<span class=\"st\">&#39;userId&#39;</span>].count().reset_index()</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb73\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb73-1\"><a href=\"#cb73-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_allcounts <span class=\"op\">=</span> ratings_df_s_allcounts.rename(columns <span class=\"op\">=</span> &#123;<span class=\"st\">&#39;userId&#39;</span>:<span class=\"st\">&#39;totalRatings&#39;</span>&#125;)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb74\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb74-1\"><a href=\"#cb74-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_allcounts</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\ntitle\n</th>\n<th>\ntotalRatings\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n!Women Art Revolution\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n'Gator Bait\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n'Twas the Night Before Christmas\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n...And God Created Woman\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n00 Schneider - Jagd auf Nihil Baxter\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n2789\n</th>\n<td>\nxXx\n</td>\n<td>\n28\n</td>\n</tr>\n<tr>\n<th>\n2790\n</th>\n<td>\n¡Three Amigos!\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2791\n</th>\n<td>\nÀ nos amours\n</td>\n<td>\n14\n</td>\n</tr>\n<tr>\n<th>\n2792\n</th>\n<td>\nÖdipussi\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2793\n</th>\n<td>\nŞaban Oğlu Şaban\n</td>\n<td>\n1\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n2794 rows × 2 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb75\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb75-1\"><a href=\"#cb75-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_allcounts.shape</span></code></pre></div>\n<pre><code>(2794, 2)</code></pre>\n<div class=\"sourceCode\" id=\"cb77\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb77-1\"><a href=\"#cb77-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_allcounts[<span class=\"st\">&#39;totalRatings&#39;</span>].describe()</span></code></pre></div>\n<pre><code>count    2794.000000\nmean       16.102004\nstd        31.481795\nmin         1.000000\n25%         1.000000\n50%         4.000000\n75%        15.750000\nmax       324.000000\nName: totalRatings, dtype: float64</code></pre>\n<div class=\"sourceCode\" id=\"cb79\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb79-1\"><a href=\"#cb79-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_allcounts.hist()</span></code></pre></div>\n<pre><code>array([[&lt;AxesSubplot:title=&#123;&#39;center&#39;:&#39;totalRatings&#39;&#125;&gt;]], dtype=object)</code></pre>\n<figure>\n<img src=\"/.top//output_56_1.png\" alt=\"png\">\n<figcaption aria-hidden=\"true\">png</figcaption>\n</figure>\n<div class=\"sourceCode\" id=\"cb81\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb81-1\"><a href=\"#cb81-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_allcounts[<span class=\"st\">&#39;totalRatings&#39;</span>].quantile(np.arange(<span class=\"fl\">0.6</span>,<span class=\"dv\">1</span>, <span class=\"fl\">0.01</span>)) <span class=\"co\">#分位点</span></span></code></pre></div>\n<pre><code>0.60      7.00\n0.61      7.00\n0.62      7.00\n0.63      8.00\n0.64      8.00\n0.65      9.00\n0.66      9.00\n0.67     10.00\n0.68     10.00\n0.69     11.00\n0.70     12.00\n0.71     12.00\n0.72     13.00\n0.73     14.00\n0.74     14.00\n0.75     15.75\n0.76     17.00\n0.77     18.00\n0.78     19.00\n0.79     20.00\n0.80     21.00\n0.81     22.33\n0.82     24.00\n0.83     26.00\n0.84     27.00\n0.85     29.00\n0.86     31.00\n0.87     34.00\n0.88     37.00\n0.89     41.77\n0.90     45.00\n0.91     49.00\n0.92     52.56\n0.93     59.00\n0.94     64.42\n0.95     71.00\n0.96     83.28\n0.97     98.21\n0.98    119.14\n0.99    168.49\nName: totalRatings, dtype: float64</code></pre>\n<ul>\n<li><strong>从分位点数据分析可以看出，21%的电影\n评分记录数超过20个</strong></li>\n</ul>\n<div class=\"sourceCode\" id=\"cb83\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb83-1\"><a href=\"#cb83-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>votes_count_threshold <span class=\"op\">=</span> <span class=\"dv\">20</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb84\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb84-1\"><a href=\"#cb84-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_top<span class=\"op\">=</span>ratings_df_s_allcounts.query(<span class=\"st\">&#39;totalRatings &gt; @votes_count_threshold&#39;</span>).reset_index()</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb85\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb85-1\"><a href=\"#cb85-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_top</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nindex\n</th>\n<th>\ntitle\n</th>\n<th>\ntotalRatings\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n18\n</td>\n<td>\n20,000 Leagues Under the Sea\n</td>\n<td>\n89\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n19\n</td>\n<td>\n2001: A Space Odyssey\n</td>\n<td>\n87\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n24\n</td>\n<td>\n24 Hour Party People\n</td>\n<td>\n22\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n26\n</td>\n<td>\n28 Days Later\n</td>\n<td>\n26\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n27\n</td>\n<td>\n28 Weeks Later\n</td>\n<td>\n47\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n575\n</th>\n<td>\n2770\n</td>\n<td>\nYoung Adam\n</td>\n<td>\n34\n</td>\n</tr>\n<tr>\n<th>\n576\n</th>\n<td>\n2772\n</td>\n<td>\nYoung Frankenstein\n</td>\n<td>\n29\n</td>\n</tr>\n<tr>\n<th>\n577\n</th>\n<td>\n2774\n</td>\n<td>\nYoung and Innocent\n</td>\n<td>\n193\n</td>\n</tr>\n<tr>\n<th>\n578\n</th>\n<td>\n2781\n</td>\n<td>\nZatoichi\n</td>\n<td>\n61\n</td>\n</tr>\n<tr>\n<th>\n579\n</th>\n<td>\n2789\n</td>\n<td>\nxXx\n</td>\n<td>\n28\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n580 rows × 3 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb86\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb86-1\"><a href=\"#cb86-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_top.drop([<span class=\"st\">&#39;index&#39;</span>],axis<span class=\"op\">=</span><span class=\"dv\">1</span>,inplace<span class=\"op\">=</span><span class=\"va\">True</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb87\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb87-1\"><a href=\"#cb87-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_top.head()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\ntitle\n</th>\n<th>\ntotalRatings\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n20,000 Leagues Under the Sea\n</td>\n<td>\n89\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n2001: A Space Odyssey\n</td>\n<td>\n87\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n24 Hour Party People\n</td>\n<td>\n22\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n28 Days Later\n</td>\n<td>\n26\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n28 Weeks Later\n</td>\n<td>\n47\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb88\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb88-1\"><a href=\"#cb88-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s[<span class=\"st\">&#39;title&#39;</span>]</span></code></pre></div>\n<pre><code>0                Rocky III\n1                Rocky III\n2                Rocky III\n3                Rocky III\n4                Rocky III\n               ...        \n44984       Love Is a Ball\n44985              Solaris\n44986                K-PAX\n44987    Starship Troopers\n44988        Spirited Away\nName: title, Length: 44989, dtype: object</code></pre>\n<div class=\"sourceCode\" id=\"cb90\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb90-1\"><a href=\"#cb90-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_top[<span class=\"st\">&#39;title&#39;</span>]</span></code></pre></div>\n<pre><code>0      20,000 Leagues Under the Sea\n1             2001: A Space Odyssey\n2              24 Hour Party People\n3                     28 Days Later\n4                    28 Weeks Later\n                   ...             \n575                      Young Adam\n576              Young Frankenstein\n577              Young and Innocent\n578                        Zatoichi\n579                             xXx\nName: title, Length: 580, dtype: object</code></pre>\n<div class=\"sourceCode\" id=\"cb92\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb92-1\"><a href=\"#cb92-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s[ratings_df_s[<span class=\"st\">&#39;title&#39;</span>].isin(ratings_df_s_top[<span class=\"st\">&#39;title&#39;</span>])]</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntitle\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n1371\n</td>\n<td>\n2.5\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n4\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n7\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n19\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n21\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n44507\n</th>\n<td>\n624\n</td>\n<td>\n3057\n</td>\n<td>\n4.0\n</td>\n<td>\nFrankenstein\n</td>\n</tr>\n<tr>\n<th>\n44781\n</th>\n<td>\n547\n</td>\n<td>\n97936\n</td>\n<td>\n3.0\n</td>\n<td>\nSweet November\n</td>\n</tr>\n<tr>\n<th>\n44782\n</th>\n<td>\n624\n</td>\n<td>\n97936\n</td>\n<td>\n3.0\n</td>\n<td>\nSweet November\n</td>\n</tr>\n<tr>\n<th>\n44909\n</th>\n<td>\n609\n</td>\n<td>\n1450\n</td>\n<td>\n5.0\n</td>\n<td>\nBlood: The Last Vampire\n</td>\n</tr>\n<tr>\n<th>\n44985\n</th>\n<td>\n653\n</td>\n<td>\n2103\n</td>\n<td>\n3.0\n</td>\n<td>\nSolaris\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n34552 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb93\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb93-1\"><a href=\"#cb93-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s[ratings_df_s[<span class=\"st\">&#39;title&#39;</span>].isin(ratings_df_s_top[<span class=\"st\">&#39;title&#39;</span>])]  <span class=\"co\">#得到评分数量大于20的</span></span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntitle\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n1371\n</td>\n<td>\n2.5\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n4\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n7\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n19\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n21\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n44507\n</th>\n<td>\n624\n</td>\n<td>\n3057\n</td>\n<td>\n4.0\n</td>\n<td>\nFrankenstein\n</td>\n</tr>\n<tr>\n<th>\n44781\n</th>\n<td>\n547\n</td>\n<td>\n97936\n</td>\n<td>\n3.0\n</td>\n<td>\nSweet November\n</td>\n</tr>\n<tr>\n<th>\n44782\n</th>\n<td>\n624\n</td>\n<td>\n97936\n</td>\n<td>\n3.0\n</td>\n<td>\nSweet November\n</td>\n</tr>\n<tr>\n<th>\n44909\n</th>\n<td>\n609\n</td>\n<td>\n1450\n</td>\n<td>\n5.0\n</td>\n<td>\nBlood: The Last Vampire\n</td>\n</tr>\n<tr>\n<th>\n44985\n</th>\n<td>\n653\n</td>\n<td>\n2103\n</td>\n<td>\n3.0\n</td>\n<td>\nSolaris\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n34552 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb94\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb94-1\"><a href=\"#cb94-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s[<span class=\"op\">~</span>ratings_df_s[<span class=\"st\">&#39;title&#39;</span>].isin(ratings_df_s_top[<span class=\"st\">&#39;title&#39;</span>])] <span class=\"co\"># 得到评分数量小于20的</span></span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntitle\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n1714\n</th>\n<td>\n2\n</td>\n<td>\n248\n</td>\n<td>\n3.0\n</td>\n<td>\nPocketful of Miracles\n</td>\n</tr>\n<tr>\n<th>\n1715\n</th>\n<td>\n36\n</td>\n<td>\n248\n</td>\n<td>\n2.0\n</td>\n<td>\nPocketful of Miracles\n</td>\n</tr>\n<tr>\n<th>\n1716\n</th>\n<td>\n110\n</td>\n<td>\n248\n</td>\n<td>\n4.0\n</td>\n<td>\nPocketful of Miracles\n</td>\n</tr>\n<tr>\n<th>\n1717\n</th>\n<td>\n239\n</td>\n<td>\n248\n</td>\n<td>\n4.0\n</td>\n<td>\nPocketful of Miracles\n</td>\n</tr>\n<tr>\n<th>\n1718\n</th>\n<td>\n242\n</td>\n<td>\n248\n</td>\n<td>\n3.0\n</td>\n<td>\nPocketful of Miracles\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n44983\n</th>\n<td>\n652\n</td>\n<td>\n127728\n</td>\n<td>\n5.0\n</td>\n<td>\n8:46\n</td>\n</tr>\n<tr>\n<th>\n44984\n</th>\n<td>\n652\n</td>\n<td>\n129009\n</td>\n<td>\n4.0\n</td>\n<td>\nLove Is a Ball\n</td>\n</tr>\n<tr>\n<th>\n44986\n</th>\n<td>\n659\n</td>\n<td>\n167\n</td>\n<td>\n4.0\n</td>\n<td>\nK-PAX\n</td>\n</tr>\n<tr>\n<th>\n44987\n</th>\n<td>\n659\n</td>\n<td>\n563\n</td>\n<td>\n3.0\n</td>\n<td>\nStarship Troopers\n</td>\n</tr>\n<tr>\n<th>\n44988\n</th>\n<td>\n665\n</td>\n<td>\n129\n</td>\n<td>\n3.0\n</td>\n<td>\nSpirited Away\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n10437 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb95\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb95-1\"><a href=\"#cb95-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20 <span class=\"op\">=</span> ratings_df_s[ratings_df_s[<span class=\"st\">&#39;title&#39;</span>].isin(ratings_df_s_top[<span class=\"st\">&#39;title&#39;</span>])]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb96\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb96-1\"><a href=\"#cb96-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntX20 <span class=\"op\">=</span> ratings_df_s[<span class=\"op\">~</span>ratings_df_s[<span class=\"st\">&#39;title&#39;</span>].isin(ratings_df_s_top[<span class=\"st\">&#39;title&#39;</span>])]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb97\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb97-1\"><a href=\"#cb97-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20.shape</span></code></pre></div>\n<pre><code>(34552, 4)</code></pre>\n<div class=\"sourceCode\" id=\"cb99\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb99-1\"><a href=\"#cb99-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntX20.shape</span></code></pre></div>\n<pre><code>(10437, 4)</code></pre>\n<div class=\"sourceCode\" id=\"cb101\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb101-1\"><a href=\"#cb101-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20.isna().<span class=\"bu\">sum</span>() <span class=\"co\">#检查有无缺失值</span></span></code></pre></div>\n<pre><code>userId     0\nmovieId    0\nrating     0\ntitle      0\ndtype: int64</code></pre>\n<div class=\"sourceCode\" id=\"cb103\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb103-1\"><a href=\"#cb103-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20.duplicated([<span class=\"st\">&#39;userId&#39;</span>,<span class=\"st\">&#39;title&#39;</span>]).<span class=\"bu\">sum</span>()</span></code></pre></div>\n<pre><code>140</code></pre>\n<div class=\"sourceCode\" id=\"cb105\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb105-1\"><a href=\"#cb105-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20<span class=\"op\">=</span>ratings_df_s_cntD20.drop_duplicates([<span class=\"st\">&#39;userId&#39;</span>,<span class=\"st\">&#39;title&#39;</span>]) <span class=\"co\"># 只保留每个用户对每个电影的一条评论记录</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb106\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb106-1\"><a href=\"#cb106-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntitle\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n1371\n</td>\n<td>\n2.5\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n4\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n7\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n19\n</td>\n<td>\n1371\n</td>\n<td>\n4.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n21\n</td>\n<td>\n1371\n</td>\n<td>\n3.0\n</td>\n<td>\nRocky III\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n44506\n</th>\n<td>\n472\n</td>\n<td>\n3057\n</td>\n<td>\n3.0\n</td>\n<td>\nFrankenstein\n</td>\n</tr>\n<tr>\n<th>\n44507\n</th>\n<td>\n624\n</td>\n<td>\n3057\n</td>\n<td>\n4.0\n</td>\n<td>\nFrankenstein\n</td>\n</tr>\n<tr>\n<th>\n44782\n</th>\n<td>\n624\n</td>\n<td>\n97936\n</td>\n<td>\n3.0\n</td>\n<td>\nSweet November\n</td>\n</tr>\n<tr>\n<th>\n44909\n</th>\n<td>\n609\n</td>\n<td>\n1450\n</td>\n<td>\n5.0\n</td>\n<td>\nBlood: The Last Vampire\n</td>\n</tr>\n<tr>\n<th>\n44985\n</th>\n<td>\n653\n</td>\n<td>\n2103\n</td>\n<td>\n3.0\n</td>\n<td>\nSolaris\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n34412 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb107\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb107-1\"><a href=\"#cb107-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20.duplicated([<span class=\"st\">&#39;userId&#39;</span>,<span class=\"st\">&#39;title&#39;</span>]).<span class=\"bu\">sum</span>()</span></code></pre></div>\n<pre><code>0</code></pre>\n<div class=\"sourceCode\" id=\"cb109\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb109-1\"><a href=\"#cb109-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 将一个dataframe的记录数据整合成表格，而且是按照pivot(‘index=xx’,’columns=xx’,’values=xx’)来整合的。还有另外一种写法，就是pivot(‘索引列’，‘列名’，‘值’)。</span></span>\n<span id=\"cb109-2\"><a href=\"#cb109-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20_for_apriori <span class=\"op\">=</span> ratings_df_s_cntD20.pivot(index<span class=\"op\">=</span><span class=\"st\">&#39;userId&#39;</span>,columns<span class=\"op\">=</span><span class=\"st\">&#39;title&#39;</span>,values<span class=\"op\">=</span><span class=\"st\">&#39;rating&#39;</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb110\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb110-1\"><a href=\"#cb110-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20_for_apriori</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\ntitle\n</th>\n<th>\n20,000 Leagues Under the Sea\n</th>\n<th>\n2001: A Space Odyssey\n</th>\n<th>\n24 Hour Party People\n</th>\n<th>\n28 Days Later\n</th>\n<th>\n28 Weeks Later\n</th>\n<th>\n300\n</th>\n<th>\n48 Hrs.\n</th>\n<th>\n5 Card Stud\n</th>\n<th>\n7 Virgins\n</th>\n<th>\n8 Women\n</th>\n<th>\n...\n</th>\n<th>\nWithin the Woods\n</th>\n<th>\nX-Men Origins: Wolverine\n</th>\n<th>\nY Tu Mamá También\n</th>\n<th>\nYankee Doodle Dandy\n</th>\n<th>\nYesterday\n</th>\n<th>\nYoung Adam\n</th>\n<th>\nYoung Frankenstein\n</th>\n<th>\nYoung and Innocent\n</th>\n<th>\nZatoichi\n</th>\n<th>\nxXx\n</th>\n</tr>\n<tr>\n<th>\nuserId\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n1\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\nNaN\n</td>\n<td>\n3.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n5.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n3.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n3.5\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n3.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\n5.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n5.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n5\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n4.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n3.5\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n667\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n4.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n668\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n669\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n670\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n3.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n<tr>\n<th>\n671\n</th>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n5.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n...\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n<td>\n4.0\n</td>\n<td>\nNaN\n</td>\n<td>\nNaN\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n671 rows × 580 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb111\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb111-1\"><a href=\"#cb111-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20_for_apriori<span class=\"op\">=</span> ratings_df_s_cntD20_for_apriori.fillna(<span class=\"dv\">0</span>) <span class=\"co\">#缺失值 填充0</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb112\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb112-1\"><a href=\"#cb112-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> encode_units(x): <span class=\"co\"># 有效评分规则， 1表示有效，0 表示无效</span></span>\n<span id=\"cb112-2\"><a href=\"#cb112-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> x <span class=\"op\">&lt;=</span> <span class=\"dv\">0</span>:</span>\n<span id=\"cb112-3\"><a href=\"#cb112-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"dv\">0</span></span>\n<span id=\"cb112-4\"><a href=\"#cb112-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"cf\">if</span> x<span class=\"op\">&gt;</span><span class=\"dv\">0</span>:</span>\n<span id=\"cb112-5\"><a href=\"#cb112-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"dv\">1</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb113\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb113-1\"><a href=\"#cb113-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20_for_apriori <span class=\"op\">=</span> ratings_df_s_cntD20_for_apriori.applymap(encode_units)</span></code></pre></div>\n<h3 id=\"计算频繁项集-和关联规则\">计算频繁项集 和关联规则</h3>\n<div class=\"sourceCode\" id=\"cb114\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb114-1\"><a href=\"#cb114-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> mlxtend.frequent_patterns <span class=\"im\">import</span> apriori</span>\n<span id=\"cb114-2\"><a href=\"#cb114-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> mlxtend.frequent_patterns <span class=\"im\">import</span> association_rules</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb115\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb115-1\"><a href=\"#cb115-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20_for_apriori.head()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\ntitle\n</th>\n<th>\n20,000 Leagues Under the Sea\n</th>\n<th>\n2001: A Space Odyssey\n</th>\n<th>\n24 Hour Party People\n</th>\n<th>\n28 Days Later\n</th>\n<th>\n28 Weeks Later\n</th>\n<th>\n300\n</th>\n<th>\n48 Hrs.\n</th>\n<th>\n5 Card Stud\n</th>\n<th>\n7 Virgins\n</th>\n<th>\n8 Women\n</th>\n<th>\n...\n</th>\n<th>\nWithin the Woods\n</th>\n<th>\nX-Men Origins: Wolverine\n</th>\n<th>\nY Tu Mamá También\n</th>\n<th>\nYankee Doodle Dandy\n</th>\n<th>\nYesterday\n</th>\n<th>\nYoung Adam\n</th>\n<th>\nYoung Frankenstein\n</th>\n<th>\nYoung and Innocent\n</th>\n<th>\nZatoichi\n</th>\n<th>\nxXx\n</th>\n</tr>\n<tr>\n<th>\nuserId\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n<th>\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n1\n</th>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n...\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n...\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n...\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n...\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n</tr>\n<tr>\n<th>\n5\n</th>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n...\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n0\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n5 rows × 580 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb116\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb116-1\"><a href=\"#cb116-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_df_s_cntD20_for_apriori.isna().<span class=\"bu\">sum</span>() <span class=\"co\">#检查是否有nan值</span></span></code></pre></div>\n<pre><code>title\n20,000 Leagues Under the Sea    0\n2001: A Space Odyssey           0\n24 Hour Party People            0\n28 Days Later                   0\n28 Weeks Later                  0\n                               ..\nYoung Adam                      0\nYoung Frankenstein              0\nYoung and Innocent              0\nZatoichi                        0\nxXx                             0\nLength: 580, dtype: int64</code></pre>\n<div class=\"sourceCode\" id=\"cb118\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb118-1\"><a href=\"#cb118-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>frequent_itemsets <span class=\"op\">=</span> apriori(ratings_df_s_cntD20_for_apriori, min_support<span class=\"op\">=</span><span class=\"fl\">0.10</span>, use_colnames<span class=\"op\">=</span><span class=\"va\">True</span>)  <span class=\"co\">#生成符合条件的频繁项集</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb119\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb119-1\"><a href=\"#cb119-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>frequent_itemsets.sort_values(<span class=\"st\">&#39;support&#39;</span>,ascending<span class=\"op\">=</span><span class=\"va\">False</span>)  <span class=\"co\">#support降序排列的频繁项集</span></span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nsupport\n</th>\n<th>\nitemsets\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n111\n</th>\n<td>\n0.482861\n</td>\n<td>\n(Terminator 3: Rise of the Machines)\n</td>\n</tr>\n<tr>\n<th>\n130\n</th>\n<td>\n0.463487\n</td>\n<td>\n(The Million Dollar Hotel)\n</td>\n</tr>\n<tr>\n<th>\n105\n</th>\n<td>\n0.454545\n</td>\n<td>\n(Solaris)\n</td>\n</tr>\n<tr>\n<th>\n113\n</th>\n<td>\n0.433681\n</td>\n<td>\n(The 39 Steps)\n</td>\n</tr>\n<tr>\n<th>\n69\n</th>\n<td>\n0.408346\n</td>\n<td>\n(Monsoon Wedding)\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n1613\n</th>\n<td>\n0.101341\n</td>\n<td>\n(Sleepless in Seattle, 5 Card Stud, The Tunnel)\n</td>\n</tr>\n<tr>\n<th>\n5455\n</th>\n<td>\n0.101341\n</td>\n<td>\n(Beauty and the Beast, Rain Man, Terminator 3:...\n</td>\n</tr>\n<tr>\n<th>\n5454\n</th>\n<td>\n0.101341\n</td>\n<td>\n(The Passion of Joan of Arc, Beauty and the Be...\n</td>\n</tr>\n<tr>\n<th>\n6769\n</th>\n<td>\n0.101341\n</td>\n<td>\n(The Million Dollar Hotel, The Hours, Three Co...\n</td>\n</tr>\n<tr>\n<th>\n3108\n</th>\n<td>\n0.101341\n</td>\n<td>\n(The Conversation, Men in Black II, The Millio...\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n7327 rows × 2 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb120\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb120-1\"><a href=\"#cb120-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>rules<span class=\"op\">=</span> association_rules(frequent_itemsets, metric<span class=\"op\">=</span><span class=\"st\">&quot;lift&quot;</span>, min_threshold<span class=\"op\">=</span><span class=\"dv\">1</span>)  <span class=\"co\">#生成关联规则，只保留lift&gt;1的部分</span></span>\n<span id=\"cb120-2\"><a href=\"#cb120-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>rules</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nantecedents\n</th>\n<th>\nconsequents\n</th>\n<th>\nantecedent support\n</th>\n<th>\nconsequent support\n</th>\n<th>\nsupport\n</th>\n<th>\nconfidence\n</th>\n<th>\nlift\n</th>\n<th>\nleverage\n</th>\n<th>\nconviction\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n(5 Card Stud)\n</td>\n<td>\n(48 Hrs.)\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.108793\n</td>\n<td>\n0.365000\n</td>\n<td>\n1.224575\n</td>\n<td>\n0.019952\n</td>\n<td>\n1.105413\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n(48 Hrs.)\n</td>\n<td>\n(5 Card Stud)\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.108793\n</td>\n<td>\n0.365000\n</td>\n<td>\n1.224575\n</td>\n<td>\n0.019952\n</td>\n<td>\n1.105413\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n(A Clockwork Orange)\n</td>\n<td>\n(48 Hrs.)\n</td>\n<td>\n0.152012\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.102832\n</td>\n<td>\n0.676471\n</td>\n<td>\n2.269559\n</td>\n<td>\n0.057523\n</td>\n<td>\n2.169625\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n(48 Hrs.)\n</td>\n<td>\n(A Clockwork Orange)\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.152012\n</td>\n<td>\n0.102832\n</td>\n<td>\n0.345000\n</td>\n<td>\n2.269559\n</td>\n<td>\n0.057523\n</td>\n<td>\n1.294638\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n(48 Hrs.)\n</td>\n<td>\n(A Nightmare on Elm Street)\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.268256\n</td>\n<td>\n0.156483\n</td>\n<td>\n0.525000\n</td>\n<td>\n1.957083\n</td>\n<td>\n0.076526\n</td>\n<td>\n1.540513\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n75531\n</th>\n<td>\n(The Hours)\n</td>\n<td>\n(The Million Dollar Hotel, Terminator 3: Rise ...\n</td>\n<td>\n0.301043\n</td>\n<td>\n0.126677\n</td>\n<td>\n0.104322\n</td>\n<td>\n0.346535\n</td>\n<td>\n2.735585\n</td>\n<td>\n0.066187\n</td>\n<td>\n1.336449\n</td>\n</tr>\n<tr>\n<th>\n75532\n</th>\n<td>\n(Terminator 3: Rise of the Machines)\n</td>\n<td>\n(The Million Dollar Hotel, The Hours, Rain Man...\n</td>\n<td>\n0.482861\n</td>\n<td>\n0.114754\n</td>\n<td>\n0.104322\n</td>\n<td>\n0.216049\n</td>\n<td>\n1.882716\n</td>\n<td>\n0.048912\n</td>\n<td>\n1.129211\n</td>\n</tr>\n<tr>\n<th>\n75533\n</th>\n<td>\n(Rain Man)\n</td>\n<td>\n(The Million Dollar Hotel, The Hours, Terminat...\n</td>\n<td>\n0.295082\n</td>\n<td>\n0.120715\n</td>\n<td>\n0.104322\n</td>\n<td>\n0.353535\n</td>\n<td>\n2.928669\n</td>\n<td>\n0.068701\n</td>\n<td>\n1.360143\n</td>\n</tr>\n<tr>\n<th>\n75534\n</th>\n<td>\n(Sissi)\n</td>\n<td>\n(The Million Dollar Hotel, The Hours, Terminat...\n</td>\n<td>\n0.317437\n</td>\n<td>\n0.117735\n</td>\n<td>\n0.104322\n</td>\n<td>\n0.328638\n</td>\n<td>\n2.791347\n</td>\n<td>\n0.066949\n</td>\n<td>\n1.314143\n</td>\n</tr>\n<tr>\n<th>\n75535\n</th>\n<td>\n(Solaris)\n</td>\n<td>\n(The Million Dollar Hotel, The Hours, Terminat...\n</td>\n<td>\n0.454545\n</td>\n<td>\n0.113264\n</td>\n<td>\n0.104322\n</td>\n<td>\n0.229508\n</td>\n<td>\n2.026316\n</td>\n<td>\n0.052838\n</td>\n<td>\n1.150870\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n75536 rows × 9 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb121\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb121-1\"><a href=\"#cb121-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>rules.sort_values(<span class=\"st\">&#39;lift&#39;</span>,ascending<span class=\"op\">=</span><span class=\"va\">False</span>)</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nantecedents\n</th>\n<th>\nconsequents\n</th>\n<th>\nantecedent support\n</th>\n<th>\nconsequent support\n</th>\n<th>\nsupport\n</th>\n<th>\nconfidence\n</th>\n<th>\nlift\n</th>\n<th>\nleverage\n</th>\n<th>\nconviction\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n1473\n</th>\n<td>\n(Muxmäuschenstill)\n</td>\n<td>\n(Waiter)\n</td>\n<td>\n0.156483\n</td>\n<td>\n0.120715\n</td>\n<td>\n0.105812\n</td>\n<td>\n0.676190\n</td>\n<td>\n5.601529\n</td>\n<td>\n0.086922\n</td>\n<td>\n2.715438\n</td>\n</tr>\n<tr>\n<th>\n1472\n</th>\n<td>\n(Waiter)\n</td>\n<td>\n(Muxmäuschenstill)\n</td>\n<td>\n0.120715\n</td>\n<td>\n0.156483\n</td>\n<td>\n0.105812\n</td>\n<td>\n0.876543\n</td>\n<td>\n5.601529\n</td>\n<td>\n0.086922\n</td>\n<td>\n6.832489\n</td>\n</tr>\n<tr>\n<th>\n38208\n</th>\n<td>\n(Titanic, Big Fish)\n</td>\n<td>\n(Psycho, Rain Man)\n</td>\n<td>\n0.150522\n</td>\n<td>\n0.131148\n</td>\n<td>\n0.101341\n</td>\n<td>\n0.673267\n</td>\n<td>\n5.133663\n</td>\n<td>\n0.081601\n</td>\n<td>\n2.659215\n</td>\n</tr>\n<tr>\n<th>\n38209\n</th>\n<td>\n(Psycho, Rain Man)\n</td>\n<td>\n(Titanic, Big Fish)\n</td>\n<td>\n0.131148\n</td>\n<td>\n0.150522\n</td>\n<td>\n0.101341\n</td>\n<td>\n0.772727\n</td>\n<td>\n5.133663\n</td>\n<td>\n0.081601\n</td>\n<td>\n3.737705\n</td>\n</tr>\n<tr>\n<th>\n38238\n</th>\n<td>\n(Titanic, Big Fish)\n</td>\n<td>\n(Psycho, Solaris)\n</td>\n<td>\n0.150522\n</td>\n<td>\n0.134128\n</td>\n<td>\n0.102832\n</td>\n<td>\n0.683168\n</td>\n<td>\n5.093399\n</td>\n<td>\n0.082642\n</td>\n<td>\n2.732908\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n108\n</th>\n<td>\n(5 Card Stud)\n</td>\n<td>\n(Men in Black II)\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.333830\n</td>\n<td>\n0.110283\n</td>\n<td>\n0.370000\n</td>\n<td>\n1.108348\n</td>\n<td>\n0.010781\n</td>\n<td>\n1.057413\n</td>\n</tr>\n<tr>\n<th>\n571\n</th>\n<td>\n(Bang, Boom, Bang)\n</td>\n<td>\n(The 39 Steps)\n</td>\n<td>\n0.260805\n</td>\n<td>\n0.433681\n</td>\n<td>\n0.125186\n</td>\n<td>\n0.480000\n</td>\n<td>\n1.106804\n</td>\n<td>\n0.012080\n</td>\n<td>\n1.089075\n</td>\n</tr>\n<tr>\n<th>\n570\n</th>\n<td>\n(The 39 Steps)\n</td>\n<td>\n(Bang, Boom, Bang)\n</td>\n<td>\n0.433681\n</td>\n<td>\n0.260805\n</td>\n<td>\n0.125186\n</td>\n<td>\n0.288660\n</td>\n<td>\n1.106804\n</td>\n<td>\n0.012080\n</td>\n<td>\n1.039159\n</td>\n</tr>\n<tr>\n<th>\n1137\n</th>\n<td>\n(Sissi)\n</td>\n<td>\n(License to Wed)\n</td>\n<td>\n0.317437\n</td>\n<td>\n0.301043\n</td>\n<td>\n0.102832\n</td>\n<td>\n0.323944\n</td>\n<td>\n1.076070\n</td>\n<td>\n0.007269\n</td>\n<td>\n1.033874\n</td>\n</tr>\n<tr>\n<th>\n1136\n</th>\n<td>\n(License to Wed)\n</td>\n<td>\n(Sissi)\n</td>\n<td>\n0.301043\n</td>\n<td>\n0.317437\n</td>\n<td>\n0.102832\n</td>\n<td>\n0.341584\n</td>\n<td>\n1.076070\n</td>\n<td>\n0.007269\n</td>\n<td>\n1.036675\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n75536 rows × 9 columns\n</p>\n</div>\n<ul>\n<li><strong>结果说明：上述输出的即为所有关联规则的结果，每一行代表一个关联规则，其中行号1473所在的关联规则(Waiter-&gt;Muxmauschenstill)关联度最高(conviction值越大，代表antecedents与consequents的关联度越大）)。</strong></li>\n</ul>\n<h2 id=\"电影推荐\">电影推荐</h2>\n<h4 id=\"推荐电影列表\">推荐电影列表</h4>\n<div class=\"sourceCode\" id=\"cb122\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb122-1\"><a href=\"#cb122-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>all_antecedents <span class=\"op\">=</span> [<span class=\"bu\">list</span>(x) <span class=\"cf\">for</span> x <span class=\"kw\">in</span> rules[<span class=\"st\">&#39;antecedents&#39;</span>].values]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb123\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb123-1\"><a href=\"#cb123-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>desired_indices <span class=\"op\">=</span> [i <span class=\"cf\">for</span> i <span class=\"kw\">in</span> <span class=\"bu\">range</span>(<span class=\"bu\">len</span>(all_antecedents)) <span class=\"cf\">if</span> <span class=\"bu\">len</span>(all_antecedents[i]) <span class=\"op\">==</span> <span class=\"dv\">1</span> <span class=\"kw\">and</span> all_antecedents[i][<span class=\"dv\">0</span>] <span class=\"op\">==</span> <span class=\"st\">&#39;Batman Returns&#39;</span>] </span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb124\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb124-1\"><a href=\"#cb124-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>apriori_recommendations <span class=\"op\">=</span>rules.iloc[desired_indices,].sort_values(by<span class=\"op\">=</span>[<span class=\"st\">&#39;lift&#39;</span>],ascending<span class=\"op\">=</span><span class=\"va\">False</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb125\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb125-1\"><a href=\"#cb125-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>apriori_recommendations.head()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nantecedents\n</th>\n<th>\nconsequents\n</th>\n<th>\nantecedent support\n</th>\n<th>\nconsequent support\n</th>\n<th>\nsupport\n</th>\n<th>\nconfidence\n</th>\n<th>\nlift\n</th>\n<th>\nleverage\n</th>\n<th>\nconviction\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n63981\n</th>\n<td>\n(Batman Returns)\n</td>\n<td>\n(The Hours, Monsoon Wedding, Silent Hill, Rese...\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.107303\n</td>\n<td>\n0.102832\n</td>\n<td>\n0.345\n</td>\n<td>\n3.215208\n</td>\n<td>\n0.070849\n</td>\n<td>\n1.362897\n</td>\n</tr>\n<tr>\n<th>\n36084\n</th>\n<td>\n(Batman Returns)\n</td>\n<td>\n(Reservoir Dogs, Wag the Dog, Silent Hill)\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.105812\n</td>\n<td>\n0.101341\n</td>\n<td>\n0.340\n</td>\n<td>\n3.213239\n</td>\n<td>\n0.069803\n</td>\n<td>\n1.354830\n</td>\n</tr>\n<tr>\n<th>\n63891\n</th>\n<td>\n(Batman Returns)\n</td>\n<td>\n(Monsoon Wedding, Silent Hill, Reservoir Dogs,...\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.107303\n</td>\n<td>\n0.101341\n</td>\n<td>\n0.340\n</td>\n<td>\n3.168611\n</td>\n<td>\n0.069358\n</td>\n<td>\n1.352572\n</td>\n</tr>\n<tr>\n<th>\n63351\n</th>\n<td>\n(Batman Returns)\n</td>\n<td>\n(Monsoon Wedding, Silent Hill, Reservoir Dogs,...\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.107303\n</td>\n<td>\n0.101341\n</td>\n<td>\n0.340\n</td>\n<td>\n3.168611\n</td>\n<td>\n0.069358\n</td>\n<td>\n1.352572\n</td>\n</tr>\n<tr>\n<th>\n36014\n</th>\n<td>\n(Batman Returns)\n</td>\n<td>\n(The Hours, Reservoir Dogs, Silent Hill)\n</td>\n<td>\n0.298063\n</td>\n<td>\n0.116244\n</td>\n<td>\n0.108793\n</td>\n<td>\n0.365\n</td>\n<td>\n3.139936\n</td>\n<td>\n0.074145\n</td>\n<td>\n1.391741\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb126\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb126-1\"><a href=\"#cb126-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>apriori_recommendations_list <span class=\"op\">=</span> [<span class=\"bu\">list</span>(x) <span class=\"cf\">for</span> x <span class=\"kw\">in</span> apriori_recommendations[<span class=\"st\">&#39;consequents&#39;</span>].values]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb127\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb127-1\"><a href=\"#cb127-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">print</span>(<span class=\"st\">&quot;Apriori Recommendations for movie: Batman Returns</span><span class=\"ch\">\\n</span><span class=\"st\">&quot;</span>)</span>\n<span id=\"cb127-2\"><a href=\"#cb127-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> i <span class=\"kw\">in</span> <span class=\"bu\">range</span>(<span class=\"dv\">5</span>):</span>\n<span id=\"cb127-3\"><a href=\"#cb127-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">print</span>(<span class=\"st\">&quot;</span><span class=\"sc\">&#123;0&#125;</span><span class=\"st\">:</span><span class=\"sc\">&#123;1&#125;</span><span class=\"st\"> with lift of </span><span class=\"sc\">&#123;2&#125;</span><span class=\"st\">&quot;</span> .<span class=\"bu\">format</span>(i<span class=\"op\">+</span><span class=\"dv\">1</span>, apriori_recommendations_list[i], apriori_recommendations.iloc[i,<span class=\"dv\">6</span>]))</span></code></pre></div>\n<pre><code>Apriori Recommendations for movie: Batman Returns\n\n1:[&#39;The Hours&#39;, &#39;Monsoon Wedding&#39;, &#39;Silent Hill&#39;, &#39;Reservoir Dogs&#39;] with lift of 3.215208333333333\n2:[&#39;Reservoir Dogs&#39;, &#39;Wag the Dog&#39;, &#39;Silent Hill&#39;] with lift of 3.2132394366197183\n3:[&#39;Monsoon Wedding&#39;, &#39;Silent Hill&#39;, &#39;Reservoir Dogs&#39;, &#39;Sissi&#39;] with lift of 3.168611111111111\n4:[&#39;Monsoon Wedding&#39;, &#39;Silent Hill&#39;, &#39;Reservoir Dogs&#39;, &#39;Rain Man&#39;] with lift of 3.168611111111111\n5:[&#39;The Hours&#39;, &#39;Reservoir Dogs&#39;, &#39;Silent Hill&#39;] with lift of 3.139935897435898</code></pre>\n<h4 id=\"推荐单部电影\">推荐单部电影</h4>\n<div class=\"sourceCode\" id=\"cb129\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb129-1\"><a href=\"#cb129-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>apriori_single_recommendations <span class=\"op\">=</span> apriori_recommendations.iloc[[x <span class=\"cf\">for</span> x <span class=\"kw\">in</span> <span class=\"bu\">range</span>(<span class=\"bu\">len</span>(apriori_recommendations_list)) <span class=\"cf\">if</span> <span class=\"bu\">len</span>(apriori_recommendations_list[x]) <span class=\"op\">==</span><span class=\"dv\">1</span>],]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb130\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb130-1\"><a href=\"#cb130-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>apriori_single_recommendations_list <span class=\"op\">=</span> [<span class=\"bu\">list</span>(x) <span class=\"cf\">for</span> x <span class=\"kw\">in</span> apriori_single_recommendations[<span class=\"st\">&#39;consequents&#39;</span>].values]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb131\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb131-1\"><a href=\"#cb131-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">print</span>(<span class=\"st\">&quot;Apriori single-movie Recommendations for movie: Batman Returns</span><span class=\"ch\">\\n</span><span class=\"st\">&quot;</span>)</span>\n<span id=\"cb131-2\"><a href=\"#cb131-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> i <span class=\"kw\">in</span> <span class=\"bu\">range</span>(<span class=\"dv\">5</span>):</span>\n<span id=\"cb131-3\"><a href=\"#cb131-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"bu\">print</span>(<span class=\"st\">&quot;</span><span class=\"sc\">&#123;0&#125;</span><span class=\"st\">: </span><span class=\"sc\">&#123;1&#125;</span><span class=\"st\">, with lift of </span><span class=\"sc\">&#123;2&#125;</span><span class=\"st\">&quot;</span>.<span class=\"bu\">format</span>(i<span class=\"op\">+</span><span class=\"dv\">1</span>,apriori_single_recommendations_list[i][<span class=\"dv\">0</span>],apriori_single_recommendations.iloc[i,<span class=\"dv\">6</span>]))</span></code></pre></div>\n<pre><code>Apriori single-movie Recommendations for movie: Batman Returns\n\n1: Reservoir Dogs, with lift of 2.6094444444444447\n2: Ariel, with lift of 2.5397663551401872\n3: Wag the Dog, with lift of 2.496744186046512\n4: To Kill a Mockingbird, with lift of 2.478125\n5: Romeo + Juliet, with lift of 2.4705000000000004</code></pre>\n<ul>\n<li><strong>结果说明：我们约束consequents(后件)的长度为1，选出lift降序排列的前五个关联规则(关联规则格式为前件——&gt;后件）。对于用户观看的电影记录《Batman\nReturns》，即antecedents(前件），我们根据规则按照推荐程度降序给出了单部电影推荐结果</strong></li>\n</ul>\n<h2 id=\"协同过滤\"><strong>协同过滤</strong></h2>\n<h4 id=\"基于user的协同过滤\">基于user的协同过滤</h4>\n<ul>\n<li>在海量的用户中发现一小部分和你品味比较相近的，在协同过滤中，这些用户称为邻居，然后根据他们喜欢的东西组织成一个排序的目录来推荐给你\n<ul>\n<li><strong>重点就是怎样去寻找和你比较相似的用户，怎么将那些邻居的喜好组织成一个排序的目录给用户</strong>\n<ul>\n<li>在世纪钟给出一个数字K表示和你最为相似的用户。</li>\n<li>在计算相似度的时候，理论上要计算被推荐的用户与所有用户的相似度，但是当数据量比较大的时候，这样做是很费时间的\n，</li>\n<li>数据集中可能有很多用户和需要被推荐的用户是没有关系的，\n在计算是完全是没有必要的，</li>\n<li>所以需要物品到用户的反查表，也就是没一件物品对应的用户信息，有了这个表，就可以过滤掉很多和你没有关系的用户，减少计算量。</li>\n<li><figure>\n<img src=\"/.top//attachment:c637faba-51f3-4a89-84f5-ede3ce337e4c.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure></li>\n</ul></li>\n<li>总结来说，推荐的过程就是先计算用户之间的相似度，根据相似度的高低选取前K个用户，在这K个用户中计算每一件物品的推荐程度。</li>\n</ul></li>\n</ul>\n<div class=\"sourceCode\" id=\"cb133\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb133-1\"><a href=\"#cb133-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 读取ratings_small.csv数据用于建模</span></span>\n<span id=\"cb133-2\"><a href=\"#cb133-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_path <span class=\"op\">=</span> <span class=\"st\">&quot;./movie_dataset/ratings_small.csv&quot;</span></span>\n<span id=\"cb133-3\"><a href=\"#cb133-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_df <span class=\"op\">=</span> pd.read_csv(ratings_small_path)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb134\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb134-1\"><a href=\"#cb134-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_df.shape</span></code></pre></div>\n<pre><code>(100004, 4)</code></pre>\n<div class=\"sourceCode\" id=\"cb136\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb136-1\"><a href=\"#cb136-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_df.head()</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntimestamp\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n31\n</td>\n<td>\n2.5\n</td>\n<td>\n1260759144\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n1\n</td>\n<td>\n1029\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759179\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n1\n</td>\n<td>\n1061\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759182\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n1\n</td>\n<td>\n1129\n</td>\n<td>\n2.0\n</td>\n<td>\n1260759185\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n1\n</td>\n<td>\n1172\n</td>\n<td>\n4.0\n</td>\n<td>\n1260759205\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"sourceCode\" id=\"cb137\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb137-1\"><a href=\"#cb137-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 原始的movieId 并非从0到1 的连续值， 为方便更贱user-item矩阵， 重新排列movie_id</span></span>\n<span id=\"cb137-2\"><a href=\"#cb137-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_id <span class=\"op\">=</span> ratings_small_df[<span class=\"st\">&#39;movieId&#39;</span>].drop_duplicates()</span>\n<span id=\"cb137-3\"><a href=\"#cb137-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_id <span class=\"op\">=</span> pd.DataFrame(movie_id)</span>\n<span id=\"cb137-4\"><a href=\"#cb137-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_id[<span class=\"st\">&#39;movieid&#39;</span>] <span class=\"op\">=</span> <span class=\"bu\">range</span>(<span class=\"bu\">len</span>(movie_id))</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb138\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb138-1\"><a href=\"#cb138-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>movie_id</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nmovieId\n</th>\n<th>\nmovieid\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n31\n</td>\n<td>\n0\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n1029\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n1061\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n1129\n</td>\n<td>\n3\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n1172\n</td>\n<td>\n4\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n99131\n</th>\n<td>\n64997\n</td>\n<td>\n9061\n</td>\n</tr>\n<tr>\n<th>\n99159\n</th>\n<td>\n72380\n</td>\n<td>\n9062\n</td>\n</tr>\n<tr>\n<th>\n99274\n</th>\n<td>\n129\n</td>\n<td>\n9063\n</td>\n</tr>\n<tr>\n<th>\n99678\n</th>\n<td>\n4736\n</td>\n<td>\n9064\n</td>\n</tr>\n<tr>\n<th>\n99820\n</th>\n<td>\n6425\n</td>\n<td>\n9065\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n9066 rows × 2 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb139\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb139-1\"><a href=\"#cb139-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_df <span class=\"op\">=</span> pd.merge(ratings_small_df, movie_id, on <span class=\"op\">=</span>[<span class=\"st\">&#39;movieId&#39;</span>], how<span class=\"op\">=</span><span class=\"st\">&#39;left&#39;</span>)</span>\n<span id=\"cb139-2\"><a href=\"#cb139-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_df</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieId\n</th>\n<th>\nrating\n</th>\n<th>\ntimestamp\n</th>\n<th>\nmovieid\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n31\n</td>\n<td>\n2.5\n</td>\n<td>\n1260759144\n</td>\n<td>\n0\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n1\n</td>\n<td>\n1029\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759179\n</td>\n<td>\n1\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n1\n</td>\n<td>\n1061\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759182\n</td>\n<td>\n2\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n1\n</td>\n<td>\n1129\n</td>\n<td>\n2.0\n</td>\n<td>\n1260759185\n</td>\n<td>\n3\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n1\n</td>\n<td>\n1172\n</td>\n<td>\n4.0\n</td>\n<td>\n1260759205\n</td>\n<td>\n4\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n99999\n</th>\n<td>\n671\n</td>\n<td>\n6268\n</td>\n<td>\n2.5\n</td>\n<td>\n1065579370\n</td>\n<td>\n7005\n</td>\n</tr>\n<tr>\n<th>\n100000\n</th>\n<td>\n671\n</td>\n<td>\n6269\n</td>\n<td>\n4.0\n</td>\n<td>\n1065149201\n</td>\n<td>\n4771\n</td>\n</tr>\n<tr>\n<th>\n100001\n</th>\n<td>\n671\n</td>\n<td>\n6365\n</td>\n<td>\n4.0\n</td>\n<td>\n1070940363\n</td>\n<td>\n1329\n</td>\n</tr>\n<tr>\n<th>\n100002\n</th>\n<td>\n671\n</td>\n<td>\n6385\n</td>\n<td>\n2.5\n</td>\n<td>\n1070979663\n</td>\n<td>\n1331\n</td>\n</tr>\n<tr>\n<th>\n100003\n</th>\n<td>\n671\n</td>\n<td>\n6565\n</td>\n<td>\n3.5\n</td>\n<td>\n1074784724\n</td>\n<td>\n2946\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n100004 rows × 5 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb140\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb140-1\"><a href=\"#cb140-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_df <span class=\"op\">=</span> ratings_small_df[[<span class=\"st\">&#39;userId&#39;</span>,<span class=\"st\">&#39;movieid&#39;</span>,<span class=\"st\">&#39;rating&#39;</span>,<span class=\"st\">&#39;timestamp&#39;</span>]]  <span class=\"co\">#更新 movieId ----&gt; movieid</span></span>\n<span id=\"cb140-2\"><a href=\"#cb140-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>ratings_small_df</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieid\n</th>\n<th>\nrating\n</th>\n<th>\ntimestamp\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n0\n</th>\n<td>\n1\n</td>\n<td>\n0\n</td>\n<td>\n2.5\n</td>\n<td>\n1260759144\n</td>\n</tr>\n<tr>\n<th>\n1\n</th>\n<td>\n1\n</td>\n<td>\n1\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759179\n</td>\n</tr>\n<tr>\n<th>\n2\n</th>\n<td>\n1\n</td>\n<td>\n2\n</td>\n<td>\n3.0\n</td>\n<td>\n1260759182\n</td>\n</tr>\n<tr>\n<th>\n3\n</th>\n<td>\n1\n</td>\n<td>\n3\n</td>\n<td>\n2.0\n</td>\n<td>\n1260759185\n</td>\n</tr>\n<tr>\n<th>\n4\n</th>\n<td>\n1\n</td>\n<td>\n4\n</td>\n<td>\n4.0\n</td>\n<td>\n1260759205\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n99999\n</th>\n<td>\n671\n</td>\n<td>\n7005\n</td>\n<td>\n2.5\n</td>\n<td>\n1065579370\n</td>\n</tr>\n<tr>\n<th>\n100000\n</th>\n<td>\n671\n</td>\n<td>\n4771\n</td>\n<td>\n4.0\n</td>\n<td>\n1065149201\n</td>\n</tr>\n<tr>\n<th>\n100001\n</th>\n<td>\n671\n</td>\n<td>\n1329\n</td>\n<td>\n4.0\n</td>\n<td>\n1070940363\n</td>\n</tr>\n<tr>\n<th>\n100002\n</th>\n<td>\n671\n</td>\n<td>\n1331\n</td>\n<td>\n2.5\n</td>\n<td>\n1070979663\n</td>\n</tr>\n<tr>\n<th>\n100003\n</th>\n<td>\n671\n</td>\n<td>\n2946\n</td>\n<td>\n3.5\n</td>\n<td>\n1074784724\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n100004 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb141\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb141-1\"><a href=\"#cb141-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 用户物品统计</span></span>\n<span id=\"cb141-2\"><a href=\"#cb141-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># unique()是以 数组形式（numpy.ndarray）返回列的所有唯一值（特征的所有唯一值）</span></span>\n<span id=\"cb141-3\"><a href=\"#cb141-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># nunique() Return number of unique elements in the object.即返回的是唯一值的个数</span></span>\n<span id=\"cb141-4\"><a href=\"#cb141-4\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb141-5\"><a href=\"#cb141-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>n_users <span class=\"op\">=</span> ratings_small_df.userId.nunique()</span>\n<span id=\"cb141-6\"><a href=\"#cb141-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>n_users</span></code></pre></div>\n<pre><code>671</code></pre>\n<div class=\"sourceCode\" id=\"cb143\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb143-1\"><a href=\"#cb143-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>n_items <span class=\"op\">=</span> ratings_small_df.movieid.nunique()</span>\n<span id=\"cb143-2\"><a href=\"#cb143-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>n_items </span></code></pre></div>\n<pre><code>9066</code></pre>\n<div class=\"sourceCode\" id=\"cb145\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb145-1\"><a href=\"#cb145-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 拆分数据集</span></span>\n<span id=\"cb145-2\"><a href=\"#cb145-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> sklearn.model_selection <span class=\"im\">import</span> train_test_split</span>\n<span id=\"cb145-3\"><a href=\"#cb145-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#按照训练集70% 测试集30%的比例 对数据进行拆分</span></span>\n<span id=\"cb145-4\"><a href=\"#cb145-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>train_data,test_data <span class=\"op\">=</span> train_test_split(ratings_small_df,test_size<span class=\"op\">=</span> <span class=\"fl\">0.3</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb146\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb146-1\"><a href=\"#cb146-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>train_data</span></code></pre></div>\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n    \n    .dataframe thead th {\n        text-align: right;\n    }\n\n</style>\n<table border=\"1\" class=\"dataframe\">\n<thead>\n<tr style=\"text-align: right;\">\n<th>\n</th>\n<th>\nuserId\n</th>\n<th>\nmovieid\n</th>\n<th>\nrating\n</th>\n<th>\ntimestamp\n</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<th>\n69526\n</th>\n<td>\n481\n</td>\n<td>\n329\n</td>\n<td>\n4.0\n</td>\n<td>\n1437001087\n</td>\n</tr>\n<tr>\n<th>\n41670\n</th>\n<td>\n299\n</td>\n<td>\n917\n</td>\n<td>\n3.5\n</td>\n<td>\n1344188856\n</td>\n</tr>\n<tr>\n<th>\n49260\n</th>\n<td>\n358\n</td>\n<td>\n288\n</td>\n<td>\n2.0\n</td>\n<td>\n957480147\n</td>\n</tr>\n<tr>\n<th>\n39317\n</th>\n<td>\n287\n</td>\n<td>\n3582\n</td>\n<td>\n4.0\n</td>\n<td>\n1470168974\n</td>\n</tr>\n<tr>\n<th>\n35991\n</th>\n<td>\n262\n</td>\n<td>\n2094\n</td>\n<td>\n3.0\n</td>\n<td>\n1433899624\n</td>\n</tr>\n<tr>\n<th>\n...\n</th>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n<td>\n...\n</td>\n</tr>\n<tr>\n<th>\n6262\n</th>\n<td>\n33\n</td>\n<td>\n1095\n</td>\n<td>\n2.0\n</td>\n<td>\n1032769543\n</td>\n</tr>\n<tr>\n<th>\n8504\n</th>\n<td>\n56\n</td>\n<td>\n367\n</td>\n<td>\n2.0\n</td>\n<td>\n1467005360\n</td>\n</tr>\n<tr>\n<th>\n8540\n</th>\n<td>\n56\n</td>\n<td>\n1435\n</td>\n<td>\n4.0\n</td>\n<td>\n1467006577\n</td>\n</tr>\n<tr>\n<th>\n77937\n</th>\n<td>\n542\n</td>\n<td>\n1496\n</td>\n<td>\n1.0\n</td>\n<td>\n1424966216\n</td>\n</tr>\n<tr>\n<th>\n94226\n</th>\n<td>\n624\n</td>\n<td>\n476\n</td>\n<td>\n3.0\n</td>\n<td>\n1053249671\n</td>\n</tr>\n</tbody>\n</table>\n<p>\n70002 rows × 4 columns\n</p>\n</div>\n<div class=\"sourceCode\" id=\"cb147\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb147-1\"><a href=\"#cb147-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 训练集 用户-物品 矩阵</span></span>\n<span id=\"cb147-2\"><a href=\"#cb147-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_item_matrix <span class=\"op\">=</span> np.zeros((n_users,n_items))</span>\n<span id=\"cb147-3\"><a href=\"#cb147-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_item_matrix.shape</span></code></pre></div>\n<pre><code>(671, 9066)</code></pre>\n<div class=\"sourceCode\" id=\"cb149\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb149-1\"><a href=\"#cb149-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># iterrows() : 将DataFrame迭代成（index ,series）</span></span>\n<span id=\"cb149-2\"><a href=\"#cb149-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># iteritems()： 将DataFrame迭代成（列名，series）</span></span>\n<span id=\"cb149-3\"><a href=\"#cb149-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># itertuples()： 将DataFrame迭代成元组 </span></span>\n<span id=\"cb149-4\"><a href=\"#cb149-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span> line <span class=\"kw\">in</span> train_data.itertuples():</span>\n<span id=\"cb149-5\"><a href=\"#cb149-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>    user_item_matrix[line[<span class=\"dv\">1</span>]<span class=\"op\">-</span><span class=\"dv\">1</span>,line[<span class=\"dv\">2</span>]]<span class=\"op\">=</span>line[<span class=\"dv\">3</span>]</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb150\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb150-1\"><a href=\"#cb150-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_item_matrix</span></code></pre></div>\n<pre><code>array([[0., 3., 3., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       ...,\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.]])</code></pre>\n<div class=\"sourceCode\" id=\"cb152\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb152-1\"><a href=\"#cb152-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_item_matrix.shape</span></code></pre></div>\n<pre><code>(671, 9066)</code></pre>\n<div class=\"sourceCode\" id=\"cb154\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb154-1\"><a href=\"#cb154-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 构建用户相似矩阵 ---采用余弦距离</span></span>\n<span id=\"cb154-2\"><a href=\"#cb154-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> sklearn.metrics.pairwise <span class=\"im\">import</span> pairwise_distances</span>\n<span id=\"cb154-3\"><a href=\"#cb154-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 相似度计算 定义余弦距离</span></span>\n<span id=\"cb154-4\"><a href=\"#cb154-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_similarity_m <span class=\"op\">=</span> pairwise_distances(user_item_matrix,metric<span class=\"op\">=</span><span class=\"st\">&#39;cosine&#39;</span>)  <span class=\"co\"># 每个用户为1行数据，故此处不需要再进行转置</span></span></code></pre></div>\n<figure>\n<img src=\"/.top//attachment:580b16df-141a-4cce-a502-53a01d1ecb68.png\" alt=\"image.png\">\n<figcaption aria-hidden=\"true\">image.png</figcaption>\n</figure>\n<div class=\"sourceCode\" id=\"cb155\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb155-1\"><a href=\"#cb155-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>a<span class=\"op\">=</span>[[<span class=\"dv\">1</span>,<span class=\"dv\">3</span>],[<span class=\"dv\">2</span>,<span class=\"dv\">2</span>]]</span>\n<span id=\"cb155-2\"><a href=\"#cb155-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>a</span></code></pre></div>\n<pre><code>[[1, 3], [2, 2]]</code></pre>\n<div class=\"sourceCode\" id=\"cb157\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb157-1\"><a href=\"#cb157-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>pairwise_distances(a,metric<span class=\"op\">=</span><span class=\"st\">&#39;euclidean&#39;</span>)</span></code></pre></div>\n<pre><code>array([[0.        , 1.41421356],\n       [1.41421356, 0.        ]])</code></pre>\n<div class=\"sourceCode\" id=\"cb159\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb159-1\"><a href=\"#cb159-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>b <span class=\"op\">=</span> np.array([[<span class=\"dv\">1</span>,<span class=\"dv\">2</span>],[<span class=\"dv\">1</span>,<span class=\"dv\">3</span>],[<span class=\"dv\">2</span>,<span class=\"dv\">1</span>]])</span>\n<span id=\"cb159-2\"><a href=\"#cb159-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>b</span></code></pre></div>\n<pre><code>array([[1, 2],\n       [1, 3],\n       [2, 1]])</code></pre>\n<div class=\"sourceCode\" id=\"cb161\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb161-1\"><a href=\"#cb161-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>pairwise_distances(b,metric<span class=\"op\">=</span><span class=\"st\">&#39;euclidean&#39;</span>) <span class=\"co\">#结果数组的第一行第二列表示 a[0]与a[1]的距离</span></span></code></pre></div>\n<pre><code>array([[0.        , 1.        , 1.41421356],\n       [1.        , 0.        , 2.23606798],\n       [1.41421356, 2.23606798, 0.        ]])</code></pre>\n<div class=\"sourceCode\" id=\"cb163\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb163-1\"><a href=\"#cb163-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>pairwise_distances(b,metric<span class=\"op\">=</span><span class=\"st\">&#39;cosine&#39;</span>)</span></code></pre></div>\n<pre><code>array([[0.        , 0.01005051, 0.2       ],\n       [0.01005051, 0.        , 0.29289322],\n       [0.2       , 0.29289322, 0.        ]])</code></pre>\n<div class=\"sourceCode\" id=\"cb165\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb165-1\"><a href=\"#cb165-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>b.shape</span></code></pre></div>\n<pre><code>(3, 2)</code></pre>\n<div class=\"sourceCode\" id=\"cb167\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb167-1\"><a href=\"#cb167-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>b[<span class=\"dv\">1</span>]</span></code></pre></div>\n<pre><code>array([1, 3])</code></pre>\n<div class=\"sourceCode\" id=\"cb169\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb169-1\"><a href=\"#cb169-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>b[<span class=\"dv\">0</span>]</span></code></pre></div>\n<pre><code>array([1, 2])</code></pre>\n<div class=\"sourceCode\" id=\"cb171\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb171-1\"><a href=\"#cb171-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_similarity_m.shape</span></code></pre></div>\n<pre><code>(671, 671)</code></pre>\n<div class=\"sourceCode\" id=\"cb173\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb173-1\"><a href=\"#cb173-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_similarity_m[<span class=\"dv\">0</span>:<span class=\"dv\">5</span>,<span class=\"dv\">0</span>:<span class=\"dv\">5</span>].<span class=\"bu\">round</span>(<span class=\"dv\">2</span>)</span></code></pre></div>\n<pre><code>array([[0.  , 1.  , 1.  , 0.94, 0.97],\n       [1.  , 0.  , 0.89, 0.93, 0.92],\n       [1.  , 0.89, 0.  , 0.93, 0.93],\n       [0.94, 0.93, 0.93, 0.  , 0.94],\n       [0.97, 0.92, 0.93, 0.94, 0.  ]])</code></pre>\n<div class=\"sourceCode\" id=\"cb175\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb175-1\"><a href=\"#cb175-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_similarity_m_triu <span class=\"op\">=</span> np.triu(user_similarity_m,k<span class=\"op\">=</span><span class=\"dv\">1</span>) <span class=\"co\">#取得上三角数据</span></span>\n<span id=\"cb175-2\"><a href=\"#cb175-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>np.<span class=\"bu\">round</span>(user_similarity_m_triu[user_similarity_m_triu.nonzero()],<span class=\"dv\">3</span>)</span></code></pre></div>\n<pre><code>array([1.   , 1.   , 0.938, ..., 0.934, 0.919, 0.814])</code></pre>\n<div class=\"sourceCode\" id=\"cb177\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb177-1\"><a href=\"#cb177-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_sim_nonzero <span class=\"op\">=</span> np.<span class=\"bu\">round</span>(user_similarity_m_triu[user_similarity_m_triu.nonzero()],<span class=\"dv\">3</span>)</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb178\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb178-1\"><a href=\"#cb178-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>np.percentile(user_sim_nonzero,np.arange(<span class=\"dv\">0</span>,<span class=\"dv\">101</span>,<span class=\"dv\">10</span>))</span></code></pre></div>\n<pre><code>array([0.316, 0.844, 0.885, 0.911, 0.93 , 0.947, 0.961, 0.976, 1.   ,\n       1.   , 1.   ])</code></pre>\n<h4 id=\"训练集预测\">训练集预测</h4>\n<div class=\"sourceCode\" id=\"cb180\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb180-1\"><a href=\"#cb180-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>mean_user_rating <span class=\"op\">=</span> user_item_matrix.mean(axis<span class=\"op\">=</span><span class=\"dv\">1</span>)</span>\n<span id=\"cb180-2\"><a href=\"#cb180-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>mean_user_rating</span></code></pre></div>\n<pre><code>array([0.00297816, 0.0198544 , 0.01301566, 0.06265167, 0.03027796,\n       0.01196779, 0.02404589, 0.03805427, 0.01114053, 0.0147805 ,\n       0.01047871, 0.01301566, 0.01615928, 0.004743  , 0.33984116,\n       0.01069932, 0.0991617 , 0.0147805 , 0.11780278, 0.02294286,\n       0.0443415 , 0.04936025, 0.21111846, 0.00683874, 0.00617692,\n       0.04031546, 0.00816236, 0.01555261, 0.00363997, 0.29643724,\n       0.02625193, 0.01080962, 0.03684094, 0.05702625, 0.0025921 ,\n       0.03000221, 0.01147143, 0.03838518, 0.0196338 , 0.01301566,\n       0.0592323 , 0.0196338 , 0.02172954, 0.00694904, 0.00512905,\n       0.01312597, 0.01069932, 0.14212442, 0.02371498, 0.01169204,\n       0.01069932, 0.01941319, 0.00893448, 0.01384293, 0.00838297,\n       0.14615045, 0.06254136, 0.01753805, 0.02090227, 0.02018531,\n       0.04197   , 0.0172623 , 0.02454225, 0.00739025, 0.00694904,\n       0.01544231, 0.02856828, 0.03331127, 0.02327377, 0.02856828,\n       0.00794176, 0.05035297, 0.42096845, 0.01544231, 0.0394882 ,\n       0.00573572, 0.07346128, 0.08234061, 0.00921024, 0.0100375 ,\n       0.05283477, 0.01235385, 0.04555482, 0.03424884, 0.0247077 ,\n       0.05084933, 0.00650783, 0.06281712, 0.02448709, 0.01577322,\n       0.04671299, 0.02779616, 0.0444518 , 0.0497463 , 0.08769027,\n       0.02288771, 0.03160159, 0.02332892, 0.0497463 , 0.00661813,\n       0.0173726 , 0.1978822 , 0.02437679, 0.02360468, 0.13942202,\n       0.01411869, 0.00656298, 0.00783146, 0.00628723, 0.04015001,\n       0.09541143, 0.00650783, 0.00959629, 0.00827267, 0.01351202,\n       0.00667328, 0.01389808, 0.05592323, 0.17185087, 0.03833002,\n       0.02503861, 0.00882418, 0.00937569, 0.02415619, 0.0666777 ,\n       0.01808957, 0.00573572, 0.09695566, 0.00595632, 0.09254357,\n       0.01433929, 0.0297816 , 0.03518641, 0.10065078, 0.00529451,\n       0.01637988, 0.02018531, 0.02024046, 0.02090227, 0.01213325,\n       0.00816236, 0.01103022, 0.02365983, 0.01158173, 0.01455989,\n       0.02134348, 0.01312597, 0.04081182, 0.06121774, 0.09557688,\n       0.01654533, 0.05664019, 0.01698654, 0.00926539, 0.01279506,\n       0.01604897, 0.08697331, 0.00562541, 0.04070152, 0.03132583,\n       0.02702405, 0.00915508, 0.02007501, 0.02421134, 0.10870285,\n       0.01422899, 0.00761085, 0.02790646, 0.03623428, 0.00590117,\n       0.01588352, 0.0051842 , 0.01169204, 0.00639753, 0.03551732,\n       0.05834988, 0.07059343, 0.03259431, 0.01080962, 0.00452239,\n       0.01108537, 0.04301787, 0.01433929, 0.01125083, 0.05625414,\n       0.0099272 , 0.1014229 , 0.02867858, 0.03320097, 0.02150893,\n       0.00739025, 0.01687624, 0.01886168, 0.01367748, 0.10533863,\n       0.02702405, 0.02051621, 0.01979925, 0.12221487, 0.05846018,\n       0.03910214, 0.01831017, 0.01086477, 0.00871388, 0.05542687,\n       0.00948599, 0.00672844, 0.01604897, 0.00452239, 0.00683874,\n       0.01610413, 0.2176263 , 0.18409442, 0.06254136, 0.01753805,\n       0.02465255, 0.03430399, 0.01433929, 0.03855063, 0.07842488,\n       0.00501875, 0.02658284, 0.01158173, 0.02625193, 0.00827267,\n       0.00921024, 0.00750055, 0.02349437, 0.00987205, 0.03347673,\n       0.00937569, 0.20416942, 0.00871388, 0.03160159, 0.04858813,\n       0.06507831, 0.01075447, 0.02432164, 0.0843812 , 0.07246856,\n       0.0147805 , 0.14328259, 0.08151335, 0.02195014, 0.04268696,\n       0.00739025, 0.07677035, 0.03595853, 0.0051842 , 0.05581293,\n       0.03628943, 0.01147143, 0.05840503, 0.03739246, 0.04252151,\n       0.00650783, 0.02768586, 0.01025811, 0.00926539, 0.01235385,\n       0.01047871, 0.13710567, 0.03000221, 0.01091992, 0.054379  ,\n       0.00959629, 0.01158173, 0.10324289, 0.00628723, 0.06176925,\n       0.02029561, 0.01158173, 0.0296713 , 0.01114053, 0.06585043,\n       0.00479815, 0.01808957, 0.0147805 , 0.01136113, 0.00838297,\n       0.02509376, 0.03524156, 0.05333113, 0.01433929, 0.10302228,\n       0.00915508, 0.0893448 , 0.02029561, 0.0049636 , 0.02090227,\n       0.02553497, 0.08018972, 0.02217075, 0.25672844, 0.06849768,\n       0.00634238, 0.03662034, 0.02647253, 0.11763733, 0.01389808,\n       0.00551511, 0.00750055, 0.06243106, 0.03309067, 0.00595632,\n       0.16997573, 0.02029561, 0.0148908 , 0.04594088, 0.00468784,\n       0.23830796, 0.07290977, 0.08112729, 0.01169204, 0.01246415,\n       0.03524156, 0.00573572, 0.01588352, 0.00595632, 0.01571807,\n       0.02283256, 0.01323627, 0.00700419, 0.04180454, 0.00446724,\n       0.00783146, 0.02073682, 0.04649239, 0.00584602, 0.02680344,\n       0.00689389, 0.00816236, 0.02503861, 0.01086477, 0.007666  ,\n       0.00816236, 0.00330907, 0.01323627, 0.02950585, 0.01384293,\n       0.00595632, 0.05868079, 0.01114053, 0.04500331, 0.0619347 ,\n       0.09055813, 0.00650783, 0.01621443, 0.00639753, 0.0495257 ,\n       0.01378778, 0.02443194, 0.1039047 , 0.01544231, 0.09039268,\n       0.00419148, 0.00948599, 0.15243768, 0.01483565, 0.0098169 ,\n       0.01533201, 0.03071917, 0.05404809, 0.00909993, 0.0224465 ,\n       0.0097066 , 0.05217295, 0.00628723, 0.01345687, 0.03055372,\n       0.0446724 , 0.00849327, 0.06165895, 0.00838297, 0.00705934,\n       0.01808957, 0.00645268, 0.03750276, 0.01990955, 0.28375248,\n       0.02945069, 0.07654975, 0.01544231, 0.11973307, 0.03132583,\n       0.02691374, 0.09276417, 0.22865652, 0.01246415, 0.03430399,\n       0.02923009, 0.00617692, 0.0125193 , 0.04511361, 0.00683874,\n       0.03540702, 0.01632473, 0.01544231, 0.00595632, 0.01676594,\n       0.024818  , 0.09303993, 0.00783146, 0.0098169 , 0.11675491,\n       0.0270792 , 0.10699316, 0.05978381, 0.01566292, 0.00799691,\n       0.00882418, 0.05129054, 0.00650783, 0.01698654, 0.00893448,\n       0.02724465, 0.04114273, 0.0494154 , 0.01643503, 0.02823737,\n       0.0101478 , 0.0296713 , 0.09458416, 0.00799691, 0.01588352,\n       0.06507831, 0.09458416, 0.04560997, 0.00457754, 0.09618354,\n       0.09303993, 0.02013016, 0.06221046, 0.05382749, 0.00606662,\n       0.02161924, 0.00683874, 0.00612177, 0.05779837, 0.01367748,\n       0.03568277, 0.07572248, 0.01775866, 0.00441209, 0.00540481,\n       0.00904478, 0.01808957, 0.00639753, 0.00871388, 0.03943305,\n       0.01599382, 0.33085153, 0.02294286, 0.0101478 , 0.00821752,\n       0.01660049, 0.14179351, 0.02272226, 0.00705934, 0.08283697,\n       0.15784249, 0.0121884 , 0.13335539, 0.01058901, 0.01119568,\n       0.0593426 , 0.02095742, 0.30228326, 0.0048533 , 0.01869623,\n       0.0569711 , 0.24652548, 0.02614163, 0.01301566, 0.14284139,\n       0.01114053, 0.00490845, 0.02774101, 0.03132583, 0.1185749 ,\n       0.1435032 , 0.01819987, 0.03259431, 0.00573572, 0.004743  ,\n       0.0398191 , 0.04037062, 0.01781381, 0.00672844, 0.0051842 ,\n       0.01875138, 0.01941319, 0.02923009, 0.02415619, 0.00617692,\n       0.03309067, 0.03419369, 0.0048533 , 0.01235385, 0.05741231,\n       0.05658504, 0.03353188, 0.01334657, 0.004743  , 0.09927201,\n       0.0051842 , 0.01125083, 0.01334657, 0.2351092 , 0.04367968,\n       0.00948599, 0.00921024, 0.00584602, 0.1037944 , 0.00876903,\n       0.03805427, 0.01411869, 0.19170527, 0.05619899, 0.03987426,\n       0.01384293, 0.06083168, 0.04003971, 0.01968895, 0.03992941,\n       0.00777631, 0.03171189, 0.03325612, 0.16804544, 0.02062652,\n       0.03298037, 0.01384293, 0.0394882 , 0.08030002, 0.01378778,\n       0.03011251, 0.10070593, 0.00739025, 0.01058901, 0.00551511,\n       0.00683874, 0.01704169, 0.01544231, 0.09265387, 0.02713435,\n       0.02178469, 0.63484447, 0.03562762, 0.00623208, 0.03353188,\n       0.02360468, 0.00783146, 0.06358923, 0.01511141, 0.01831017,\n       0.00959629, 0.01329142, 0.07224796, 0.04378998, 0.03253916,\n       0.07798368, 0.07026252, 0.04616148, 0.52404589, 0.00871388,\n       0.00777631, 0.01147143, 0.01180234, 0.02283256, 0.03634458,\n       0.01577322, 0.02950585, 0.0101478 , 0.09022722, 0.14284139,\n       0.01125083, 0.0917163 , 0.00805206, 0.00209574, 0.22887712,\n       0.00595632, 0.03502096, 0.00821752, 0.06072138, 0.09728657,\n       0.0150011 , 0.15938672, 0.01400838, 0.01047871, 0.02228105,\n       0.00849327, 0.03904699, 0.02128833, 0.02514891, 0.05118023,\n       0.14399956, 0.06243106, 0.07842488, 0.05757776, 0.01119568,\n       0.01268476, 0.03926759, 0.03617913, 0.00330907, 0.11096404,\n       0.0196338 , 0.12618575, 0.08879329, 0.02283256, 0.01913744,\n       0.01080962, 0.01742775, 0.01560777, 0.02889918, 0.10225017,\n       0.01069932, 0.01764836, 0.0100375 , 0.01257445, 0.04086698,\n       0.02614163, 0.01185749, 0.03105008, 0.39383411, 0.02079197,\n       0.04290757, 0.04500331, 0.0223362 , 0.00959629, 0.0075557 ,\n       0.00937569, 0.01185749, 0.00772116, 0.00534966, 0.00750055,\n       0.00739025, 0.00976175, 0.004743  , 0.01455989, 0.01191264,\n       0.04059122, 0.01169204, 0.00490845, 0.01125083, 0.007666  ,\n       0.05834988, 0.05162144, 0.07715641, 0.0245974 , 0.00827267,\n       0.00595632, 0.08509817, 0.01753805, 0.20257004, 0.03353188,\n       0.0445621 , 0.00419148, 0.01952349, 0.03827487, 0.02950585,\n       0.00843812, 0.01742775, 0.00871388, 0.15927642, 0.1088683 ,\n       0.00816236, 0.01687624, 0.00739025, 0.0098169 , 0.00716964,\n       0.0347452 ])</code></pre>\n<div class=\"sourceCode\" id=\"cb182\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb182-1\"><a href=\"#cb182-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>rating_diff <span class=\"op\">=</span> (user_item_matrix <span class=\"op\">-</span> mean_user_rating[:,np.newaxis])   <span class=\"co\"># np.newaxis作用：为mean_user_rating增加一个维度，实现加减操作</span></span>\n<span id=\"cb182-2\"><a href=\"#cb182-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>rating_diff</span></code></pre></div>\n<pre><code>array([[-2.97816016e-03,  2.99702184e+00,  2.99702184e+00, ...,\n        -2.97816016e-03, -2.97816016e-03, -2.97816016e-03],\n       [-1.98544011e-02, -1.98544011e-02, -1.98544011e-02, ...,\n        -1.98544011e-02, -1.98544011e-02, -1.98544011e-02],\n       [-1.30156629e-02, -1.30156629e-02, -1.30156629e-02, ...,\n        -1.30156629e-02, -1.30156629e-02, -1.30156629e-02],\n       ...,\n       [-9.81689830e-03, -9.81689830e-03, -9.81689830e-03, ...,\n        -9.81689830e-03, -9.81689830e-03, -9.81689830e-03],\n       [-7.16964483e-03, -7.16964483e-03, -7.16964483e-03, ...,\n        -7.16964483e-03, -7.16964483e-03, -7.16964483e-03],\n       [-3.47452019e-02, -3.47452019e-02, -3.47452019e-02, ...,\n        -3.47452019e-02, -3.47452019e-02, -3.47452019e-02]])</code></pre>\n<div class=\"sourceCode\" id=\"cb184\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb184-1\"><a href=\"#cb184-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_prediction <span class=\"op\">=</span> mean_user_rating[:,np.newaxis] <span class=\"op\">+</span> user_similarity_m.dot(rating_diff) <span class=\"op\">/</span> np.array([np.<span class=\"bu\">abs</span>(user_similarity_m).<span class=\"bu\">sum</span>(axis<span class=\"op\">=</span><span class=\"dv\">1</span>)]).T</span>\n<span id=\"cb184-2\"><a href=\"#cb184-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 处以np.array([np.abs(item_similarity_m).sum(axis=1)]是为了可以使评分在1~5之间，使1~5的标准化</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb185\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb185-1\"><a href=\"#cb185-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_prediction</span></code></pre></div>\n<pre><code>array([[ 8.48587738e-02,  1.11549860e-01,  7.78496257e-02, ...,\n        -3.30873704e-02, -3.59785123e-02, -3.59132569e-02],\n       [ 9.36489784e-02,  1.35396758e-01,  1.04357090e-01, ...,\n        -1.62815182e-02, -1.93136443e-02, -1.93247190e-02],\n       [ 9.44428457e-02,  1.33314515e-01,  9.83052575e-02, ...,\n        -2.28228892e-02, -2.58037344e-02, -2.59258365e-02],\n       ...,\n       [ 9.29750987e-02,  1.27902780e-01,  9.32275326e-02, ...,\n        -2.60694824e-02, -2.89101875e-02, -2.87905826e-02],\n       [ 8.62056229e-02,  1.26697599e-01,  9.17810994e-02, ...,\n        -2.88942031e-02, -3.19119828e-02, -3.20590645e-02],\n       [ 1.17342284e-01,  1.50739909e-01,  1.17908253e-01, ...,\n        -7.69495365e-05, -2.99819315e-03, -3.02101562e-03]])</code></pre>\n<div class=\"sourceCode\" id=\"cb187\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb187-1\"><a href=\"#cb187-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># 只取数据集中有评分的数据集进行评估</span></span>\n<span id=\"cb187-2\"><a href=\"#cb187-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> sklearn.metrics <span class=\"im\">import</span> mean_squared_error</span>\n<span id=\"cb187-3\"><a href=\"#cb187-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"im\">from</span> math <span class=\"im\">import</span> sqrt</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb188\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb188-1\"><a href=\"#cb188-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>prediction_flatten <span class=\"op\">=</span> user_prediction[user_item_matrix.nonzero()]</span>\n<span id=\"cb188-2\"><a href=\"#cb188-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>prediction_flatten</span></code></pre></div>\n<pre><code>array([0.11154986, 0.07784963, 0.14877094, ..., 0.04236321, 0.01114962,\n       0.02448394])</code></pre>\n<div class=\"sourceCode\" id=\"cb190\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb190-1\"><a href=\"#cb190-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_item_matrix_flatten <span class=\"op\">=</span> user_item_matrix[user_item_matrix.nonzero()]</span>\n<span id=\"cb190-2\"><a href=\"#cb190-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>user_item_matrix_flatten</span></code></pre></div>\n<pre><code>array([3., 3., 2., ..., 4., 4., 4.])</code></pre>\n<div class=\"sourceCode\" id=\"cb192\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb192-1\"><a href=\"#cb192-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>error_test <span class=\"op\">=</span> sqrt(mean_squared_error(prediction_flatten,user_item_matrix_flatten)) <span class=\"co\"># 均方根误差计算</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb193\"><pre class=\"sourceCode python\"><code class=\"sourceCode python\"><span id=\"cb193-1\"><a href=\"#cb193-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>error_test</span></code></pre></div>\n<pre><code>3.390138302832629</code></pre>\n<hr>\n<h3 id=\"about-me\">About ME</h3>\n<h5 id=\"读书城南-在未来面前我们都是孩子\">👋 读书城南，🤔\n在未来面前，我们都是孩子～</h5>\n<ul>\n<li>📙\n一个热衷于探索学习新方向、新事物的智能产品经理，闲暇时间喜欢coding💻、画图🎨、音乐🎵、学习ing~</li>\n</ul>\n<h5 id=\"social-media\">👋 Social Media</h5>\n<ul>\n<li><p>🛠️ Blog: <a href=\"http://oceaneyes.top\">http://oceaneyes.top</a></p></li>\n<li><p>⚡ PM导航: <a href=\"https://pmhub.oceangzy.top\">https://pmhub.oceangzy.top</a></p></li>\n<li><p>☘️ CNBLOG: <a href=\"https://www.cnblogs.com/oceaneyes-gzy/\">https://www.cnblogs.com/oceaneyes-gzy/</a></p></li>\n<li><p>🌱 AI PRJ自己部署的一些算法demo: <a href=\"http://ai.oceangzy.top/\">http://ai.oceangzy.top/</a></p></li>\n<li><p>📫 Email: 1450136519@qq.com</p></li>\n<li><p>💬 WeChat: <a href=\"https://oceaneyes.top/img/wechatqrcode.jpg\">OCEANGZY</a></p></li>\n<li><p>💬 公众号: <a href=\"https://oceaneyes.top/img/wechatgzh.jpeg\">UncleJoker-GZY</a></p></li>\n</ul>\n<h5 id=\"加入小组\">👋 加入小组~</h5>\n<p><img src=\"https://oceaneyes.top/img/zhishigroup.jpg\" title=\"加入组织\" alt width=\"240\"></p>\n<h5 id=\"感谢打赏\">👋 感谢打赏~</h5>\n<p><img src=\"https://oceaneyes.top/img/alipay.jpg\" title=\"支付宝打赏\" alt width=\"140\">\n<img src=\"https://oceaneyes.top/img/wechatpay.jpg\" title=\"微信打赏\" alt width=\"140\"></p>\n","categories":[{"name":"Artificial Intelligence","path":"api/categories/Artificial Intelligence.json"},{"name":"Machine Learning","path":"api/categories/Machine Learning.json"},{"name":"Algorithm","path":"api/categories/Algorithm.json"}],"tags":[{"name":"Machine Learning","path":"api/tags/Machine Learning.json"},{"name":"Algorithm","path":"api/tags/Algorithm.json"},{"name":"推荐","path":"api/tags/推荐.json"},{"name":"关联规则算法","path":"api/tags/关联规则算法.json"}]}