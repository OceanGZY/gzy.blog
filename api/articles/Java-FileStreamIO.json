{"title":"Java-FileStreamIO","slug":"Java-FileStreamIO","date":"2016-03-02T15:20:00.000Z","updated":"2022-09-30T06:56:37.157Z","comments":true,"path":"api/articles/Java-FileStreamIO.json","excerpt":null,"covers":["https://oceaneyes.top/img/zhishigroup.jpg","https://oceaneyes.top/img/alipay.jpg","https://oceaneyes.top/img/wechatpay.jpg"],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"java-filestreamio\">Java-FileStreamIO</h1>\n<pre><code>import java.io.*;\n\npublic class StreamFileIODemo &#123;\n    public void printChar() throws IOException &#123;\n        //使用BufferedReader从控制台读取输入\n        char c;\n        //使用System.in 创建BufferedReader\n        BufferedReader br1 = new BufferedReader(new InputStreamReader(System.in));\n        System.out.println(&quot;输入字符，按Q键退出&quot;);\n        do &#123;\n            //read() 读取字符\n            c = (char) br1.read();\n            System.out.println(c);\n        &#125; while (c != &#39;Q&#39;);\n    &#125;\n\n    public void printStr() throws IOException&#123;\n        String str1;\n        //使用System.in 创建BufferedReader\n        BufferedReader br1 = new BufferedReader(new InputStreamReader(System.in));\n        System.out.println(&quot;输入字符 &#39;end&#39; 退出&quot;);\n        do &#123;\n            //readLine() 读取字符串\n            str1 = br1.readLine();\n            System.out.println(str1);\n        &#125; while (!str1.equals(&quot;end&quot;));\n\n    &#125;\n\n    public void ReadFileDemo() throws IOException&#123;\n        //FileInputStream 从文件读取数据\n        //  File f = new File(&quot;C:/java/hello&quot;);\n        //  InputStream out = new FileInputStream(f);\n        /*\n            序号  方法及描述\n            1   public void close() throws IOException&#123;&#125;\n                关闭此文件输入流并释放与此流有关的所有系统资源。抛出IOException异常。\n            2   protected void finalize()throws IOException &#123;&#125;\n                这个方法清除与该文件的连接。确保在不再引用文件输入流时调用其 close 方法。抛出IOException异常。\n            3   public int read(int r)throws IOException&#123;&#125;\n                这个方法从 InputStream 对象读取指定字节的数据。返回为整数值。返回下一字节数据，如果已经到结尾则返回-1。\n            4   public int read(byte[] r) throws IOException&#123;&#125;\n                这个方法从输入流读取r.length长度的字节。返回读取的字节数。如果是文件结尾则返回-1。\n            5   public int available() throws IOException&#123;&#125;\n                返回下一次对此输入流调用的方法可以不受阻塞地从此输入流读取的字节数。返回一个整数值。\n         */\n        System.out.println(&quot;打印输出读取文件demo&quot;);\n        InputStream is1 = new FileInputStream(&quot;test.txt&quot;);\n        int size = is1.available();\n        for (int i=0;i&lt;size;i++) &#123;\n            System.out.println((char) is1.read());\n\n        &#125;\n    &#125;\n\n    public void WriteFileDemo() throws IOException &#123;\n        //FileOutputStream 创建一个文件向文件中写数据\n        //  File f = new File(&quot;C:/java/hello&quot;);\n        //  OutputStream f = new FileOutputStream(f);\n        /*\n            序号  方法及描述\n            1   public void close() throws IOException&#123;&#125;\n                关闭此文件输入流并释放与此流有关的所有系统资源。抛出IOException异常。\n            2   protected void finalize()throws IOException &#123;&#125;\n                这个方法清除与该文件的连接。确保在不再引用文件输入流时调用其 close 方法。抛出IOException异常。\n            3   public void write(int w)throws IOException&#123;&#125;\n                这个方法把指定的字节写到输出流中。\n            4   public void write(byte[] w)\n                把指定数组中w.length长度的字节写到OutputStream中。\n         */\n        System.out.println(&quot;打印输出写入文件demo&quot;);\n        byte bWrite[] = &#123;11,21,3,38,5&#125;;\n        OutputStream os1 = new FileOutputStream(&quot;test.txt&quot;);\n        for (int i=0;i&lt;bWrite.length;i++)&#123;\n            os1.write(bWrite[i]);\n        &#125;\n        os1.close();\n    &#125;\n\n    public void CreateDirs()&#123;\n        //文件和I/O ，目录\n        /*\n            File类\n            - mkdir( )方法创建一个文件夹，成功则返回true，失败则返回false。失败表明File对象指定的路径已经存在，或者由于整个路径还不存在，该文件夹不能被创建。\n            - mkdirs()方法创建一个文件夹和它的所有父文件夹。\n        */\n        String dirname = &quot;/Users/gaozhiyong/Documents/GitHub/javaLearn/tmp/testdir/test&quot;;\n        File dir1 = new File(dirname);\n        //   创建目录\n        dir1.mkdirs();\n\n    &#125;\n\n    public void ReadDirs()&#123;\n        /*\n            一个目录其实就是一个 File 对象，它包含其他文件和文件夹。\n            如果创建一个 File 对象并且它是一个目录，那么调用 isDirectory() 方法会返回 true。\n            可以通过调用该对象上的 list() 方法，来提取它包含的文件和文件夹的列表。\n         */\n        String dirname = &quot;/Users/gaozhiyong/Documents/GitHub/javaLearn&quot;;\n        File dir2 = new File(dirname);\n        if (dir2.isDirectory())&#123;\n            System.out.println(&quot;目录&quot;+ dirname);\n            String[] s1 = dir2.list();\n            for (int i=0;i&lt;s1.length;i++)&#123;\n                File f = new File(dirname + &#39;/&#39; + s1[i]);\n                if (f.isDirectory())&#123;\n                    System.out.println(s1[i] + &quot;是一个目录&quot;);\n                &#125;else &#123;\n                    System.out.println(s1[i] + &quot;是一个文件&quot;);\n                &#125;\n            &#125;\n        &#125;else &#123;\n            System.out.println(dirname +&quot;不是一个目录&quot;);\n        &#125;\n    &#125;\n\n    public void DeleteDirs()&#123;\n        //删除文件/目录\n        /*\n            删除文件可以使用 java.io.File.delete() 方法\n            当删除某一目录时，必须保证该目录下没有其他文件才能正确删除，否则将删除失败\n         */\n        String dirname = &quot;/Users/gaozhiyong/Documents/GitHub/javaLearn/tmp/testdir&quot;;\n        File dir3 = new File(dirname);\n        File[] files = dir3.listFiles();\n        if (files != null)&#123;\n            for (File f: files)&#123;\n                if (!f.isDirectory())&#123;\n                    f.delete();\n                &#125;\n            &#125;\n        &#125;\n        dir3.delete();\n        System.out.println(&quot;删除成功&quot;);\n    &#125;\n\n\n    public static void main(String[] args) throws IOException &#123;\n        StreamFileIODemo s = new StreamFileIODemo();\n//        s.printChar();\n//        s.printStr();\n//        s.WriteFileDemo();\n//        s.CreateDirs();\n//        s.ReadDirs();\n        s.DeleteDirs();\n    &#125;\n&#125;\n</code></pre>\n<hr>\n<h3 id=\"about-me\">About ME</h3>\n<h5 id=\"读书城南-在未来面前我们都是孩子\">👋 读书城南，🤔\n在未来面前，我们都是孩子～</h5>\n<ul>\n<li>📙\n一个热衷于探索学习新方向、新事物的智能产品经理，闲暇时间喜欢coding💻、画图🎨、音乐🎵、学习ing~</li>\n</ul>\n<h5 id=\"social-media\">👋 Social Media</h5>\n<ul>\n<li><p>🛠️ Blog: <a href=\"http://oceaneyes.top\">http://oceaneyes.top</a></p></li>\n<li><p>⚡ PM导航: <a href=\"https://pmhub.oceangzy.top\">https://pmhub.oceangzy.top</a></p></li>\n<li><p>☘️ CNBLOG: <a href=\"https://www.cnblogs.com/oceaneyes-gzy/\">https://www.cnblogs.com/oceaneyes-gzy/</a></p></li>\n<li><p>🌱 AI PRJ自己部署的一些算法demo: <a href=\"http://ai.oceangzy.top/\">http://ai.oceangzy.top/</a></p></li>\n<li><p>📫 Email: 1450136519@qq.com</p></li>\n<li><p>💬 WeChat: <a href=\"https://oceaneyes.top/img/wechatqrcode.jpg\">OCEANGZY</a></p></li>\n<li><p>💬 公众号: <a href=\"https://oceaneyes.top/img/wechatgzh.jpeg\">UncleJoker-GZY</a></p></li>\n</ul>\n<h5 id=\"加入小组\">👋 加入小组~</h5>\n<p><img src=\"https://oceaneyes.top/img/zhishigroup.jpg\" title=\"加入组织\" alt width=\"240\"></p>\n<h5 id=\"感谢打赏\">👋 感谢打赏~</h5>\n<p><img src=\"https://oceaneyes.top/img/alipay.jpg\" title=\"支付宝打赏\" alt width=\"140\">\n<img src=\"https://oceaneyes.top/img/wechatpay.jpg\" title=\"微信打赏\" alt width=\"140\"></p>\n","more":"<h1 id=\"java-filestreamio\">Java-FileStreamIO</h1>\n<pre><code>import java.io.*;\n\npublic class StreamFileIODemo &#123;\n    public void printChar() throws IOException &#123;\n        //使用BufferedReader从控制台读取输入\n        char c;\n        //使用System.in 创建BufferedReader\n        BufferedReader br1 = new BufferedReader(new InputStreamReader(System.in));\n        System.out.println(&quot;输入字符，按Q键退出&quot;);\n        do &#123;\n            //read() 读取字符\n            c = (char) br1.read();\n            System.out.println(c);\n        &#125; while (c != &#39;Q&#39;);\n    &#125;\n\n    public void printStr() throws IOException&#123;\n        String str1;\n        //使用System.in 创建BufferedReader\n        BufferedReader br1 = new BufferedReader(new InputStreamReader(System.in));\n        System.out.println(&quot;输入字符 &#39;end&#39; 退出&quot;);\n        do &#123;\n            //readLine() 读取字符串\n            str1 = br1.readLine();\n            System.out.println(str1);\n        &#125; while (!str1.equals(&quot;end&quot;));\n\n    &#125;\n\n    public void ReadFileDemo() throws IOException&#123;\n        //FileInputStream 从文件读取数据\n        //  File f = new File(&quot;C:/java/hello&quot;);\n        //  InputStream out = new FileInputStream(f);\n        /*\n            序号  方法及描述\n            1   public void close() throws IOException&#123;&#125;\n                关闭此文件输入流并释放与此流有关的所有系统资源。抛出IOException异常。\n            2   protected void finalize()throws IOException &#123;&#125;\n                这个方法清除与该文件的连接。确保在不再引用文件输入流时调用其 close 方法。抛出IOException异常。\n            3   public int read(int r)throws IOException&#123;&#125;\n                这个方法从 InputStream 对象读取指定字节的数据。返回为整数值。返回下一字节数据，如果已经到结尾则返回-1。\n            4   public int read(byte[] r) throws IOException&#123;&#125;\n                这个方法从输入流读取r.length长度的字节。返回读取的字节数。如果是文件结尾则返回-1。\n            5   public int available() throws IOException&#123;&#125;\n                返回下一次对此输入流调用的方法可以不受阻塞地从此输入流读取的字节数。返回一个整数值。\n         */\n        System.out.println(&quot;打印输出读取文件demo&quot;);\n        InputStream is1 = new FileInputStream(&quot;test.txt&quot;);\n        int size = is1.available();\n        for (int i=0;i&lt;size;i++) &#123;\n            System.out.println((char) is1.read());\n\n        &#125;\n    &#125;\n\n    public void WriteFileDemo() throws IOException &#123;\n        //FileOutputStream 创建一个文件向文件中写数据\n        //  File f = new File(&quot;C:/java/hello&quot;);\n        //  OutputStream f = new FileOutputStream(f);\n        /*\n            序号  方法及描述\n            1   public void close() throws IOException&#123;&#125;\n                关闭此文件输入流并释放与此流有关的所有系统资源。抛出IOException异常。\n            2   protected void finalize()throws IOException &#123;&#125;\n                这个方法清除与该文件的连接。确保在不再引用文件输入流时调用其 close 方法。抛出IOException异常。\n            3   public void write(int w)throws IOException&#123;&#125;\n                这个方法把指定的字节写到输出流中。\n            4   public void write(byte[] w)\n                把指定数组中w.length长度的字节写到OutputStream中。\n         */\n        System.out.println(&quot;打印输出写入文件demo&quot;);\n        byte bWrite[] = &#123;11,21,3,38,5&#125;;\n        OutputStream os1 = new FileOutputStream(&quot;test.txt&quot;);\n        for (int i=0;i&lt;bWrite.length;i++)&#123;\n            os1.write(bWrite[i]);\n        &#125;\n        os1.close();\n    &#125;\n\n    public void CreateDirs()&#123;\n        //文件和I/O ，目录\n        /*\n            File类\n            - mkdir( )方法创建一个文件夹，成功则返回true，失败则返回false。失败表明File对象指定的路径已经存在，或者由于整个路径还不存在，该文件夹不能被创建。\n            - mkdirs()方法创建一个文件夹和它的所有父文件夹。\n        */\n        String dirname = &quot;/Users/gaozhiyong/Documents/GitHub/javaLearn/tmp/testdir/test&quot;;\n        File dir1 = new File(dirname);\n        //   创建目录\n        dir1.mkdirs();\n\n    &#125;\n\n    public void ReadDirs()&#123;\n        /*\n            一个目录其实就是一个 File 对象，它包含其他文件和文件夹。\n            如果创建一个 File 对象并且它是一个目录，那么调用 isDirectory() 方法会返回 true。\n            可以通过调用该对象上的 list() 方法，来提取它包含的文件和文件夹的列表。\n         */\n        String dirname = &quot;/Users/gaozhiyong/Documents/GitHub/javaLearn&quot;;\n        File dir2 = new File(dirname);\n        if (dir2.isDirectory())&#123;\n            System.out.println(&quot;目录&quot;+ dirname);\n            String[] s1 = dir2.list();\n            for (int i=0;i&lt;s1.length;i++)&#123;\n                File f = new File(dirname + &#39;/&#39; + s1[i]);\n                if (f.isDirectory())&#123;\n                    System.out.println(s1[i] + &quot;是一个目录&quot;);\n                &#125;else &#123;\n                    System.out.println(s1[i] + &quot;是一个文件&quot;);\n                &#125;\n            &#125;\n        &#125;else &#123;\n            System.out.println(dirname +&quot;不是一个目录&quot;);\n        &#125;\n    &#125;\n\n    public void DeleteDirs()&#123;\n        //删除文件/目录\n        /*\n            删除文件可以使用 java.io.File.delete() 方法\n            当删除某一目录时，必须保证该目录下没有其他文件才能正确删除，否则将删除失败\n         */\n        String dirname = &quot;/Users/gaozhiyong/Documents/GitHub/javaLearn/tmp/testdir&quot;;\n        File dir3 = new File(dirname);\n        File[] files = dir3.listFiles();\n        if (files != null)&#123;\n            for (File f: files)&#123;\n                if (!f.isDirectory())&#123;\n                    f.delete();\n                &#125;\n            &#125;\n        &#125;\n        dir3.delete();\n        System.out.println(&quot;删除成功&quot;);\n    &#125;\n\n\n    public static void main(String[] args) throws IOException &#123;\n        StreamFileIODemo s = new StreamFileIODemo();\n//        s.printChar();\n//        s.printStr();\n//        s.WriteFileDemo();\n//        s.CreateDirs();\n//        s.ReadDirs();\n        s.DeleteDirs();\n    &#125;\n&#125;\n</code></pre>\n<hr>\n<h3 id=\"about-me\">About ME</h3>\n<h5 id=\"读书城南-在未来面前我们都是孩子\">👋 读书城南，🤔\n在未来面前，我们都是孩子～</h5>\n<ul>\n<li>📙\n一个热衷于探索学习新方向、新事物的智能产品经理，闲暇时间喜欢coding💻、画图🎨、音乐🎵、学习ing~</li>\n</ul>\n<h5 id=\"social-media\">👋 Social Media</h5>\n<ul>\n<li><p>🛠️ Blog: <a href=\"http://oceaneyes.top\">http://oceaneyes.top</a></p></li>\n<li><p>⚡ PM导航: <a href=\"https://pmhub.oceangzy.top\">https://pmhub.oceangzy.top</a></p></li>\n<li><p>☘️ CNBLOG: <a href=\"https://www.cnblogs.com/oceaneyes-gzy/\">https://www.cnblogs.com/oceaneyes-gzy/</a></p></li>\n<li><p>🌱 AI PRJ自己部署的一些算法demo: <a href=\"http://ai.oceangzy.top/\">http://ai.oceangzy.top/</a></p></li>\n<li><p>📫 Email: 1450136519@qq.com</p></li>\n<li><p>💬 WeChat: <a href=\"https://oceaneyes.top/img/wechatqrcode.jpg\">OCEANGZY</a></p></li>\n<li><p>💬 公众号: <a href=\"https://oceaneyes.top/img/wechatgzh.jpeg\">UncleJoker-GZY</a></p></li>\n</ul>\n<h5 id=\"加入小组\">👋 加入小组~</h5>\n<p><img src=\"https://oceaneyes.top/img/zhishigroup.jpg\" title=\"加入组织\" alt width=\"240\"></p>\n<h5 id=\"感谢打赏\">👋 感谢打赏~</h5>\n<p><img src=\"https://oceaneyes.top/img/alipay.jpg\" title=\"支付宝打赏\" alt width=\"140\">\n<img src=\"https://oceaneyes.top/img/wechatpay.jpg\" title=\"微信打赏\" alt width=\"140\"></p>\n","categories":[{"name":"Java","path":"api/categories/Java.json"}],"tags":[{"name":"Java","path":"api/tags/Java.json"}]}