{"title":"学习如何为产品选择合适的推荐算法","slug":"学习如何为产品选择合适的推荐算法","date":"2018-11-25T14:30:00.000Z","updated":"2022-09-30T06:56:37.192Z","comments":true,"path":"api/articles/学习如何为产品选择合适的推荐算法.json","excerpt":null,"covers":["https://oceaneyes.top/img/zhishigroup.jpg","https://oceaneyes.top/img/alipay.jpg","https://oceaneyes.top/img/wechatpay.jpg"],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h3 id=\"常见推荐机制算法\">常见推荐机制/算法</h3>\n<h4 id=\"基础推荐机制\">基础推荐机制</h4>\n<table>\n<colgroup>\n<col style=\"width: 16%\">\n<col style=\"width: 30%\">\n<col style=\"width: 53%\">\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th><strong>机制</strong></th>\n<th><strong>应用场景</strong></th>\n<th><strong>原理概述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>内容推荐</td>\n<td>适用于冷启动</td>\n<td></td>\n</tr>\n<tr class=\"even\">\n<td>基于内容的协同过滤</td>\n<td>数据量较大</td>\n<td>判断内容相似度，相似度高的内容；播放内容A的用户，也会对内容B感兴趣</td>\n</tr>\n<tr class=\"odd\">\n<td>基于用户的协同过滤</td>\n<td>数据量较大，但数据量越大可信度越低</td>\n<td>把数据代入专门计算相似度的公式，获得不同用户（二者）口味的相似度；推测相似度高的用户，喜好的内容也类似，进而可以相互推荐</td>\n</tr>\n<tr class=\"even\">\n<td>基于标签的推荐</td>\n<td>适用于冷启动</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><p><strong>协同过滤的风险</strong>\n协同过滤技术在个性化推荐初期具有较好的效果，但随着产品结构、内容复杂度和用户人数的不断增加，协同过滤技术的缺点也一点一点的暴露出来了。</p>\n<ul>\n<li>稀疏性（sparity）\n大多数推荐系统中，每个用户涉及的信息量较为有限；用户数据最多不过评估到了百分分之一，造成评估矩阵数据相当稀疏，增加寻找相似用户集的难度，导致推荐效果大大降低</li>\n<li>扩展性（scalability）\n“最近邻居”算法的计算量虽则用户和项的增加而大大增加，对于百万之巨的数目，通常的算法将遭遇严重的扩展性问题</li>\n<li>精确性（accuracy）\n寻找相近用户来产生推荐集，在数据量较大的情况下，推荐的可信度也会降低</li>\n</ul></li>\n</ul>\n<h4 id=\"经典算法\">经典算法</h4>\n<table>\n<colgroup>\n<col style=\"width: 17%\">\n<col style=\"width: 17%\">\n<col style=\"width: 65%\">\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>算法</th>\n<th>应用机制</th>\n<th>原理概述</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>topN</td>\n<td>基础算法</td>\n<td>1、直接用List的sort方法进行排序处理\n2、使用排序二叉树进行排序，然后取出前N名\n3、使用最大堆排序，然后取出前N名</td>\n</tr>\n<tr class=\"even\">\n<td>矩阵算法</td>\n<td>基础算法</td>\n<td>找到内容和内容之间相关性最高的，用topN的方式排序，就可以将内容相关性高的做推荐</td>\n</tr>\n<tr class=\"odd\">\n<td>内容关联算法</td>\n<td>内容推荐</td>\n<td>将item的基本属性、内容信息提取出来；抽出taglist，为每一个tag赋一个权重。不需要冷启动，时效高；但是对item需要解析，所以对音视频等不太友好；推出的内容缺乏惊喜，内容同质化严重</td>\n</tr>\n<tr class=\"even\">\n<td>协同过滤算法</td>\n<td>协同过滤</td>\n<td>有惊喜，只依赖用户行为，不需要对内容完全解析；但是需要大量数据才能运转</td>\n</tr>\n<tr class=\"odd\">\n<td>神经网络矩阵分解</td>\n<td>协同推荐基础算法</td>\n<td>用户和内容之间自关联，用cf-nade建模为用户和内容评分，模型中可以用隐式反馈（动态指标）帮助克服评分稀疏的问题\n【注：显示反馈-评分，评级；隐式反馈-操作行为等指标】</td>\n</tr>\n<tr class=\"even\">\n<td>slope one</td>\n<td>基于内容协同过滤</td>\n<td>通过评分之间的差值，推测另一个得分f(x) = x+b</td>\n</tr>\n<tr class=\"odd\">\n<td>用户行为轨迹</td>\n<td></td>\n<td>严格来说不算是一种算法，该逻辑的重点是依据单个用户的一条行为轨迹，对场景进行切分。\n实现与场景匹配有助于提升推荐效果，能够提升用户的使用时长，以及用户活跃度</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"混合合推荐算法\">混合合推荐算法：</h4>\n<p>没有哪种推荐技术敢说自己没有弊端,\n往往一个好的推荐系统也不是只用一种推荐技术就解决问题,\n往往都是相互结合来弥补彼此的不足, 常见的组合方式如下</p>\n<ol type=\"1\">\n<li>混合推荐技术: 同时使用多种推荐技术再加权取最优;</li>\n<li>切换推荐技术: 根据用户场景使用不同的推荐技术;</li>\n<li>特征组合推荐技术:\n将一种推荐技术的输出作为特征放到另一个推荐技术当中;</li>\n<li>层叠推荐技术:\n一个推荐模块过程中从另一个推荐模块中获取结果用于自己产出结果</li>\n</ol>\n<p>综合所有的推荐策略和算法，大致可以分为以下常见的推荐策略：</p>\n<ol type=\"1\">\n<li>基于内容的推荐；</li>\n<li>协同过滤推荐；</li>\n<li>混合推荐；</li>\n<li>流行度推荐；</li>\n<li>其他更高级的；</li>\n</ol>\n<hr>\n<h3 id=\"about-me\">About ME</h3>\n<h5 id=\"读书城南-在未来面前我们都是孩子\">👋 读书城南，🤔\n在未来面前，我们都是孩子～</h5>\n<ul>\n<li>📙\n一个热衷于探索学习新方向、新事物的智能产品经理，闲暇时间喜欢coding💻、画图🎨、音乐🎵、学习ing~</li>\n</ul>\n<h5 id=\"social-media\">👋 Social Media</h5>\n<ul>\n<li><p>🛠️ Blog: <a href=\"http://oceaneyes.top\">http://oceaneyes.top</a></p></li>\n<li><p>⚡ PM导航: <a href=\"https://pmhub.oceangzy.top\">https://pmhub.oceangzy.top</a></p></li>\n<li><p>☘️ CNBLOG: <a href=\"https://www.cnblogs.com/oceaneyes-gzy/\">https://www.cnblogs.com/oceaneyes-gzy/</a></p></li>\n<li><p>🌱 AI PRJ自己部署的一些算法demo: <a href=\"http://ai.oceangzy.top/\">http://ai.oceangzy.top/</a></p></li>\n<li><p>📫 Email: 1450136519@qq.com</p></li>\n<li><p>💬 WeChat: <a href=\"https://oceaneyes.top/img/wechatqrcode.jpg\">OCEANGZY</a></p></li>\n<li><p>💬 公众号: <a href=\"https://oceaneyes.top/img/wechatgzh.jpeg\">UncleJoker-GZY</a></p></li>\n</ul>\n<h5 id=\"加入小组\">👋 加入小组~</h5>\n<p><img src=\"https://oceaneyes.top/img/zhishigroup.jpg\" title=\"加入组织\" alt width=\"240\"></p>\n<h5 id=\"感谢打赏\">👋 感谢打赏~</h5>\n<p><img src=\"https://oceaneyes.top/img/alipay.jpg\" title=\"支付宝打赏\" alt width=\"140\">\n<img src=\"https://oceaneyes.top/img/wechatpay.jpg\" title=\"微信打赏\" alt width=\"140\"></p>\n","more":"<h3 id=\"常见推荐机制算法\">常见推荐机制/算法</h3>\n<h4 id=\"基础推荐机制\">基础推荐机制</h4>\n<table>\n<colgroup>\n<col style=\"width: 16%\">\n<col style=\"width: 30%\">\n<col style=\"width: 53%\">\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th><strong>机制</strong></th>\n<th><strong>应用场景</strong></th>\n<th><strong>原理概述</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>内容推荐</td>\n<td>适用于冷启动</td>\n<td></td>\n</tr>\n<tr class=\"even\">\n<td>基于内容的协同过滤</td>\n<td>数据量较大</td>\n<td>判断内容相似度，相似度高的内容；播放内容A的用户，也会对内容B感兴趣</td>\n</tr>\n<tr class=\"odd\">\n<td>基于用户的协同过滤</td>\n<td>数据量较大，但数据量越大可信度越低</td>\n<td>把数据代入专门计算相似度的公式，获得不同用户（二者）口味的相似度；推测相似度高的用户，喜好的内容也类似，进而可以相互推荐</td>\n</tr>\n<tr class=\"even\">\n<td>基于标签的推荐</td>\n<td>适用于冷启动</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><p><strong>协同过滤的风险</strong>\n协同过滤技术在个性化推荐初期具有较好的效果，但随着产品结构、内容复杂度和用户人数的不断增加，协同过滤技术的缺点也一点一点的暴露出来了。</p>\n<ul>\n<li>稀疏性（sparity）\n大多数推荐系统中，每个用户涉及的信息量较为有限；用户数据最多不过评估到了百分分之一，造成评估矩阵数据相当稀疏，增加寻找相似用户集的难度，导致推荐效果大大降低</li>\n<li>扩展性（scalability）\n“最近邻居”算法的计算量虽则用户和项的增加而大大增加，对于百万之巨的数目，通常的算法将遭遇严重的扩展性问题</li>\n<li>精确性（accuracy）\n寻找相近用户来产生推荐集，在数据量较大的情况下，推荐的可信度也会降低</li>\n</ul></li>\n</ul>\n<h4 id=\"经典算法\">经典算法</h4>\n<table>\n<colgroup>\n<col style=\"width: 17%\">\n<col style=\"width: 17%\">\n<col style=\"width: 65%\">\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>算法</th>\n<th>应用机制</th>\n<th>原理概述</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>topN</td>\n<td>基础算法</td>\n<td>1、直接用List的sort方法进行排序处理\n2、使用排序二叉树进行排序，然后取出前N名\n3、使用最大堆排序，然后取出前N名</td>\n</tr>\n<tr class=\"even\">\n<td>矩阵算法</td>\n<td>基础算法</td>\n<td>找到内容和内容之间相关性最高的，用topN的方式排序，就可以将内容相关性高的做推荐</td>\n</tr>\n<tr class=\"odd\">\n<td>内容关联算法</td>\n<td>内容推荐</td>\n<td>将item的基本属性、内容信息提取出来；抽出taglist，为每一个tag赋一个权重。不需要冷启动，时效高；但是对item需要解析，所以对音视频等不太友好；推出的内容缺乏惊喜，内容同质化严重</td>\n</tr>\n<tr class=\"even\">\n<td>协同过滤算法</td>\n<td>协同过滤</td>\n<td>有惊喜，只依赖用户行为，不需要对内容完全解析；但是需要大量数据才能运转</td>\n</tr>\n<tr class=\"odd\">\n<td>神经网络矩阵分解</td>\n<td>协同推荐基础算法</td>\n<td>用户和内容之间自关联，用cf-nade建模为用户和内容评分，模型中可以用隐式反馈（动态指标）帮助克服评分稀疏的问题\n【注：显示反馈-评分，评级；隐式反馈-操作行为等指标】</td>\n</tr>\n<tr class=\"even\">\n<td>slope one</td>\n<td>基于内容协同过滤</td>\n<td>通过评分之间的差值，推测另一个得分f(x) = x+b</td>\n</tr>\n<tr class=\"odd\">\n<td>用户行为轨迹</td>\n<td></td>\n<td>严格来说不算是一种算法，该逻辑的重点是依据单个用户的一条行为轨迹，对场景进行切分。\n实现与场景匹配有助于提升推荐效果，能够提升用户的使用时长，以及用户活跃度</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"混合合推荐算法\">混合合推荐算法：</h4>\n<p>没有哪种推荐技术敢说自己没有弊端,\n往往一个好的推荐系统也不是只用一种推荐技术就解决问题,\n往往都是相互结合来弥补彼此的不足, 常见的组合方式如下</p>\n<ol type=\"1\">\n<li>混合推荐技术: 同时使用多种推荐技术再加权取最优;</li>\n<li>切换推荐技术: 根据用户场景使用不同的推荐技术;</li>\n<li>特征组合推荐技术:\n将一种推荐技术的输出作为特征放到另一个推荐技术当中;</li>\n<li>层叠推荐技术:\n一个推荐模块过程中从另一个推荐模块中获取结果用于自己产出结果</li>\n</ol>\n<p>综合所有的推荐策略和算法，大致可以分为以下常见的推荐策略：</p>\n<ol type=\"1\">\n<li>基于内容的推荐；</li>\n<li>协同过滤推荐；</li>\n<li>混合推荐；</li>\n<li>流行度推荐；</li>\n<li>其他更高级的；</li>\n</ol>\n<hr>\n<h3 id=\"about-me\">About ME</h3>\n<h5 id=\"读书城南-在未来面前我们都是孩子\">👋 读书城南，🤔\n在未来面前，我们都是孩子～</h5>\n<ul>\n<li>📙\n一个热衷于探索学习新方向、新事物的智能产品经理，闲暇时间喜欢coding💻、画图🎨、音乐🎵、学习ing~</li>\n</ul>\n<h5 id=\"social-media\">👋 Social Media</h5>\n<ul>\n<li><p>🛠️ Blog: <a href=\"http://oceaneyes.top\">http://oceaneyes.top</a></p></li>\n<li><p>⚡ PM导航: <a href=\"https://pmhub.oceangzy.top\">https://pmhub.oceangzy.top</a></p></li>\n<li><p>☘️ CNBLOG: <a href=\"https://www.cnblogs.com/oceaneyes-gzy/\">https://www.cnblogs.com/oceaneyes-gzy/</a></p></li>\n<li><p>🌱 AI PRJ自己部署的一些算法demo: <a href=\"http://ai.oceangzy.top/\">http://ai.oceangzy.top/</a></p></li>\n<li><p>📫 Email: 1450136519@qq.com</p></li>\n<li><p>💬 WeChat: <a href=\"https://oceaneyes.top/img/wechatqrcode.jpg\">OCEANGZY</a></p></li>\n<li><p>💬 公众号: <a href=\"https://oceaneyes.top/img/wechatgzh.jpeg\">UncleJoker-GZY</a></p></li>\n</ul>\n<h5 id=\"加入小组\">👋 加入小组~</h5>\n<p><img src=\"https://oceaneyes.top/img/zhishigroup.jpg\" title=\"加入组织\" alt width=\"240\"></p>\n<h5 id=\"感谢打赏\">👋 感谢打赏~</h5>\n<p><img src=\"https://oceaneyes.top/img/alipay.jpg\" title=\"支付宝打赏\" alt width=\"140\">\n<img src=\"https://oceaneyes.top/img/wechatpay.jpg\" title=\"微信打赏\" alt width=\"140\"></p>\n","categories":[{"name":"产品","path":"api/categories/产品.json"},{"name":"推荐","path":"api/categories/推荐.json"}],"tags":[{"name":"产品","path":"api/tags/产品.json"},{"name":"推荐","path":"api/tags/推荐.json"}]}