{"title":"计算广告-知识储备","slug":"计算广告-知识储备","date":"2019-01-01T16:00:00.000Z","updated":"2022-09-30T06:56:37.207Z","comments":true,"path":"api/articles/计算广告-知识储备.json","excerpt":null,"covers":["https://oceaneyes.top/img/zhishigroup.jpg","https://oceaneyes.top/img/alipay.jpg","https://oceaneyes.top/img/wechatpay.jpg"],"content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h1 id=\"计算广告-知识储备\">计算广告-知识储备</h1>\n<h2 id=\"信息检索\">1、信息检索</h2>\n<h4 id=\"倒排索引\">1.1、倒排索引</h4>\n<p>​\n核心目的，将从大量文档中查找包含某些词的文档集合，用O(1)的时间复杂度完成。</p>\n<p>​ 基本操作：</p>\n<p>​ 1、向索引中加入一个新文档</p>\n<p>​ 2、给定一个有多个关键词组成的查询时，返回对应的文档集合</p>\n<h4 id=\"向量空间模型\">1.2、向量空间模型</h4>\n<p>​ 向量空间模型（Vector Space Model\n，VSM），信息检索中最基础且最重要的文档相似度度量方法之一。</p>\n<p>​ 核心：</p>\n<p>​ 1、文档的表示方法</p>\n<p>​ 用各个关键词（term）在文档中强度组成的矢量来表示该文档<br>\n<span class=\"math display\">\\[\nD=(X_1,X_2,...X_m)^T\n\\]</span></p>\n<p>​ 2、相似度计算方法</p>\n<h2 id=\"最优化方法\">2、最优化方法</h2>\n<h4 id=\"下降单纯型法\">2.1、下降单纯型法</h4>\n<h4 id=\"梯度方法\">2.2、梯度方法</h4>\n<h4 id=\"拟牛顿方法\">2.3、拟牛顿方法</h4>\n<h4 id=\"trust-region方法\">2.4、Trust-Region方法</h4>\n<h4 id=\"带约束-优化和拉格朗日法\">2.5、带约束 优化和拉格朗日法</h4>\n<h2 id=\"统计机器学习\">3、统计机器学习</h2>\n<h4 id=\"最大熵原理\">3.1、最大熵原理</h4>\n<h4 id=\"指数族分布\">3.2、指数族分布</h4>\n<h4 id=\"混合模型和em算法\">3.3、混合模型和EM算法</h4>\n<h4 id=\"贝叶斯学习\">3.4、贝叶斯学习</h4>\n<h4 id=\"共轭先验\">3.5、共轭先验</h4>\n<h4 id=\"经验贝叶斯\">3.6、经验贝叶斯</h4>\n<h4 id=\"变分法\">3.7、变分法</h4>\n<hr>\n<h3 id=\"about-me\">About ME</h3>\n<h5 id=\"读书城南-在未来面前我们都是孩子\">👋 读书城南，🤔\n在未来面前，我们都是孩子～</h5>\n<ul>\n<li>📙\n一个热衷于探索学习新方向、新事物的智能产品经理，闲暇时间喜欢coding💻、画图🎨、音乐🎵、学习ing~</li>\n</ul>\n<h5 id=\"social-media\">👋 Social Media</h5>\n<ul>\n<li><p>🛠️ Blog: <a href=\"http://oceaneyes.top\">http://oceaneyes.top</a></p></li>\n<li><p>⚡ PM导航: <a href=\"https://pmhub.oceangzy.top\">https://pmhub.oceangzy.top</a></p></li>\n<li><p>☘️ CNBLOG: <a href=\"https://www.cnblogs.com/oceaneyes-gzy/\">https://www.cnblogs.com/oceaneyes-gzy/</a></p></li>\n<li><p>🌱 AI PRJ自己部署的一些算法demo: <a href=\"http://ai.oceangzy.top/\">http://ai.oceangzy.top/</a></p></li>\n<li><p>📫 Email: 1450136519@qq.com</p></li>\n<li><p>💬 WeChat: <a href=\"https://oceaneyes.top/img/wechatqrcode.jpg\">OCEANGZY</a></p></li>\n<li><p>💬 公众号: <a href=\"https://oceaneyes.top/img/wechatgzh.jpeg\">UncleJoker-GZY</a></p></li>\n</ul>\n<h5 id=\"加入小组\">👋 加入小组~</h5>\n<p><img src=\"https://oceaneyes.top/img/zhishigroup.jpg\" title=\"加入组织\" alt width=\"240\"></p>\n<h5 id=\"感谢打赏\">👋 感谢打赏~</h5>\n<p><img src=\"https://oceaneyes.top/img/alipay.jpg\" title=\"支付宝打赏\" alt width=\"140\">\n<img src=\"https://oceaneyes.top/img/wechatpay.jpg\" title=\"微信打赏\" alt width=\"140\"></p>\n","more":"<h1 id=\"计算广告-知识储备\">计算广告-知识储备</h1>\n<h2 id=\"信息检索\">1、信息检索</h2>\n<h4 id=\"倒排索引\">1.1、倒排索引</h4>\n<p>​\n核心目的，将从大量文档中查找包含某些词的文档集合，用O(1)的时间复杂度完成。</p>\n<p>​ 基本操作：</p>\n<p>​ 1、向索引中加入一个新文档</p>\n<p>​ 2、给定一个有多个关键词组成的查询时，返回对应的文档集合</p>\n<h4 id=\"向量空间模型\">1.2、向量空间模型</h4>\n<p>​ 向量空间模型（Vector Space Model\n，VSM），信息检索中最基础且最重要的文档相似度度量方法之一。</p>\n<p>​ 核心：</p>\n<p>​ 1、文档的表示方法</p>\n<p>​ 用各个关键词（term）在文档中强度组成的矢量来表示该文档<br>\n<span class=\"math display\">\\[\nD=(X_1,X_2,...X_m)^T\n\\]</span></p>\n<p>​ 2、相似度计算方法</p>\n<h2 id=\"最优化方法\">2、最优化方法</h2>\n<h4 id=\"下降单纯型法\">2.1、下降单纯型法</h4>\n<h4 id=\"梯度方法\">2.2、梯度方法</h4>\n<h4 id=\"拟牛顿方法\">2.3、拟牛顿方法</h4>\n<h4 id=\"trust-region方法\">2.4、Trust-Region方法</h4>\n<h4 id=\"带约束-优化和拉格朗日法\">2.5、带约束 优化和拉格朗日法</h4>\n<h2 id=\"统计机器学习\">3、统计机器学习</h2>\n<h4 id=\"最大熵原理\">3.1、最大熵原理</h4>\n<h4 id=\"指数族分布\">3.2、指数族分布</h4>\n<h4 id=\"混合模型和em算法\">3.3、混合模型和EM算法</h4>\n<h4 id=\"贝叶斯学习\">3.4、贝叶斯学习</h4>\n<h4 id=\"共轭先验\">3.5、共轭先验</h4>\n<h4 id=\"经验贝叶斯\">3.6、经验贝叶斯</h4>\n<h4 id=\"变分法\">3.7、变分法</h4>\n<hr>\n<h3 id=\"about-me\">About ME</h3>\n<h5 id=\"读书城南-在未来面前我们都是孩子\">👋 读书城南，🤔\n在未来面前，我们都是孩子～</h5>\n<ul>\n<li>📙\n一个热衷于探索学习新方向、新事物的智能产品经理，闲暇时间喜欢coding💻、画图🎨、音乐🎵、学习ing~</li>\n</ul>\n<h5 id=\"social-media\">👋 Social Media</h5>\n<ul>\n<li><p>🛠️ Blog: <a href=\"http://oceaneyes.top\">http://oceaneyes.top</a></p></li>\n<li><p>⚡ PM导航: <a href=\"https://pmhub.oceangzy.top\">https://pmhub.oceangzy.top</a></p></li>\n<li><p>☘️ CNBLOG: <a href=\"https://www.cnblogs.com/oceaneyes-gzy/\">https://www.cnblogs.com/oceaneyes-gzy/</a></p></li>\n<li><p>🌱 AI PRJ自己部署的一些算法demo: <a href=\"http://ai.oceangzy.top/\">http://ai.oceangzy.top/</a></p></li>\n<li><p>📫 Email: 1450136519@qq.com</p></li>\n<li><p>💬 WeChat: <a href=\"https://oceaneyes.top/img/wechatqrcode.jpg\">OCEANGZY</a></p></li>\n<li><p>💬 公众号: <a href=\"https://oceaneyes.top/img/wechatgzh.jpeg\">UncleJoker-GZY</a></p></li>\n</ul>\n<h5 id=\"加入小组\">👋 加入小组~</h5>\n<p><img src=\"https://oceaneyes.top/img/zhishigroup.jpg\" title=\"加入组织\" alt width=\"240\"></p>\n<h5 id=\"感谢打赏\">👋 感谢打赏~</h5>\n<p><img src=\"https://oceaneyes.top/img/alipay.jpg\" title=\"支付宝打赏\" alt width=\"140\">\n<img src=\"https://oceaneyes.top/img/wechatpay.jpg\" title=\"微信打赏\" alt width=\"140\"></p>\n","categories":[{"name":"广告产品","path":"api/categories/广告产品.json"},{"name":"计算广告","path":"api/categories/计算广告.json"}],"tags":[{"name":"广告产品","path":"api/tags/广告产品.json"},{"name":"计算广告","path":"api/tags/计算广告.json"}]}